// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operations.proto

package gitaly

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Merge type enum
type UserMergeBranchRequest_MergeType int32

const (
	UserMergeBranchRequest_NoFastForward   UserMergeBranchRequest_MergeType = 0
	UserMergeBranchRequest_FastForward     UserMergeBranchRequest_MergeType = 1
	UserMergeBranchRequest_FastForwardOnly UserMergeBranchRequest_MergeType = 2
)

var UserMergeBranchRequest_MergeType_name = map[int32]string{
	0: "NoFastForward",
	1: "FastForward",
	2: "FastForwardOnly",
}

var UserMergeBranchRequest_MergeType_value = map[string]int32{
	"NoFastForward":   0,
	"FastForward":     1,
	"FastForwardOnly": 2,
}

func (x UserMergeBranchRequest_MergeType) String() string {
	return proto.EnumName(UserMergeBranchRequest_MergeType_name, int32(x))
}

func (UserMergeBranchRequest_MergeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{8, 0}
}

type UserCherryPickResponse_CreateTreeError int32

const (
	UserCherryPickResponse_NONE     UserCherryPickResponse_CreateTreeError = 0
	UserCherryPickResponse_EMPTY    UserCherryPickResponse_CreateTreeError = 1
	UserCherryPickResponse_CONFLICT UserCherryPickResponse_CreateTreeError = 2
)

var UserCherryPickResponse_CreateTreeError_name = map[int32]string{
	0: "NONE",
	1: "EMPTY",
	2: "CONFLICT",
}

var UserCherryPickResponse_CreateTreeError_value = map[string]int32{
	"NONE":     0,
	"EMPTY":    1,
	"CONFLICT": 2,
}

func (x UserCherryPickResponse_CreateTreeError) String() string {
	return proto.EnumName(UserCherryPickResponse_CreateTreeError_name, int32(x))
}

func (UserCherryPickResponse_CreateTreeError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{20, 0}
}

type UserRevertResponse_CreateTreeError int32

const (
	UserRevertResponse_NONE     UserRevertResponse_CreateTreeError = 0
	UserRevertResponse_EMPTY    UserRevertResponse_CreateTreeError = 1
	UserRevertResponse_CONFLICT UserRevertResponse_CreateTreeError = 2
)

var UserRevertResponse_CreateTreeError_name = map[int32]string{
	0: "NONE",
	1: "EMPTY",
	2: "CONFLICT",
}

var UserRevertResponse_CreateTreeError_value = map[string]int32{
	"NONE":     0,
	"EMPTY":    1,
	"CONFLICT": 2,
}

func (x UserRevertResponse_CreateTreeError) String() string {
	return proto.EnumName(UserRevertResponse_CreateTreeError_name, int32(x))
}

func (UserRevertResponse_CreateTreeError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{22, 0}
}

type UserCreateBranchRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	BranchName           []byte      `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	User                 *User       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	StartPoint           []byte      `protobuf:"bytes,4,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserCreateBranchRequest) Reset()         { *m = UserCreateBranchRequest{} }
func (m *UserCreateBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UserCreateBranchRequest) ProtoMessage()    {}
func (*UserCreateBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{0}
}

func (m *UserCreateBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateBranchRequest.Unmarshal(m, b)
}
func (m *UserCreateBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateBranchRequest.Marshal(b, m, deterministic)
}
func (m *UserCreateBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateBranchRequest.Merge(m, src)
}
func (m *UserCreateBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UserCreateBranchRequest.Size(m)
}
func (m *UserCreateBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateBranchRequest proto.InternalMessageInfo

func (m *UserCreateBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserCreateBranchRequest) GetBranchName() []byte {
	if m != nil {
		return m.BranchName
	}
	return nil
}

func (m *UserCreateBranchRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserCreateBranchRequest) GetStartPoint() []byte {
	if m != nil {
		return m.StartPoint
	}
	return nil
}

type UserCreateBranchResponse struct {
	Branch *Branch `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	// Error returned by the pre-receive hook. If no error was thrown,
	// it's the empty string ("")
	PreReceiveError      string   `protobuf:"bytes,2,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCreateBranchResponse) Reset()         { *m = UserCreateBranchResponse{} }
func (m *UserCreateBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UserCreateBranchResponse) ProtoMessage()    {}
func (*UserCreateBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{1}
}

func (m *UserCreateBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateBranchResponse.Unmarshal(m, b)
}
func (m *UserCreateBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateBranchResponse.Marshal(b, m, deterministic)
}
func (m *UserCreateBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateBranchResponse.Merge(m, src)
}
func (m *UserCreateBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UserCreateBranchResponse.Size(m)
}
func (m *UserCreateBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateBranchResponse proto.InternalMessageInfo

func (m *UserCreateBranchResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

func (m *UserCreateBranchResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserDeleteBranchRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	BranchName           []byte      `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	User                 *User       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserDeleteBranchRequest) Reset()         { *m = UserDeleteBranchRequest{} }
func (m *UserDeleteBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UserDeleteBranchRequest) ProtoMessage()    {}
func (*UserDeleteBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{2}
}

func (m *UserDeleteBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteBranchRequest.Unmarshal(m, b)
}
func (m *UserDeleteBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteBranchRequest.Marshal(b, m, deterministic)
}
func (m *UserDeleteBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteBranchRequest.Merge(m, src)
}
func (m *UserDeleteBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UserDeleteBranchRequest.Size(m)
}
func (m *UserDeleteBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteBranchRequest proto.InternalMessageInfo

func (m *UserDeleteBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserDeleteBranchRequest) GetBranchName() []byte {
	if m != nil {
		return m.BranchName
	}
	return nil
}

func (m *UserDeleteBranchRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserDeleteBranchResponse struct {
	PreReceiveError      string   `protobuf:"bytes,1,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDeleteBranchResponse) Reset()         { *m = UserDeleteBranchResponse{} }
func (m *UserDeleteBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UserDeleteBranchResponse) ProtoMessage()    {}
func (*UserDeleteBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{3}
}

func (m *UserDeleteBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteBranchResponse.Unmarshal(m, b)
}
func (m *UserDeleteBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteBranchResponse.Marshal(b, m, deterministic)
}
func (m *UserDeleteBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteBranchResponse.Merge(m, src)
}
func (m *UserDeleteBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UserDeleteBranchResponse.Size(m)
}
func (m *UserDeleteBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteBranchResponse proto.InternalMessageInfo

func (m *UserDeleteBranchResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserDeleteTagRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	TagName              []byte      `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	User                 *User       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserDeleteTagRequest) Reset()         { *m = UserDeleteTagRequest{} }
func (m *UserDeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*UserDeleteTagRequest) ProtoMessage()    {}
func (*UserDeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{4}
}

func (m *UserDeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteTagRequest.Unmarshal(m, b)
}
func (m *UserDeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *UserDeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteTagRequest.Merge(m, src)
}
func (m *UserDeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_UserDeleteTagRequest.Size(m)
}
func (m *UserDeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteTagRequest proto.InternalMessageInfo

func (m *UserDeleteTagRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserDeleteTagRequest) GetTagName() []byte {
	if m != nil {
		return m.TagName
	}
	return nil
}

func (m *UserDeleteTagRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserDeleteTagResponse struct {
	PreReceiveError      string   `protobuf:"bytes,1,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDeleteTagResponse) Reset()         { *m = UserDeleteTagResponse{} }
func (m *UserDeleteTagResponse) String() string { return proto.CompactTextString(m) }
func (*UserDeleteTagResponse) ProtoMessage()    {}
func (*UserDeleteTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{5}
}

func (m *UserDeleteTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteTagResponse.Unmarshal(m, b)
}
func (m *UserDeleteTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteTagResponse.Marshal(b, m, deterministic)
}
func (m *UserDeleteTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteTagResponse.Merge(m, src)
}
func (m *UserDeleteTagResponse) XXX_Size() int {
	return xxx_messageInfo_UserDeleteTagResponse.Size(m)
}
func (m *UserDeleteTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteTagResponse proto.InternalMessageInfo

func (m *UserDeleteTagResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserCreateTagRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	TagName              []byte      `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	User                 *User       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	TargetRevision       []byte      `protobuf:"bytes,4,opt,name=target_revision,json=targetRevision,proto3" json:"target_revision,omitempty"`
	Message              []byte      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserCreateTagRequest) Reset()         { *m = UserCreateTagRequest{} }
func (m *UserCreateTagRequest) String() string { return proto.CompactTextString(m) }
func (*UserCreateTagRequest) ProtoMessage()    {}
func (*UserCreateTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{6}
}

func (m *UserCreateTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateTagRequest.Unmarshal(m, b)
}
func (m *UserCreateTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateTagRequest.Marshal(b, m, deterministic)
}
func (m *UserCreateTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateTagRequest.Merge(m, src)
}
func (m *UserCreateTagRequest) XXX_Size() int {
	return xxx_messageInfo_UserCreateTagRequest.Size(m)
}
func (m *UserCreateTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateTagRequest proto.InternalMessageInfo

func (m *UserCreateTagRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserCreateTagRequest) GetTagName() []byte {
	if m != nil {
		return m.TagName
	}
	return nil
}

func (m *UserCreateTagRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserCreateTagRequest) GetTargetRevision() []byte {
	if m != nil {
		return m.TargetRevision
	}
	return nil
}

func (m *UserCreateTagRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type UserCreateTagResponse struct {
	Tag                  *Tag     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Exists               bool     `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	PreReceiveError      string   `protobuf:"bytes,3,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCreateTagResponse) Reset()         { *m = UserCreateTagResponse{} }
func (m *UserCreateTagResponse) String() string { return proto.CompactTextString(m) }
func (*UserCreateTagResponse) ProtoMessage()    {}
func (*UserCreateTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{7}
}

func (m *UserCreateTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateTagResponse.Unmarshal(m, b)
}
func (m *UserCreateTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateTagResponse.Marshal(b, m, deterministic)
}
func (m *UserCreateTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateTagResponse.Merge(m, src)
}
func (m *UserCreateTagResponse) XXX_Size() int {
	return xxx_messageInfo_UserCreateTagResponse.Size(m)
}
func (m *UserCreateTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateTagResponse proto.InternalMessageInfo

func (m *UserCreateTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *UserCreateTagResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *UserCreateTagResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserMergeBranchRequest struct {
	// First message
	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User       *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	CommitId   string      `protobuf:"bytes,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Branch     []byte      `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	Message    []byte      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Second message
	// Tell the server to apply the merge to the branch
	Apply                bool                             `protobuf:"varint,6,opt,name=apply,proto3" json:"apply,omitempty"`
	SkipPreReceive       bool                             `protobuf:"varint,7,opt,name=skip_pre_receive,json=skipPreReceive,proto3" json:"skip_pre_receive,omitempty"`
	MergeType            UserMergeBranchRequest_MergeType `protobuf:"varint,8,opt,name=mergeType,proto3,enum=gitaly.UserMergeBranchRequest_MergeType" json:"mergeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *UserMergeBranchRequest) Reset()         { *m = UserMergeBranchRequest{} }
func (m *UserMergeBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UserMergeBranchRequest) ProtoMessage()    {}
func (*UserMergeBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{8}
}

func (m *UserMergeBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMergeBranchRequest.Unmarshal(m, b)
}
func (m *UserMergeBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMergeBranchRequest.Marshal(b, m, deterministic)
}
func (m *UserMergeBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMergeBranchRequest.Merge(m, src)
}
func (m *UserMergeBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UserMergeBranchRequest.Size(m)
}
func (m *UserMergeBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMergeBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserMergeBranchRequest proto.InternalMessageInfo

func (m *UserMergeBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserMergeBranchRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserMergeBranchRequest) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *UserMergeBranchRequest) GetBranch() []byte {
	if m != nil {
		return m.Branch
	}
	return nil
}

func (m *UserMergeBranchRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UserMergeBranchRequest) GetApply() bool {
	if m != nil {
		return m.Apply
	}
	return false
}

func (m *UserMergeBranchRequest) GetSkipPreReceive() bool {
	if m != nil {
		return m.SkipPreReceive
	}
	return false
}

func (m *UserMergeBranchRequest) GetMergeType() UserMergeBranchRequest_MergeType {
	if m != nil {
		return m.MergeType
	}
	return UserMergeBranchRequest_NoFastForward
}

type UserMergeBranchResponse struct {
	// First message
	// The merge commit the branch will be updated to. The caller can still abort the merge.
	CommitId string `protobuf:"bytes,1,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	// Second message
	// If set, the merge has been applied to the branch.
	BranchUpdate         *OperationBranchUpdate `protobuf:"bytes,3,opt,name=branch_update,json=branchUpdate,proto3" json:"branch_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UserMergeBranchResponse) Reset()         { *m = UserMergeBranchResponse{} }
func (m *UserMergeBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UserMergeBranchResponse) ProtoMessage()    {}
func (*UserMergeBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{9}
}

func (m *UserMergeBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMergeBranchResponse.Unmarshal(m, b)
}
func (m *UserMergeBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMergeBranchResponse.Marshal(b, m, deterministic)
}
func (m *UserMergeBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMergeBranchResponse.Merge(m, src)
}
func (m *UserMergeBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UserMergeBranchResponse.Size(m)
}
func (m *UserMergeBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMergeBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserMergeBranchResponse proto.InternalMessageInfo

func (m *UserMergeBranchResponse) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *UserMergeBranchResponse) GetBranchUpdate() *OperationBranchUpdate {
	if m != nil {
		return m.BranchUpdate
	}
	return nil
}

type OperationBranchUpdate struct {
	// If this string is non-empty the branch has been updated.
	CommitId string `protobuf:"bytes,1,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	// Used for cache invalidation in GitLab
	RepoCreated bool `protobuf:"varint,2,opt,name=repo_created,json=repoCreated,proto3" json:"repo_created,omitempty"`
	// Used for cache invalidation in GitLab
	BranchCreated        bool     `protobuf:"varint,3,opt,name=branch_created,json=branchCreated,proto3" json:"branch_created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationBranchUpdate) Reset()         { *m = OperationBranchUpdate{} }
func (m *OperationBranchUpdate) String() string { return proto.CompactTextString(m) }
func (*OperationBranchUpdate) ProtoMessage()    {}
func (*OperationBranchUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{10}
}

func (m *OperationBranchUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationBranchUpdate.Unmarshal(m, b)
}
func (m *OperationBranchUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationBranchUpdate.Marshal(b, m, deterministic)
}
func (m *OperationBranchUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationBranchUpdate.Merge(m, src)
}
func (m *OperationBranchUpdate) XXX_Size() int {
	return xxx_messageInfo_OperationBranchUpdate.Size(m)
}
func (m *OperationBranchUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationBranchUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_OperationBranchUpdate proto.InternalMessageInfo

func (m *OperationBranchUpdate) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *OperationBranchUpdate) GetRepoCreated() bool {
	if m != nil {
		return m.RepoCreated
	}
	return false
}

func (m *OperationBranchUpdate) GetBranchCreated() bool {
	if m != nil {
		return m.BranchCreated
	}
	return false
}

type UserFFBranchRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User                 *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	CommitId             string      `protobuf:"bytes,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Branch               []byte      `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserFFBranchRequest) Reset()         { *m = UserFFBranchRequest{} }
func (m *UserFFBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UserFFBranchRequest) ProtoMessage()    {}
func (*UserFFBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{11}
}

func (m *UserFFBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFFBranchRequest.Unmarshal(m, b)
}
func (m *UserFFBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFFBranchRequest.Marshal(b, m, deterministic)
}
func (m *UserFFBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFFBranchRequest.Merge(m, src)
}
func (m *UserFFBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UserFFBranchRequest.Size(m)
}
func (m *UserFFBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFFBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserFFBranchRequest proto.InternalMessageInfo

func (m *UserFFBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserFFBranchRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserFFBranchRequest) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *UserFFBranchRequest) GetBranch() []byte {
	if m != nil {
		return m.Branch
	}
	return nil
}

type UserFFBranchResponse struct {
	BranchUpdate         *OperationBranchUpdate `protobuf:"bytes,1,opt,name=branch_update,json=branchUpdate,proto3" json:"branch_update,omitempty"`
	PreReceiveError      string                 `protobuf:"bytes,2,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UserFFBranchResponse) Reset()         { *m = UserFFBranchResponse{} }
func (m *UserFFBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UserFFBranchResponse) ProtoMessage()    {}
func (*UserFFBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{12}
}

func (m *UserFFBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFFBranchResponse.Unmarshal(m, b)
}
func (m *UserFFBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFFBranchResponse.Marshal(b, m, deterministic)
}
func (m *UserFFBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFFBranchResponse.Merge(m, src)
}
func (m *UserFFBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UserFFBranchResponse.Size(m)
}
func (m *UserFFBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFFBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserFFBranchResponse proto.InternalMessageInfo

func (m *UserFFBranchResponse) GetBranchUpdate() *OperationBranchUpdate {
	if m != nil {
		return m.BranchUpdate
	}
	return nil
}

func (m *UserFFBranchResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserRebaseRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User                 *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	RebaseId             string      `protobuf:"bytes,3,opt,name=rebase_id,json=rebaseId,proto3" json:"rebase_id,omitempty"`
	Branch               []byte      `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	BranchSha            string      `protobuf:"bytes,5,opt,name=branch_sha,json=branchSha,proto3" json:"branch_sha,omitempty"`
	RemoteRepository     *Repository `protobuf:"bytes,6,opt,name=remote_repository,json=remoteRepository,proto3" json:"remote_repository,omitempty"`
	RemoteBranch         []byte      `protobuf:"bytes,7,opt,name=remote_branch,json=remoteBranch,proto3" json:"remote_branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserRebaseRequest) Reset()         { *m = UserRebaseRequest{} }
func (m *UserRebaseRequest) String() string { return proto.CompactTextString(m) }
func (*UserRebaseRequest) ProtoMessage()    {}
func (*UserRebaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{13}
}

func (m *UserRebaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRebaseRequest.Unmarshal(m, b)
}
func (m *UserRebaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRebaseRequest.Marshal(b, m, deterministic)
}
func (m *UserRebaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRebaseRequest.Merge(m, src)
}
func (m *UserRebaseRequest) XXX_Size() int {
	return xxx_messageInfo_UserRebaseRequest.Size(m)
}
func (m *UserRebaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRebaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRebaseRequest proto.InternalMessageInfo

func (m *UserRebaseRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserRebaseRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserRebaseRequest) GetRebaseId() string {
	if m != nil {
		return m.RebaseId
	}
	return ""
}

func (m *UserRebaseRequest) GetBranch() []byte {
	if m != nil {
		return m.Branch
	}
	return nil
}

func (m *UserRebaseRequest) GetBranchSha() string {
	if m != nil {
		return m.BranchSha
	}
	return ""
}

func (m *UserRebaseRequest) GetRemoteRepository() *Repository {
	if m != nil {
		return m.RemoteRepository
	}
	return nil
}

func (m *UserRebaseRequest) GetRemoteBranch() []byte {
	if m != nil {
		return m.RemoteBranch
	}
	return nil
}

type UserRebaseResponse struct {
	RebaseSha            string   `protobuf:"bytes,1,opt,name=rebase_sha,json=rebaseSha,proto3" json:"rebase_sha,omitempty"`
	PreReceiveError      string   `protobuf:"bytes,2,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	GitError             string   `protobuf:"bytes,3,opt,name=git_error,json=gitError,proto3" json:"git_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRebaseResponse) Reset()         { *m = UserRebaseResponse{} }
func (m *UserRebaseResponse) String() string { return proto.CompactTextString(m) }
func (*UserRebaseResponse) ProtoMessage()    {}
func (*UserRebaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{14}
}

func (m *UserRebaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRebaseResponse.Unmarshal(m, b)
}
func (m *UserRebaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRebaseResponse.Marshal(b, m, deterministic)
}
func (m *UserRebaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRebaseResponse.Merge(m, src)
}
func (m *UserRebaseResponse) XXX_Size() int {
	return xxx_messageInfo_UserRebaseResponse.Size(m)
}
func (m *UserRebaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRebaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserRebaseResponse proto.InternalMessageInfo

func (m *UserRebaseResponse) GetRebaseSha() string {
	if m != nil {
		return m.RebaseSha
	}
	return ""
}

func (m *UserRebaseResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

func (m *UserRebaseResponse) GetGitError() string {
	if m != nil {
		return m.GitError
	}
	return ""
}

type UserSquashRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User                 *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	SquashId             string      `protobuf:"bytes,3,opt,name=squash_id,json=squashId,proto3" json:"squash_id,omitempty"`
	Branch               []byte      `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	StartSha             string      `protobuf:"bytes,5,opt,name=start_sha,json=startSha,proto3" json:"start_sha,omitempty"`
	EndSha               string      `protobuf:"bytes,6,opt,name=end_sha,json=endSha,proto3" json:"end_sha,omitempty"`
	Author               *User       `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	CommitMessage        []byte      `protobuf:"bytes,8,opt,name=commit_message,json=commitMessage,proto3" json:"commit_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserSquashRequest) Reset()         { *m = UserSquashRequest{} }
func (m *UserSquashRequest) String() string { return proto.CompactTextString(m) }
func (*UserSquashRequest) ProtoMessage()    {}
func (*UserSquashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{15}
}

func (m *UserSquashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSquashRequest.Unmarshal(m, b)
}
func (m *UserSquashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSquashRequest.Marshal(b, m, deterministic)
}
func (m *UserSquashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSquashRequest.Merge(m, src)
}
func (m *UserSquashRequest) XXX_Size() int {
	return xxx_messageInfo_UserSquashRequest.Size(m)
}
func (m *UserSquashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSquashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserSquashRequest proto.InternalMessageInfo

func (m *UserSquashRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserSquashRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserSquashRequest) GetSquashId() string {
	if m != nil {
		return m.SquashId
	}
	return ""
}

func (m *UserSquashRequest) GetBranch() []byte {
	if m != nil {
		return m.Branch
	}
	return nil
}

func (m *UserSquashRequest) GetStartSha() string {
	if m != nil {
		return m.StartSha
	}
	return ""
}

func (m *UserSquashRequest) GetEndSha() string {
	if m != nil {
		return m.EndSha
	}
	return ""
}

func (m *UserSquashRequest) GetAuthor() *User {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *UserSquashRequest) GetCommitMessage() []byte {
	if m != nil {
		return m.CommitMessage
	}
	return nil
}

type UserSquashResponse struct {
	SquashSha            string   `protobuf:"bytes,1,opt,name=squash_sha,json=squashSha,proto3" json:"squash_sha,omitempty"`
	GitError             string   `protobuf:"bytes,2,opt,name=git_error,json=gitError,proto3" json:"git_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSquashResponse) Reset()         { *m = UserSquashResponse{} }
func (m *UserSquashResponse) String() string { return proto.CompactTextString(m) }
func (*UserSquashResponse) ProtoMessage()    {}
func (*UserSquashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{16}
}

func (m *UserSquashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSquashResponse.Unmarshal(m, b)
}
func (m *UserSquashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSquashResponse.Marshal(b, m, deterministic)
}
func (m *UserSquashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSquashResponse.Merge(m, src)
}
func (m *UserSquashResponse) XXX_Size() int {
	return xxx_messageInfo_UserSquashResponse.Size(m)
}
func (m *UserSquashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSquashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserSquashResponse proto.InternalMessageInfo

func (m *UserSquashResponse) GetSquashSha() string {
	if m != nil {
		return m.SquashSha
	}
	return ""
}

func (m *UserSquashResponse) GetGitError() string {
	if m != nil {
		return m.GitError
	}
	return ""
}

type UserUpdateBranchRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	BranchName           []byte      `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	User                 *User       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Newrev               []byte      `protobuf:"bytes,4,opt,name=newrev,proto3" json:"newrev,omitempty"`
	Oldrev               []byte      `protobuf:"bytes,5,opt,name=oldrev,proto3" json:"oldrev,omitempty"`
	SkipPreReceive       bool        `protobuf:"varint,7,opt,name=skip_pre_receive,json=skipPreReceive,proto3" json:"skip_pre_receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserUpdateBranchRequest) Reset()         { *m = UserUpdateBranchRequest{} }
func (m *UserUpdateBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UserUpdateBranchRequest) ProtoMessage()    {}
func (*UserUpdateBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{17}
}

func (m *UserUpdateBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdateBranchRequest.Unmarshal(m, b)
}
func (m *UserUpdateBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdateBranchRequest.Marshal(b, m, deterministic)
}
func (m *UserUpdateBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdateBranchRequest.Merge(m, src)
}
func (m *UserUpdateBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UserUpdateBranchRequest.Size(m)
}
func (m *UserUpdateBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdateBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdateBranchRequest proto.InternalMessageInfo

func (m *UserUpdateBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserUpdateBranchRequest) GetBranchName() []byte {
	if m != nil {
		return m.BranchName
	}
	return nil
}

func (m *UserUpdateBranchRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserUpdateBranchRequest) GetNewrev() []byte {
	if m != nil {
		return m.Newrev
	}
	return nil
}

func (m *UserUpdateBranchRequest) GetOldrev() []byte {
	if m != nil {
		return m.Oldrev
	}
	return nil
}

func (m *UserUpdateBranchRequest) GetSkipPreReceive() bool {
	if m != nil {
		return m.SkipPreReceive
	}
	return false
}

type UserUpdateBranchResponse struct {
	PreReceiveError      string   `protobuf:"bytes,1,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUpdateBranchResponse) Reset()         { *m = UserUpdateBranchResponse{} }
func (m *UserUpdateBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UserUpdateBranchResponse) ProtoMessage()    {}
func (*UserUpdateBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{18}
}

func (m *UserUpdateBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdateBranchResponse.Unmarshal(m, b)
}
func (m *UserUpdateBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdateBranchResponse.Marshal(b, m, deterministic)
}
func (m *UserUpdateBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdateBranchResponse.Merge(m, src)
}
func (m *UserUpdateBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UserUpdateBranchResponse.Size(m)
}
func (m *UserUpdateBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdateBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdateBranchResponse proto.InternalMessageInfo

func (m *UserUpdateBranchResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

type UserCherryPickRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User                 *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Commit               *GitCommit  `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	BranchName           []byte      `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Message              []byte      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	StartBranchName      []byte      `protobuf:"bytes,6,opt,name=start_branch_name,json=startBranchName,proto3" json:"start_branch_name,omitempty"`
	StartRepository      *Repository `protobuf:"bytes,7,opt,name=start_repository,json=startRepository,proto3" json:"start_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserCherryPickRequest) Reset()         { *m = UserCherryPickRequest{} }
func (m *UserCherryPickRequest) String() string { return proto.CompactTextString(m) }
func (*UserCherryPickRequest) ProtoMessage()    {}
func (*UserCherryPickRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{19}
}

func (m *UserCherryPickRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCherryPickRequest.Unmarshal(m, b)
}
func (m *UserCherryPickRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCherryPickRequest.Marshal(b, m, deterministic)
}
func (m *UserCherryPickRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCherryPickRequest.Merge(m, src)
}
func (m *UserCherryPickRequest) XXX_Size() int {
	return xxx_messageInfo_UserCherryPickRequest.Size(m)
}
func (m *UserCherryPickRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCherryPickRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCherryPickRequest proto.InternalMessageInfo

func (m *UserCherryPickRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserCherryPickRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserCherryPickRequest) GetCommit() *GitCommit {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *UserCherryPickRequest) GetBranchName() []byte {
	if m != nil {
		return m.BranchName
	}
	return nil
}

func (m *UserCherryPickRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UserCherryPickRequest) GetStartBranchName() []byte {
	if m != nil {
		return m.StartBranchName
	}
	return nil
}

func (m *UserCherryPickRequest) GetStartRepository() *Repository {
	if m != nil {
		return m.StartRepository
	}
	return nil
}

type UserCherryPickResponse struct {
	BranchUpdate         *OperationBranchUpdate                 `protobuf:"bytes,1,opt,name=branch_update,json=branchUpdate,proto3" json:"branch_update,omitempty"`
	CreateTreeError      string                                 `protobuf:"bytes,2,opt,name=create_tree_error,json=createTreeError,proto3" json:"create_tree_error,omitempty"`
	CommitError          string                                 `protobuf:"bytes,3,opt,name=commit_error,json=commitError,proto3" json:"commit_error,omitempty"`
	PreReceiveError      string                                 `protobuf:"bytes,4,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	CreateTreeErrorCode  UserCherryPickResponse_CreateTreeError `protobuf:"varint,5,opt,name=create_tree_error_code,json=createTreeErrorCode,proto3,enum=gitaly.UserCherryPickResponse_CreateTreeError" json:"create_tree_error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *UserCherryPickResponse) Reset()         { *m = UserCherryPickResponse{} }
func (m *UserCherryPickResponse) String() string { return proto.CompactTextString(m) }
func (*UserCherryPickResponse) ProtoMessage()    {}
func (*UserCherryPickResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{20}
}

func (m *UserCherryPickResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCherryPickResponse.Unmarshal(m, b)
}
func (m *UserCherryPickResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCherryPickResponse.Marshal(b, m, deterministic)
}
func (m *UserCherryPickResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCherryPickResponse.Merge(m, src)
}
func (m *UserCherryPickResponse) XXX_Size() int {
	return xxx_messageInfo_UserCherryPickResponse.Size(m)
}
func (m *UserCherryPickResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCherryPickResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCherryPickResponse proto.InternalMessageInfo

func (m *UserCherryPickResponse) GetBranchUpdate() *OperationBranchUpdate {
	if m != nil {
		return m.BranchUpdate
	}
	return nil
}

func (m *UserCherryPickResponse) GetCreateTreeError() string {
	if m != nil {
		return m.CreateTreeError
	}
	return ""
}

func (m *UserCherryPickResponse) GetCommitError() string {
	if m != nil {
		return m.CommitError
	}
	return ""
}

func (m *UserCherryPickResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

func (m *UserCherryPickResponse) GetCreateTreeErrorCode() UserCherryPickResponse_CreateTreeError {
	if m != nil {
		return m.CreateTreeErrorCode
	}
	return UserCherryPickResponse_NONE
}

type UserRevertRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	User                 *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Commit               *GitCommit  `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	BranchName           []byte      `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Message              []byte      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	StartBranchName      []byte      `protobuf:"bytes,6,opt,name=start_branch_name,json=startBranchName,proto3" json:"start_branch_name,omitempty"`
	StartRepository      *Repository `protobuf:"bytes,7,opt,name=start_repository,json=startRepository,proto3" json:"start_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserRevertRequest) Reset()         { *m = UserRevertRequest{} }
func (m *UserRevertRequest) String() string { return proto.CompactTextString(m) }
func (*UserRevertRequest) ProtoMessage()    {}
func (*UserRevertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{21}
}

func (m *UserRevertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRevertRequest.Unmarshal(m, b)
}
func (m *UserRevertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRevertRequest.Marshal(b, m, deterministic)
}
func (m *UserRevertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRevertRequest.Merge(m, src)
}
func (m *UserRevertRequest) XXX_Size() int {
	return xxx_messageInfo_UserRevertRequest.Size(m)
}
func (m *UserRevertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRevertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRevertRequest proto.InternalMessageInfo

func (m *UserRevertRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UserRevertRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserRevertRequest) GetCommit() *GitCommit {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *UserRevertRequest) GetBranchName() []byte {
	if m != nil {
		return m.BranchName
	}
	return nil
}

func (m *UserRevertRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UserRevertRequest) GetStartBranchName() []byte {
	if m != nil {
		return m.StartBranchName
	}
	return nil
}

func (m *UserRevertRequest) GetStartRepository() *Repository {
	if m != nil {
		return m.StartRepository
	}
	return nil
}

type UserRevertResponse struct {
	BranchUpdate         *OperationBranchUpdate             `protobuf:"bytes,1,opt,name=branch_update,json=branchUpdate,proto3" json:"branch_update,omitempty"`
	CreateTreeError      string                             `protobuf:"bytes,2,opt,name=create_tree_error,json=createTreeError,proto3" json:"create_tree_error,omitempty"`
	CommitError          string                             `protobuf:"bytes,3,opt,name=commit_error,json=commitError,proto3" json:"commit_error,omitempty"`
	PreReceiveError      string                             `protobuf:"bytes,4,opt,name=pre_receive_error,json=preReceiveError,proto3" json:"pre_receive_error,omitempty"`
	CreateTreeErrorCode  UserRevertResponse_CreateTreeError `protobuf:"varint,5,opt,name=create_tree_error_code,json=createTreeErrorCode,proto3,enum=gitaly.UserRevertResponse_CreateTreeError" json:"create_tree_error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UserRevertResponse) Reset()         { *m = UserRevertResponse{} }
func (m *UserRevertResponse) String() string { return proto.CompactTextString(m) }
func (*UserRevertResponse) ProtoMessage()    {}
func (*UserRevertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b4a5877375e491e, []int{22}
}

func (m *UserRevertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRevertResponse.Unmarshal(m, b)
}
func (m *UserRevertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRevertResponse.Marshal(b, m, deterministic)
}
func (m *UserRevertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRevertResponse.Merge(m, src)
}
func (m *UserRevertResponse) XXX_Size() int {
	return xxx_messageInfo_UserRevertResponse.Size(m)
}
func (m *UserRevertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRevertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserRevertResponse proto.InternalMessageInfo

func (m *UserRevertResponse) GetBranchUpdate() *OperationBranchUpdate {
	if m != nil {
		return m.BranchUpdate
	}
	return nil
}

func (m *UserRevertResponse) GetCreateTreeError() string {
	if m != nil {
		return m.CreateTreeError
	}
	return ""
}

func (m *UserRevertResponse) GetCommitError() string {
	if m != nil {
		return m.CommitError
	}
	return ""
}

func (m *UserRevertResponse) GetPreReceiveError() string {
	if m != nil {
		return m.PreReceiveError
	}
	return ""
}

func (m *UserRevertResponse) GetCreateTreeErrorCode() UserRevertResponse_CreateTreeError {
	if m != nil {
		return m.CreateTreeErrorCode
	}
	return UserRevertResponse_NONE
}

func init() {
	proto.RegisterEnum("gitaly.UserMergeBranchRequest_MergeType", UserMergeBranchRequest_MergeType_name, UserMergeBranchRequest_MergeType_value)
	proto.RegisterEnum("gitaly.UserCherryPickResponse_CreateTreeError", UserCherryPickResponse_CreateTreeError_name, UserCherryPickResponse_CreateTreeError_value)
	proto.RegisterEnum("gitaly.UserRevertResponse_CreateTreeError", UserRevertResponse_CreateTreeError_name, UserRevertResponse_CreateTreeError_value)
	proto.RegisterType((*UserCreateBranchRequest)(nil), "gitaly.UserCreateBranchRequest")
	proto.RegisterType((*UserCreateBranchResponse)(nil), "gitaly.UserCreateBranchResponse")
	proto.RegisterType((*UserDeleteBranchRequest)(nil), "gitaly.UserDeleteBranchRequest")
	proto.RegisterType((*UserDeleteBranchResponse)(nil), "gitaly.UserDeleteBranchResponse")
	proto.RegisterType((*UserDeleteTagRequest)(nil), "gitaly.UserDeleteTagRequest")
	proto.RegisterType((*UserDeleteTagResponse)(nil), "gitaly.UserDeleteTagResponse")
	proto.RegisterType((*UserCreateTagRequest)(nil), "gitaly.UserCreateTagRequest")
	proto.RegisterType((*UserCreateTagResponse)(nil), "gitaly.UserCreateTagResponse")
	proto.RegisterType((*UserMergeBranchRequest)(nil), "gitaly.UserMergeBranchRequest")
	proto.RegisterType((*UserMergeBranchResponse)(nil), "gitaly.UserMergeBranchResponse")
	proto.RegisterType((*OperationBranchUpdate)(nil), "gitaly.OperationBranchUpdate")
	proto.RegisterType((*UserFFBranchRequest)(nil), "gitaly.UserFFBranchRequest")
	proto.RegisterType((*UserFFBranchResponse)(nil), "gitaly.UserFFBranchResponse")
	proto.RegisterType((*UserRebaseRequest)(nil), "gitaly.UserRebaseRequest")
	proto.RegisterType((*UserRebaseResponse)(nil), "gitaly.UserRebaseResponse")
	proto.RegisterType((*UserSquashRequest)(nil), "gitaly.UserSquashRequest")
	proto.RegisterType((*UserSquashResponse)(nil), "gitaly.UserSquashResponse")
	proto.RegisterType((*UserUpdateBranchRequest)(nil), "gitaly.UserUpdateBranchRequest")
	proto.RegisterType((*UserUpdateBranchResponse)(nil), "gitaly.UserUpdateBranchResponse")
	proto.RegisterType((*UserCherryPickRequest)(nil), "gitaly.UserCherryPickRequest")
	proto.RegisterType((*UserCherryPickResponse)(nil), "gitaly.UserCherryPickResponse")
	proto.RegisterType((*UserRevertRequest)(nil), "gitaly.UserRevertRequest")
	proto.RegisterType((*UserRevertResponse)(nil), "gitaly.UserRevertResponse")
}

func init() { proto.RegisterFile("operations.proto", fileDescriptor_1b4a5877375e491e) }

var fileDescriptor_1b4a5877375e491e = []byte{
	// 1313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcf, 0x72, 0x1b, 0x45,
	0x13, 0xd7, 0x4a, 0xca, 0x4a, 0x6a, 0xc9, 0xd2, 0x6a, 0x92, 0x38, 0x8a, 0x12, 0x27, 0xce, 0x7e,
	0x1f, 0x20, 0x7c, 0x50, 0x51, 0x86, 0x2b, 0x45, 0x95, 0x15, 0x8b, 0x0a, 0x60, 0xd9, 0xac, 0x9d,
	0x02, 0x4e, 0x5b, 0x6b, 0xed, 0x94, 0xb4, 0x15, 0x4b, 0xbb, 0x99, 0x1d, 0x3b, 0x88, 0xa2, 0x28,
	0x4e, 0x70, 0x80, 0x03, 0x8f, 0x00, 0xc5, 0x13, 0x70, 0xe5, 0xc0, 0x03, 0xf0, 0x28, 0x39, 0xf2,
	0x04, 0xd4, 0xfc, 0x59, 0x69, 0x66, 0xb5, 0x32, 0x71, 0x88, 0x0b, 0x17, 0xc5, 0x71, 0x7e, 0xdd,
	0xdb, 0xd3, 0xfd, 0xeb, 0x9e, 0xe9, 0xde, 0x01, 0x2b, 0x8c, 0x30, 0xf1, 0x68, 0x10, 0x4e, 0xe3,
	0x6e, 0x44, 0x42, 0x1a, 0x22, 0x73, 0x14, 0x50, 0xef, 0x64, 0xd6, 0xae, 0xc5, 0x63, 0x8f, 0x60,
	0x5f, 0xa0, 0xf6, 0x2f, 0x06, 0xdc, 0x7a, 0x1c, 0x63, 0xd2, 0x23, 0xd8, 0xa3, 0x78, 0x87, 0x78,
	0xd3, 0xe1, 0xd8, 0xc1, 0x4f, 0x4f, 0x71, 0x4c, 0xd1, 0x36, 0x00, 0xc1, 0x51, 0x18, 0x07, 0x34,
	0x24, 0xb3, 0x96, 0xb1, 0x69, 0x74, 0xaa, 0xdb, 0xa8, 0x2b, 0xcc, 0x74, 0x9d, 0xb9, 0xc4, 0x51,
	0xb4, 0xd0, 0x7d, 0xa8, 0x1e, 0x73, 0x23, 0xee, 0xd4, 0x9b, 0xe0, 0x56, 0x7e, 0xd3, 0xe8, 0xd4,
	0x1c, 0x10, 0xd0, 0xc0, 0x9b, 0x60, 0xb4, 0x09, 0xc5, 0xd3, 0x18, 0x93, 0x56, 0x81, 0x9b, 0xab,
	0x25, 0xe6, 0x98, 0x0f, 0x0e, 0x97, 0x30, 0x13, 0x31, 0xf5, 0x08, 0x75, 0xa3, 0x30, 0x98, 0xd2,
	0x56, 0x51, 0x98, 0xe0, 0xd0, 0x01, 0x43, 0xec, 0x29, 0xb4, 0x96, 0x5d, 0x8e, 0xa3, 0x70, 0x1a,
	0x63, 0xf4, 0x3a, 0x98, 0x62, 0x33, 0xe9, 0x6f, 0x3d, 0xd9, 0x40, 0xea, 0x49, 0x29, 0xda, 0x82,
	0x66, 0x44, 0xb0, 0x4b, 0xf0, 0x10, 0x07, 0x67, 0xd8, 0xc5, 0x84, 0x84, 0x84, 0x7b, 0x5b, 0x71,
	0x1a, 0x11, 0xc1, 0x8e, 0xc0, 0x77, 0x19, 0x6c, 0xff, 0x20, 0x39, 0x7a, 0x88, 0x4f, 0xf0, 0xd5,
	0xe0, 0xc8, 0xee, 0x0b, 0x0a, 0x74, 0x8f, 0x24, 0x05, 0x99, 0xa1, 0x19, 0xd9, 0xa1, 0x7d, 0x6b,
	0xc0, 0x8d, 0x85, 0xa1, 0x23, 0x6f, 0xf4, 0x77, 0xe2, 0xba, 0x0d, 0x65, 0xea, 0x8d, 0xd4, 0xa0,
	0x4a, 0xd4, 0x1b, 0xbd, 0x60, 0x44, 0x3d, 0xb8, 0x99, 0x72, 0xe4, 0x25, 0xc2, 0xf9, 0x5d, 0x86,
	0x23, 0x4a, 0xe3, 0x1f, 0x0c, 0x07, 0xbd, 0x01, 0x0d, 0xea, 0x91, 0x11, 0xa6, 0x2e, 0xc1, 0x67,
	0x41, 0x1c, 0x84, 0x53, 0x59, 0xc8, 0x75, 0x01, 0x3b, 0x12, 0x45, 0x2d, 0x28, 0x4d, 0x70, 0x1c,
	0x7b, 0x23, 0xdc, 0xba, 0x26, 0x36, 0x91, 0x4b, 0xfb, 0x0b, 0xc1, 0x88, 0x12, 0x8b, 0x64, 0x64,
	0x03, 0x0a, 0xd4, 0x1b, 0xc9, 0x28, 0xaa, 0xc9, 0xe6, 0x4c, 0x83, 0xe1, 0x68, 0x1d, 0x4c, 0xfc,
	0x79, 0x10, 0xd3, 0x98, 0x7b, 0x5d, 0x76, 0xe4, 0x2a, 0x9b, 0xc8, 0x42, 0x36, 0x91, 0xdf, 0x15,
	0x60, 0x9d, 0x6d, 0xbe, 0x87, 0xc9, 0xe8, 0x15, 0x54, 0x7c, 0xc2, 0x57, 0x7e, 0x25, 0x5f, 0x77,
	0xa0, 0x32, 0x0c, 0x27, 0x93, 0x80, 0xba, 0x81, 0x2f, 0x9d, 0x2a, 0x0b, 0xe0, 0x91, 0xcf, 0x22,
	0x92, 0x87, 0x5a, 0x70, 0x98, 0x1c, 0xe2, 0x95, 0xdc, 0xa1, 0x1b, 0x70, 0xcd, 0x8b, 0xa2, 0x93,
	0x59, 0xcb, 0xe4, 0x14, 0x88, 0x05, 0xea, 0x80, 0x15, 0x3f, 0x09, 0x22, 0x57, 0xa1, 0xa1, 0x55,
	0xe2, 0x0a, 0x75, 0x86, 0x1f, 0xcc, 0x49, 0x40, 0x7d, 0xa8, 0x4c, 0x58, 0xe8, 0x47, 0xb3, 0x08,
	0xb7, 0xca, 0x9b, 0x46, 0xa7, 0xbe, 0xdd, 0x51, 0xbd, 0x5e, 0xe6, 0xa5, 0xbb, 0x97, 0xe8, 0x3b,
	0x8b, 0x4f, 0xed, 0x87, 0x50, 0x99, 0xe3, 0xa8, 0x09, 0x6b, 0x83, 0xb0, 0xef, 0xc5, 0xb4, 0x1f,
	0x92, 0x67, 0x1e, 0xf1, 0xad, 0x1c, 0x6a, 0x40, 0x55, 0x05, 0x0c, 0x74, 0x1d, 0x1a, 0x0a, 0xb0,
	0x3f, 0x3d, 0x99, 0x59, 0x79, 0xfb, 0x6b, 0x79, 0x01, 0x69, 0xbb, 0xca, 0x62, 0xd0, 0x88, 0x33,
	0x52, 0xc4, 0xed, 0xc0, 0x9a, 0xbc, 0x69, 0x4e, 0x23, 0xdf, 0xa3, 0x58, 0x16, 0xec, 0x46, 0x12,
	0xca, 0x7e, 0xd2, 0x24, 0x84, 0xd1, 0xc7, 0x5c, 0xc9, 0xa9, 0x1d, 0x2b, 0xab, 0x0f, 0x8a, 0xe5,
	0xbc, 0x55, 0xb0, 0xbf, 0x82, 0x9b, 0x99, 0xca, 0xe7, 0xef, 0xff, 0x00, 0x6a, 0xac, 0x0a, 0xdc,
	0x21, 0xaf, 0x61, 0x5f, 0x16, 0x64, 0x95, 0x61, 0xa2, 0xac, 0x7d, 0xf4, 0x1a, 0xd4, 0xa5, 0x8b,
	0x89, 0x52, 0x81, 0x2b, 0x49, 0xc7, 0xa5, 0x9a, 0xfd, 0xa3, 0x01, 0xd7, 0x19, 0x05, 0xfd, 0xfe,
	0x55, 0xad, 0x46, 0xfb, 0x1b, 0x79, 0xf9, 0x2c, 0x5c, 0x94, 0x29, 0x5a, 0xca, 0x82, 0x71, 0xe1,
	0x2c, 0x5c, 0xa8, 0x5f, 0xfd, 0x9c, 0x87, 0x26, 0x0f, 0x06, 0x1f, 0x7b, 0x31, 0xbe, 0x74, 0xa6,
	0x08, 0xdf, 0x46, 0x61, 0x4a, 0x00, 0xe7, 0x9c, 0xdb, 0x0d, 0x90, 0xdd, 0xce, 0x8d, 0xc7, 0x1e,
	0x3f, 0xba, 0x15, 0xa7, 0x22, 0x90, 0xc3, 0xb1, 0x87, 0xde, 0x83, 0x26, 0xc1, 0x93, 0x90, 0xb2,
	0x70, 0xe7, 0x0e, 0x9b, 0x2b, 0x1d, 0xb6, 0x84, 0xf2, 0x02, 0x41, 0xff, 0x83, 0x35, 0x69, 0x40,
	0x6e, 0x5f, 0xe2, 0xdb, 0xd7, 0x04, 0x28, 0x58, 0xb6, 0xbf, 0x04, 0xa4, 0x92, 0x34, 0xbf, 0x5b,
	0x41, 0xc6, 0xc3, 0x5c, 0x13, 0xf5, 0x2c, 0x23, 0x64, 0xae, 0x5d, 0x20, 0x0d, 0x8c, 0x9a, 0x51,
	0x40, 0xb5, 0x7b, 0xb6, 0x3c, 0x0a, 0xa8, 0xc8, 0xd1, 0x4f, 0x32, 0x47, 0x87, 0x4f, 0x4f, 0xbd,
	0xf8, 0xf2, 0xab, 0x39, 0xe6, 0xdb, 0x28, 0x39, 0x12, 0xc0, 0x39, 0x39, 0x62, 0x1f, 0xf1, 0x29,
	0x6c, 0x91, 0xa2, 0x32, 0x07, 0x18, 0x0d, 0xb7, 0xa0, 0x84, 0xa7, 0x3e, 0x17, 0x99, 0x5c, 0x64,
	0xe2, 0xa9, 0xcf, 0x04, 0xff, 0x07, 0xd3, 0x3b, 0xa5, 0xe3, 0x90, 0x70, 0xca, 0xd3, 0xee, 0x48,
	0x19, 0x3b, 0xf3, 0xf2, 0x78, 0x25, 0xd7, 0x77, 0x99, 0xef, 0xbd, 0x26, 0xd0, 0x3d, 0xd9, 0x00,
	0x0f, 0x44, 0x86, 0x12, 0x8a, 0x16, 0x19, 0x92, 0xd1, 0x28, 0x19, 0x12, 0x08, 0xf3, 0x40, 0x63,
	0x3d, 0x9f, 0x62, 0xfd, 0xb9, 0xbc, 0x48, 0xc5, 0xa1, 0xba, 0x12, 0xd3, 0xee, 0x3a, 0x98, 0x53,
	0xfc, 0x8c, 0xe0, 0xb3, 0x84, 0x7f, 0xb1, 0x62, 0x78, 0x78, 0xe2, 0x33, 0x5c, 0xb4, 0x36, 0xb9,
	0x7a, 0xf1, 0x1e, 0x96, 0xcc, 0x88, 0x7a, 0xac, 0x2f, 0x31, 0x54, 0xfd, 0x96, 0x97, 0x83, 0xc8,
	0x18, 0x13, 0x32, 0x3b, 0x08, 0x86, 0x4f, 0x2e, 0xb7, 0x5c, 0xdf, 0x04, 0x53, 0xd4, 0x81, 0x64,
	0xad, 0x99, 0xe8, 0xbc, 0x1f, 0xd0, 0x1e, 0x17, 0x38, 0x52, 0x21, 0xcd, 0x7f, 0x71, 0x89, 0xff,
	0xd5, 0x13, 0xc2, 0x16, 0x34, 0x45, 0x7d, 0xab, 0x06, 0x4c, 0xae, 0xd3, 0xe0, 0x82, 0x9d, 0x85,
	0x95, 0x77, 0xc1, 0x12, 0xba, 0x4a, 0xb4, 0xa5, 0x95, 0xd1, 0x8a, 0xcf, 0x17, 0x80, 0xfd, 0x47,
	0x5e, 0x0c, 0x53, 0x2a, 0x81, 0xaf, 0xb6, 0x35, 0x88, 0xd6, 0xe9, 0x52, 0x82, 0x53, 0x77, 0x92,
	0x10, 0x1c, 0x11, 0x2c, 0xef, 0xa4, 0x07, 0x50, 0x93, 0x27, 0x4f, 0xbd, 0x96, 0xaa, 0x02, 0x13,
	0x2a, 0x99, 0xa5, 0x51, 0xcc, 0xbe, 0xe2, 0x86, 0xb0, 0xbe, 0xb4, 0xb5, 0x3b, 0x0c, 0x7d, 0xc1,
	0x76, 0x7d, 0xbb, 0xab, 0xa6, 0x77, 0x39, 0xfc, 0x6e, 0x4f, 0x77, 0xcf, 0xb9, 0x9e, 0xf2, 0xb7,
	0x17, 0xfa, 0xd8, 0x7e, 0x07, 0x1a, 0x29, 0x3d, 0x54, 0x86, 0xe2, 0x60, 0x7f, 0xb0, 0x6b, 0xe5,
	0x50, 0x05, 0xae, 0xed, 0xee, 0x1d, 0x1c, 0x7d, 0x66, 0x19, 0xa8, 0x06, 0xe5, 0xde, 0xfe, 0xa0,
	0xff, 0xd1, 0xa3, 0xde, 0x91, 0x95, 0xb7, 0x7f, 0x9d, 0x37, 0xc1, 0x33, 0xcc, 0xb2, 0xf1, 0x5f,
	0xc5, 0x5e, 0xa0, 0x62, 0x9f, 0xe7, 0x93, 0xe6, 0x28, 0xc8, 0xfb, 0x77, 0x54, 0xab, 0xfb, 0x17,
	0xd5, 0xba, 0xa5, 0xa5, 0x56, 0x0b, 0xfd, 0x12, 0x2b, 0x75, 0xfb, 0xfb, 0x12, 0x58, 0x73, 0xe6,
	0x0e, 0x31, 0x39, 0x0b, 0x86, 0x18, 0x7d, 0x02, 0x56, 0xfa, 0x8d, 0x03, 0xdd, 0xd7, 0x4e, 0xd3,
	0xf2, 0x83, 0x4d, 0x7b, 0x73, 0xb5, 0x82, 0x08, 0xc3, 0xce, 0x25, 0x86, 0xd5, 0x97, 0x03, 0xdd,
	0x70, 0xc6, 0x2b, 0x87, 0x6e, 0x38, 0xeb, 0xd1, 0xc1, 0xce, 0xa1, 0x01, 0xac, 0x69, 0xbf, 0xab,
	0xe8, 0xee, 0xb2, 0x37, 0x8b, 0x3f, 0xf2, 0xf6, 0xc6, 0x0a, 0x69, 0xda, 0xde, 0xfc, 0x41, 0x40,
	0xb7, 0x97, 0x7e, 0xb0, 0xd0, 0xed, 0x2d, 0xbd, 0x22, 0xd8, 0x39, 0xf4, 0x29, 0x34, 0x52, 0xff,
	0x50, 0xe8, 0xde, 0xf9, 0xbf, 0x74, 0xed, 0xfb, 0x2b, 0xe5, 0x89, 0xd5, 0x8e, 0xf1, 0x96, 0x81,
	0x3e, 0x84, 0x9a, 0x3a, 0xf7, 0xa3, 0x3b, 0xea, 0x67, 0xa9, 0x1f, 0x96, 0xf6, 0xdd, 0x6c, 0xe1,
	0xdc, 0xcd, 0x5d, 0x80, 0xc5, 0x58, 0x8a, 0x6e, 0xeb, 0x25, 0xa9, 0xcc, 0xf3, 0xed, 0x76, 0x96,
	0x28, 0x6d, 0x46, 0xcc, 0x4e, 0xba, 0x19, 0x6d, 0xe4, 0xd4, 0xcd, 0xe8, 0xa3, 0xd6, 0xa2, 0x5a,
	0xd4, 0x19, 0x42, 0xaf, 0x96, 0x8c, 0x49, 0x4a, 0xaf, 0x96, 0xac, 0xf1, 0xc3, 0xce, 0xa1, 0x8f,
	0xa1, 0xae, 0xf7, 0x04, 0xb4, 0xb1, 0xaa, 0x57, 0x08, 0xa3, 0xf7, 0xce, 0x6f, 0x25, 0x2a, 0x73,
	0xec, 0xe0, 0xa6, 0x99, 0x53, 0x9a, 0x40, 0x9a, 0x39, 0xf5, 0x9c, 0xdb, 0xb9, 0x63, 0x93, 0x3f,
	0x8c, 0xbe, 0xfd, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xbc, 0x54, 0x16, 0x42, 0x15, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OperationServiceClient is the client API for OperationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperationServiceClient interface {
	UserCreateBranch(ctx context.Context, in *UserCreateBranchRequest, opts ...grpc.CallOption) (*UserCreateBranchResponse, error)
	UserDeleteBranch(ctx context.Context, in *UserDeleteBranchRequest, opts ...grpc.CallOption) (*UserDeleteBranchResponse, error)
	UserCreateTag(ctx context.Context, in *UserCreateTagRequest, opts ...grpc.CallOption) (*UserCreateTagResponse, error)
	UserDeleteTag(ctx context.Context, in *UserDeleteTagRequest, opts ...grpc.CallOption) (*UserDeleteTagResponse, error)
	UserMergeBranch(ctx context.Context, opts ...grpc.CallOption) (OperationService_UserMergeBranchClient, error)
	UserFFBranch(ctx context.Context, in *UserFFBranchRequest, opts ...grpc.CallOption) (*UserFFBranchResponse, error)
	UserRebase(ctx context.Context, in *UserRebaseRequest, opts ...grpc.CallOption) (*UserRebaseResponse, error)
	UserSquash(ctx context.Context, in *UserSquashRequest, opts ...grpc.CallOption) (*UserSquashResponse, error)
	UserUpdateBranch(ctx context.Context, in *UserUpdateBranchRequest, opts ...grpc.CallOption) (*UserUpdateBranchResponse, error)
	UserCherryPick(ctx context.Context, in *UserCherryPickRequest, opts ...grpc.CallOption) (*UserCherryPickResponse, error)
	UserRevert(ctx context.Context, in *UserRevertRequest, opts ...grpc.CallOption) (*UserRevertResponse, error)
}

type operationServiceClient struct {
	cc *grpc.ClientConn
}

func NewOperationServiceClient(cc *grpc.ClientConn) OperationServiceClient {
	return &operationServiceClient{cc}
}

func (c *operationServiceClient) UserCreateBranch(ctx context.Context, in *UserCreateBranchRequest, opts ...grpc.CallOption) (*UserCreateBranchResponse, error) {
	out := new(UserCreateBranchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserCreateBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserDeleteBranch(ctx context.Context, in *UserDeleteBranchRequest, opts ...grpc.CallOption) (*UserDeleteBranchResponse, error) {
	out := new(UserDeleteBranchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserDeleteBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserCreateTag(ctx context.Context, in *UserCreateTagRequest, opts ...grpc.CallOption) (*UserCreateTagResponse, error) {
	out := new(UserCreateTagResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserCreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserDeleteTag(ctx context.Context, in *UserDeleteTagRequest, opts ...grpc.CallOption) (*UserDeleteTagResponse, error) {
	out := new(UserDeleteTagResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserDeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserMergeBranch(ctx context.Context, opts ...grpc.CallOption) (OperationService_UserMergeBranchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OperationService_serviceDesc.Streams[0], "/gitaly.OperationService/UserMergeBranch", opts...)
	if err != nil {
		return nil, err
	}
	x := &operationServiceUserMergeBranchClient{stream}
	return x, nil
}

type OperationService_UserMergeBranchClient interface {
	Send(*UserMergeBranchRequest) error
	Recv() (*UserMergeBranchResponse, error)
	grpc.ClientStream
}

type operationServiceUserMergeBranchClient struct {
	grpc.ClientStream
}

func (x *operationServiceUserMergeBranchClient) Send(m *UserMergeBranchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *operationServiceUserMergeBranchClient) Recv() (*UserMergeBranchResponse, error) {
	m := new(UserMergeBranchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *operationServiceClient) UserFFBranch(ctx context.Context, in *UserFFBranchRequest, opts ...grpc.CallOption) (*UserFFBranchResponse, error) {
	out := new(UserFFBranchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserFFBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserRebase(ctx context.Context, in *UserRebaseRequest, opts ...grpc.CallOption) (*UserRebaseResponse, error) {
	out := new(UserRebaseResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserRebase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserSquash(ctx context.Context, in *UserSquashRequest, opts ...grpc.CallOption) (*UserSquashResponse, error) {
	out := new(UserSquashResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserSquash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserUpdateBranch(ctx context.Context, in *UserUpdateBranchRequest, opts ...grpc.CallOption) (*UserUpdateBranchResponse, error) {
	out := new(UserUpdateBranchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserUpdateBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserCherryPick(ctx context.Context, in *UserCherryPickRequest, opts ...grpc.CallOption) (*UserCherryPickResponse, error) {
	out := new(UserCherryPickResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserCherryPick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationServiceClient) UserRevert(ctx context.Context, in *UserRevertRequest, opts ...grpc.CallOption) (*UserRevertResponse, error) {
	out := new(UserRevertResponse)
	err := c.cc.Invoke(ctx, "/gitaly.OperationService/UserRevert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperationServiceServer is the server API for OperationService service.
type OperationServiceServer interface {
	UserCreateBranch(context.Context, *UserCreateBranchRequest) (*UserCreateBranchResponse, error)
	UserDeleteBranch(context.Context, *UserDeleteBranchRequest) (*UserDeleteBranchResponse, error)
	UserCreateTag(context.Context, *UserCreateTagRequest) (*UserCreateTagResponse, error)
	UserDeleteTag(context.Context, *UserDeleteTagRequest) (*UserDeleteTagResponse, error)
	UserMergeBranch(OperationService_UserMergeBranchServer) error
	UserFFBranch(context.Context, *UserFFBranchRequest) (*UserFFBranchResponse, error)
	UserRebase(context.Context, *UserRebaseRequest) (*UserRebaseResponse, error)
	UserSquash(context.Context, *UserSquashRequest) (*UserSquashResponse, error)
	UserUpdateBranch(context.Context, *UserUpdateBranchRequest) (*UserUpdateBranchResponse, error)
	UserCherryPick(context.Context, *UserCherryPickRequest) (*UserCherryPickResponse, error)
	UserRevert(context.Context, *UserRevertRequest) (*UserRevertResponse, error)
}

// UnimplementedOperationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOperationServiceServer struct {
}

func (*UnimplementedOperationServiceServer) UserCreateBranch(ctx context.Context, req *UserCreateBranchRequest) (*UserCreateBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCreateBranch not implemented")
}
func (*UnimplementedOperationServiceServer) UserDeleteBranch(ctx context.Context, req *UserDeleteBranchRequest) (*UserDeleteBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDeleteBranch not implemented")
}
func (*UnimplementedOperationServiceServer) UserCreateTag(ctx context.Context, req *UserCreateTagRequest) (*UserCreateTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCreateTag not implemented")
}
func (*UnimplementedOperationServiceServer) UserDeleteTag(ctx context.Context, req *UserDeleteTagRequest) (*UserDeleteTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDeleteTag not implemented")
}
func (*UnimplementedOperationServiceServer) UserMergeBranch(srv OperationService_UserMergeBranchServer) error {
	return status.Errorf(codes.Unimplemented, "method UserMergeBranch not implemented")
}
func (*UnimplementedOperationServiceServer) UserFFBranch(ctx context.Context, req *UserFFBranchRequest) (*UserFFBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserFFBranch not implemented")
}
func (*UnimplementedOperationServiceServer) UserRebase(ctx context.Context, req *UserRebaseRequest) (*UserRebaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRebase not implemented")
}
func (*UnimplementedOperationServiceServer) UserSquash(ctx context.Context, req *UserSquashRequest) (*UserSquashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSquash not implemented")
}
func (*UnimplementedOperationServiceServer) UserUpdateBranch(ctx context.Context, req *UserUpdateBranchRequest) (*UserUpdateBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserUpdateBranch not implemented")
}
func (*UnimplementedOperationServiceServer) UserCherryPick(ctx context.Context, req *UserCherryPickRequest) (*UserCherryPickResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCherryPick not implemented")
}
func (*UnimplementedOperationServiceServer) UserRevert(ctx context.Context, req *UserRevertRequest) (*UserRevertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRevert not implemented")
}

func RegisterOperationServiceServer(s *grpc.Server, srv OperationServiceServer) {
	s.RegisterService(&_OperationService_serviceDesc, srv)
}

func _OperationService_UserCreateBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCreateBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserCreateBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserCreateBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserCreateBranch(ctx, req.(*UserCreateBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserDeleteBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDeleteBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserDeleteBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserDeleteBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserDeleteBranch(ctx, req.(*UserDeleteBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserCreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCreateTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserCreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserCreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserCreateTag(ctx, req.(*UserCreateTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserDeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserDeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserDeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserDeleteTag(ctx, req.(*UserDeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserMergeBranch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OperationServiceServer).UserMergeBranch(&operationServiceUserMergeBranchServer{stream})
}

type OperationService_UserMergeBranchServer interface {
	Send(*UserMergeBranchResponse) error
	Recv() (*UserMergeBranchRequest, error)
	grpc.ServerStream
}

type operationServiceUserMergeBranchServer struct {
	grpc.ServerStream
}

func (x *operationServiceUserMergeBranchServer) Send(m *UserMergeBranchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *operationServiceUserMergeBranchServer) Recv() (*UserMergeBranchRequest, error) {
	m := new(UserMergeBranchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OperationService_UserFFBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFFBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserFFBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserFFBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserFFBranch(ctx, req.(*UserFFBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserRebase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRebaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserRebase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserRebase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserRebase(ctx, req.(*UserRebaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserSquash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSquashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserSquash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserSquash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserSquash(ctx, req.(*UserSquashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserUpdateBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserUpdateBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserUpdateBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserUpdateBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserUpdateBranch(ctx, req.(*UserUpdateBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserCherryPick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCherryPickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserCherryPick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserCherryPick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserCherryPick(ctx, req.(*UserCherryPickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperationService_UserRevert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRevertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServiceServer).UserRevert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.OperationService/UserRevert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServiceServer).UserRevert(ctx, req.(*UserRevertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OperationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.OperationService",
	HandlerType: (*OperationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserCreateBranch",
			Handler:    _OperationService_UserCreateBranch_Handler,
		},
		{
			MethodName: "UserDeleteBranch",
			Handler:    _OperationService_UserDeleteBranch_Handler,
		},
		{
			MethodName: "UserCreateTag",
			Handler:    _OperationService_UserCreateTag_Handler,
		},
		{
			MethodName: "UserDeleteTag",
			Handler:    _OperationService_UserDeleteTag_Handler,
		},
		{
			MethodName: "UserFFBranch",
			Handler:    _OperationService_UserFFBranch_Handler,
		},
		{
			MethodName: "UserRebase",
			Handler:    _OperationService_UserRebase_Handler,
		},
		{
			MethodName: "UserSquash",
			Handler:    _OperationService_UserSquash_Handler,
		},
		{
			MethodName: "UserUpdateBranch",
			Handler:    _OperationService_UserUpdateBranch_Handler,
		},
		{
			MethodName: "UserCherryPick",
			Handler:    _OperationService_UserCherryPick_Handler,
		},
		{
			MethodName: "UserRevert",
			Handler:    _OperationService_UserRevert_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UserMergeBranch",
			Handler:       _OperationService_UserMergeBranch_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "operations.proto",
}
