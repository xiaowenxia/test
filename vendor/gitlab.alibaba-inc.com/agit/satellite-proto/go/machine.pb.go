// Code generated by protoc-gen-go. DO NOT EDIT.
// source: machine.proto

package satellite

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AchieveMachineInfoResponse struct {
	//   The disk available space
	DiskAvailableSpace uint64 `protobuf:"varint,1,opt,name=diskAvailableSpace,proto3" json:"diskAvailableSpace,omitempty"`
	// The load average array, it wll have three items for 1,5,15 minutes
	LoadAvg []float64 `protobuf:"fixed64,2,rep,packed,name=loadAvg,proto3" json:"loadAvg,omitempty"`
	// The cpu logic core count
	CpuLogicCoreCount    int32    `protobuf:"varint,3,opt,name=cpuLogicCoreCount,proto3" json:"cpuLogicCoreCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AchieveMachineInfoResponse) Reset()         { *m = AchieveMachineInfoResponse{} }
func (m *AchieveMachineInfoResponse) String() string { return proto.CompactTextString(m) }
func (*AchieveMachineInfoResponse) ProtoMessage()    {}
func (*AchieveMachineInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4e4a03b74bd47d, []int{0}
}

func (m *AchieveMachineInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AchieveMachineInfoResponse.Unmarshal(m, b)
}
func (m *AchieveMachineInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AchieveMachineInfoResponse.Marshal(b, m, deterministic)
}
func (m *AchieveMachineInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AchieveMachineInfoResponse.Merge(m, src)
}
func (m *AchieveMachineInfoResponse) XXX_Size() int {
	return xxx_messageInfo_AchieveMachineInfoResponse.Size(m)
}
func (m *AchieveMachineInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AchieveMachineInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AchieveMachineInfoResponse proto.InternalMessageInfo

func (m *AchieveMachineInfoResponse) GetDiskAvailableSpace() uint64 {
	if m != nil {
		return m.DiskAvailableSpace
	}
	return 0
}

func (m *AchieveMachineInfoResponse) GetLoadAvg() []float64 {
	if m != nil {
		return m.LoadAvg
	}
	return nil
}

func (m *AchieveMachineInfoResponse) GetCpuLogicCoreCount() int32 {
	if m != nil {
		return m.CpuLogicCoreCount
	}
	return 0
}

func init() {
	proto.RegisterType((*AchieveMachineInfoResponse)(nil), "satellite.AchieveMachineInfoResponse")
}

func init() { proto.RegisterFile("machine.proto", fileDescriptor_4b4e4a03b74bd47d) }

var fileDescriptor_4b4e4a03b74bd47d = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xcf, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0x70, 0x63, 0xfd, 0x83, 0x0b, 0x0a, 0x2e, 0xa8, 0x21, 0x5e, 0x42, 0x41, 0xc8, 0x41,
	0xa6, 0xa0, 0x4f, 0x10, 0x8b, 0x07, 0x41, 0x2f, 0x29, 0x3e, 0xc0, 0xec, 0x76, 0xba, 0x1d, 0xdc,
	0x64, 0x96, 0x64, 0x13, 0xf0, 0x3d, 0x7c, 0x60, 0xb1, 0xb1, 0x5e, 0x6a, 0x8f, 0xc3, 0x37, 0x7c,
	0x7c, 0x3f, 0x75, 0x5e, 0xa3, 0x5d, 0x73, 0x43, 0x10, 0x5a, 0x89, 0xa2, 0xcf, 0x3a, 0x8c, 0xe4,
	0x3d, 0x47, 0xca, 0x6e, 0x9d, 0x88, 0xf3, 0x34, 0xdb, 0x04, 0xa6, 0x5f, 0xcd, 0xa8, 0x0e, 0xf1,
	0x73, 0xfc, 0x9b, 0x7e, 0x25, 0x2a, 0x2b, 0xed, 0x9a, 0x69, 0xa0, 0xb7, 0xb1, 0xe0, 0xa5, 0x59,
	0x49, 0x45, 0x5d, 0x90, 0xa6, 0x23, 0x0d, 0x4a, 0x2f, 0xb9, 0xfb, 0x28, 0x07, 0x64, 0x8f, 0xc6,
	0xd3, 0x22, 0xa0, 0xa5, 0x34, 0xc9, 0x93, 0xe2, 0xa8, 0xfa, 0x27, 0xd1, 0xa9, 0x3a, 0xf5, 0x82,
	0xcb, 0x72, 0x70, 0xe9, 0x61, 0x3e, 0x29, 0x92, 0x6a, 0x7b, 0xea, 0x7b, 0x75, 0x69, 0x43, 0xff,
	0x2a, 0x8e, 0xed, 0x5c, 0x5a, 0x9a, 0x4b, 0xdf, 0xc4, 0x74, 0x92, 0x27, 0xc5, 0x71, 0xb5, 0x1b,
	0x3c, 0x38, 0x75, 0xf1, 0x3b, 0x67, 0x41, 0xed, 0xc0, 0x96, 0xf4, 0xbb, 0xd2, 0xbb, 0x3b, 0xf5,
	0x35, 0x8c, 0x38, 0xd8, 0xe2, 0xe0, 0xf9, 0x07, 0x97, 0xdd, 0xc1, 0x9f, 0x1f, 0xf6, 0xf3, 0xa6,
	0x07, 0x4f, 0x37, 0xea, 0xca, 0x4a, 0x0d, 0xe8, 0xd9, 0xa0, 0x41, 0x40, 0xc7, 0x11, 0x5c, 0x1b,
	0xac, 0x39, 0xd9, 0x34, 0x3e, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x93, 0xf5, 0xc8, 0x58,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MachineServiceClient is the client API for MachineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MachineServiceClient interface {
	AchieveMachineInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AchieveMachineInfoResponse, error)
}

type machineServiceClient struct {
	cc *grpc.ClientConn
}

func NewMachineServiceClient(cc *grpc.ClientConn) MachineServiceClient {
	return &machineServiceClient{cc}
}

func (c *machineServiceClient) AchieveMachineInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AchieveMachineInfoResponse, error) {
	out := new(AchieveMachineInfoResponse)
	err := c.cc.Invoke(ctx, "/satellite.MachineService/AchieveMachineInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MachineServiceServer is the server API for MachineService service.
type MachineServiceServer interface {
	AchieveMachineInfo(context.Context, *empty.Empty) (*AchieveMachineInfoResponse, error)
}

// UnimplementedMachineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMachineServiceServer struct {
}

func (*UnimplementedMachineServiceServer) AchieveMachineInfo(ctx context.Context, req *empty.Empty) (*AchieveMachineInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AchieveMachineInfo not implemented")
}

func RegisterMachineServiceServer(s *grpc.Server, srv MachineServiceServer) {
	s.RegisterService(&_MachineService_serviceDesc, srv)
}

func _MachineService_AchieveMachineInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).AchieveMachineInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.MachineService/AchieveMachineInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).AchieveMachineInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satellite.MachineService",
	HandlerType: (*MachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AchieveMachineInfo",
			Handler:    _MachineService_AchieveMachineInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "machine.proto",
}
