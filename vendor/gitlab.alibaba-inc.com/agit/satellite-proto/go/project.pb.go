// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package satellite

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// crypto type
type CryptoType int32

const (
	// secret self hosted
	CryptoType_SELF_HOSTED CryptoType = 0
	// secret stored by kms
	CryptoType_KMS CryptoType = 1
)

var CryptoType_name = map[int32]string{
	0: "SELF_HOSTED",
	1: "KMS",
}

var CryptoType_value = map[string]int32{
	"SELF_HOSTED": 0,
	"KMS":         1,
}

func (x CryptoType) String() string {
	return proto.EnumName(CryptoType_name, int32(x))
}

func (CryptoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{0}
}

// RemoteType enum
type SyncGitRepoRequest_RemoteType int32

const (
	SyncGitRepoRequest_Satellite  SyncGitRepoRequest_RemoteType = 0
	SyncGitRepoRequest_ForceStone SyncGitRepoRequest_RemoteType = 1
)

var SyncGitRepoRequest_RemoteType_name = map[int32]string{
	0: "Satellite",
	1: "ForceStone",
}

var SyncGitRepoRequest_RemoteType_value = map[string]int32{
	"Satellite":  0,
	"ForceStone": 1,
}

func (x SyncGitRepoRequest_RemoteType) String() string {
	return proto.EnumName(SyncGitRepoRequest_RemoteType_name, int32(x))
}

func (SyncGitRepoRequest_RemoteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{13, 0}
}

type Crypto struct {
	Enabled              bool       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Type                 CryptoType `protobuf:"varint,2,opt,name=type,proto3,enum=satellite.CryptoType" json:"type,omitempty"`
	RegionId             string     `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	CmkId                string     `protobuf:"bytes,4,opt,name=cmk_id,json=cmkId,proto3" json:"cmk_id,omitempty"`
	AssumeRoleFor        string     `protobuf:"bytes,5,opt,name=assume_role_for,json=assumeRoleFor,proto3" json:"assume_role_for,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Crypto) Reset()         { *m = Crypto{} }
func (m *Crypto) String() string { return proto.CompactTextString(m) }
func (*Crypto) ProtoMessage()    {}
func (*Crypto) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{0}
}

func (m *Crypto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Crypto.Unmarshal(m, b)
}
func (m *Crypto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Crypto.Marshal(b, m, deterministic)
}
func (m *Crypto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Crypto.Merge(m, src)
}
func (m *Crypto) XXX_Size() int {
	return xxx_messageInfo_Crypto.Size(m)
}
func (m *Crypto) XXX_DiscardUnknown() {
	xxx_messageInfo_Crypto.DiscardUnknown(m)
}

var xxx_messageInfo_Crypto proto.InternalMessageInfo

func (m *Crypto) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Crypto) GetType() CryptoType {
	if m != nil {
		return m.Type
	}
	return CryptoType_SELF_HOSTED
}

func (m *Crypto) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *Crypto) GetCmkId() string {
	if m != nil {
		return m.CmkId
	}
	return ""
}

func (m *Crypto) GetAssumeRoleFor() string {
	if m != nil {
		return m.AssumeRoleFor
	}
	return ""
}

type CreateProjectRequest struct {
	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	// Skip insert items to project table while create project.
	// It just for migration tool/worker, if not set this field value,
	// then the default value is false.
	IsSkipProjectTable   bool     `protobuf:"varint,2,opt,name=is_skip_project_table,json=isSkipProjectTable,proto3" json:"is_skip_project_table,omitempty"`
	Crypto               *Crypto  `protobuf:"bytes,3,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{1}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *CreateProjectRequest) GetIsSkipProjectTable() bool {
	if m != nil {
		return m.IsSkipProjectTable
	}
	return false
}

func (m *CreateProjectRequest) GetCrypto() *Crypto {
	if m != nil {
		return m.Crypto
	}
	return nil
}

type CreateProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{2}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

func (m *CreateProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type RemoveProjectRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RemoveProjectRequest) Reset()         { *m = RemoveProjectRequest{} }
func (m *RemoveProjectRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveProjectRequest) ProtoMessage()    {}
func (*RemoveProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{3}
}

func (m *RemoveProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveProjectRequest.Unmarshal(m, b)
}
func (m *RemoveProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveProjectRequest.Marshal(b, m, deterministic)
}
func (m *RemoveProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveProjectRequest.Merge(m, src)
}
func (m *RemoveProjectRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveProjectRequest.Size(m)
}
func (m *RemoveProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveProjectRequest proto.InternalMessageInfo

func (m *RemoveProjectRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RemoveProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveProjectResponse) Reset()         { *m = RemoveProjectResponse{} }
func (m *RemoveProjectResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveProjectResponse) ProtoMessage()    {}
func (*RemoveProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{4}
}

func (m *RemoveProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveProjectResponse.Unmarshal(m, b)
}
func (m *RemoveProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveProjectResponse.Marshal(b, m, deterministic)
}
func (m *RemoveProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveProjectResponse.Merge(m, src)
}
func (m *RemoveProjectResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveProjectResponse.Size(m)
}
func (m *RemoveProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveProjectResponse proto.InternalMessageInfo

func (m *RemoveProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type ForkProjectRequest struct {
	OriginalRepository   *Repository `protobuf:"bytes,1,opt,name=originalRepository,proto3" json:"originalRepository,omitempty"`
	NewNamespace         *Namespace  `protobuf:"bytes,2,opt,name=newNamespace,proto3" json:"newNamespace,omitempty"`
	RemoteIp             string      `protobuf:"bytes,3,opt,name=remoteIp,proto3" json:"remoteIp,omitempty"`
	GlRepositoryId       int64       `protobuf:"varint,4,opt,name=gl_repository_id,json=glRepositoryId,proto3" json:"gl_repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ForkProjectRequest) Reset()         { *m = ForkProjectRequest{} }
func (m *ForkProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ForkProjectRequest) ProtoMessage()    {}
func (*ForkProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{5}
}

func (m *ForkProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForkProjectRequest.Unmarshal(m, b)
}
func (m *ForkProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForkProjectRequest.Marshal(b, m, deterministic)
}
func (m *ForkProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForkProjectRequest.Merge(m, src)
}
func (m *ForkProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ForkProjectRequest.Size(m)
}
func (m *ForkProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForkProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForkProjectRequest proto.InternalMessageInfo

func (m *ForkProjectRequest) GetOriginalRepository() *Repository {
	if m != nil {
		return m.OriginalRepository
	}
	return nil
}

func (m *ForkProjectRequest) GetNewNamespace() *Namespace {
	if m != nil {
		return m.NewNamespace
	}
	return nil
}

func (m *ForkProjectRequest) GetRemoteIp() string {
	if m != nil {
		return m.RemoteIp
	}
	return ""
}

func (m *ForkProjectRequest) GetGlRepositoryId() int64 {
	if m != nil {
		return m.GlRepositoryId
	}
	return 0
}

type ForkProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForkProjectResponse) Reset()         { *m = ForkProjectResponse{} }
func (m *ForkProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ForkProjectResponse) ProtoMessage()    {}
func (*ForkProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{6}
}

func (m *ForkProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForkProjectResponse.Unmarshal(m, b)
}
func (m *ForkProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForkProjectResponse.Marshal(b, m, deterministic)
}
func (m *ForkProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForkProjectResponse.Merge(m, src)
}
func (m *ForkProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ForkProjectResponse.Size(m)
}
func (m *ForkProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForkProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForkProjectResponse proto.InternalMessageInfo

func (m *ForkProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type MoveProjectRequest struct {
	OldRepository        *Repository `protobuf:"bytes,1,opt,name=oldRepository,proto3" json:"oldRepository,omitempty"`
	NewRepository        *Repository `protobuf:"bytes,2,opt,name=newRepository,proto3" json:"newRepository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MoveProjectRequest) Reset()         { *m = MoveProjectRequest{} }
func (m *MoveProjectRequest) String() string { return proto.CompactTextString(m) }
func (*MoveProjectRequest) ProtoMessage()    {}
func (*MoveProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{7}
}

func (m *MoveProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveProjectRequest.Unmarshal(m, b)
}
func (m *MoveProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveProjectRequest.Marshal(b, m, deterministic)
}
func (m *MoveProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveProjectRequest.Merge(m, src)
}
func (m *MoveProjectRequest) XXX_Size() int {
	return xxx_messageInfo_MoveProjectRequest.Size(m)
}
func (m *MoveProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveProjectRequest proto.InternalMessageInfo

func (m *MoveProjectRequest) GetOldRepository() *Repository {
	if m != nil {
		return m.OldRepository
	}
	return nil
}

func (m *MoveProjectRequest) GetNewRepository() *Repository {
	if m != nil {
		return m.NewRepository
	}
	return nil
}

type MoveProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveProjectResponse) Reset()         { *m = MoveProjectResponse{} }
func (m *MoveProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MoveProjectResponse) ProtoMessage()    {}
func (*MoveProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{8}
}

func (m *MoveProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveProjectResponse.Unmarshal(m, b)
}
func (m *MoveProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveProjectResponse.Marshal(b, m, deterministic)
}
func (m *MoveProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveProjectResponse.Merge(m, src)
}
func (m *MoveProjectResponse) XXX_Size() int {
	return xxx_messageInfo_MoveProjectResponse.Size(m)
}
func (m *MoveProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveProjectResponse proto.InternalMessageInfo

func (m *MoveProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type ImportProjectRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	ImportUrl            string      `protobuf:"bytes,2,opt,name=importUrl,proto3" json:"importUrl,omitempty"`
	Crypto               *Crypto     `protobuf:"bytes,3,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ImportProjectRequest) Reset()         { *m = ImportProjectRequest{} }
func (m *ImportProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ImportProjectRequest) ProtoMessage()    {}
func (*ImportProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{9}
}

func (m *ImportProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportProjectRequest.Unmarshal(m, b)
}
func (m *ImportProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportProjectRequest.Marshal(b, m, deterministic)
}
func (m *ImportProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportProjectRequest.Merge(m, src)
}
func (m *ImportProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ImportProjectRequest.Size(m)
}
func (m *ImportProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportProjectRequest proto.InternalMessageInfo

func (m *ImportProjectRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ImportProjectRequest) GetImportUrl() string {
	if m != nil {
		return m.ImportUrl
	}
	return ""
}

func (m *ImportProjectRequest) GetCrypto() *Crypto {
	if m != nil {
		return m.Crypto
	}
	return nil
}

type ImportProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportProjectResponse) Reset()         { *m = ImportProjectResponse{} }
func (m *ImportProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ImportProjectResponse) ProtoMessage()    {}
func (*ImportProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{10}
}

func (m *ImportProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportProjectResponse.Unmarshal(m, b)
}
func (m *ImportProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportProjectResponse.Marshal(b, m, deterministic)
}
func (m *ImportProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportProjectResponse.Merge(m, src)
}
func (m *ImportProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ImportProjectResponse.Size(m)
}
func (m *ImportProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportProjectResponse proto.InternalMessageInfo

func (m *ImportProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type TransferProjectRequest struct {
	OldRepository        *Repository `protobuf:"bytes,1,opt,name=oldRepository,proto3" json:"oldRepository,omitempty"`
	NewRepository        *Repository `protobuf:"bytes,2,opt,name=newRepository,proto3" json:"newRepository,omitempty"`
	RemoteIp             string      `protobuf:"bytes,3,opt,name=remoteIp,proto3" json:"remoteIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransferProjectRequest) Reset()         { *m = TransferProjectRequest{} }
func (m *TransferProjectRequest) String() string { return proto.CompactTextString(m) }
func (*TransferProjectRequest) ProtoMessage()    {}
func (*TransferProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{11}
}

func (m *TransferProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferProjectRequest.Unmarshal(m, b)
}
func (m *TransferProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferProjectRequest.Marshal(b, m, deterministic)
}
func (m *TransferProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferProjectRequest.Merge(m, src)
}
func (m *TransferProjectRequest) XXX_Size() int {
	return xxx_messageInfo_TransferProjectRequest.Size(m)
}
func (m *TransferProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferProjectRequest proto.InternalMessageInfo

func (m *TransferProjectRequest) GetOldRepository() *Repository {
	if m != nil {
		return m.OldRepository
	}
	return nil
}

func (m *TransferProjectRequest) GetNewRepository() *Repository {
	if m != nil {
		return m.NewRepository
	}
	return nil
}

func (m *TransferProjectRequest) GetRemoteIp() string {
	if m != nil {
		return m.RemoteIp
	}
	return ""
}

type TransferProjectResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferProjectResponse) Reset()         { *m = TransferProjectResponse{} }
func (m *TransferProjectResponse) String() string { return proto.CompactTextString(m) }
func (*TransferProjectResponse) ProtoMessage()    {}
func (*TransferProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{12}
}

func (m *TransferProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferProjectResponse.Unmarshal(m, b)
}
func (m *TransferProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferProjectResponse.Marshal(b, m, deterministic)
}
func (m *TransferProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferProjectResponse.Merge(m, src)
}
func (m *TransferProjectResponse) XXX_Size() int {
	return xxx_messageInfo_TransferProjectResponse.Size(m)
}
func (m *TransferProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferProjectResponse proto.InternalMessageInfo

func (m *TransferProjectResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type SyncGitRepoRequest struct {
	Repository           *Repository                   `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	RemoteURL            string                        `protobuf:"bytes,2,opt,name=remoteURL,proto3" json:"remoteURL,omitempty"`
	RemoteType           SyncGitRepoRequest_RemoteType `protobuf:"varint,3,opt,name=remoteType,proto3,enum=satellite.SyncGitRepoRequest_RemoteType" json:"remoteType,omitempty"`
	Token                string                        `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SyncGitRepoRequest) Reset()         { *m = SyncGitRepoRequest{} }
func (m *SyncGitRepoRequest) String() string { return proto.CompactTextString(m) }
func (*SyncGitRepoRequest) ProtoMessage()    {}
func (*SyncGitRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{13}
}

func (m *SyncGitRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncGitRepoRequest.Unmarshal(m, b)
}
func (m *SyncGitRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncGitRepoRequest.Marshal(b, m, deterministic)
}
func (m *SyncGitRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncGitRepoRequest.Merge(m, src)
}
func (m *SyncGitRepoRequest) XXX_Size() int {
	return xxx_messageInfo_SyncGitRepoRequest.Size(m)
}
func (m *SyncGitRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncGitRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncGitRepoRequest proto.InternalMessageInfo

func (m *SyncGitRepoRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *SyncGitRepoRequest) GetRemoteURL() string {
	if m != nil {
		return m.RemoteURL
	}
	return ""
}

func (m *SyncGitRepoRequest) GetRemoteType() SyncGitRepoRequest_RemoteType {
	if m != nil {
		return m.RemoteType
	}
	return SyncGitRepoRequest_Satellite
}

func (m *SyncGitRepoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SyncGitRepoResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncGitRepoResponse) Reset()         { *m = SyncGitRepoResponse{} }
func (m *SyncGitRepoResponse) String() string { return proto.CompactTextString(m) }
func (*SyncGitRepoResponse) ProtoMessage()    {}
func (*SyncGitRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{14}
}

func (m *SyncGitRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncGitRepoResponse.Unmarshal(m, b)
}
func (m *SyncGitRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncGitRepoResponse.Marshal(b, m, deterministic)
}
func (m *SyncGitRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncGitRepoResponse.Merge(m, src)
}
func (m *SyncGitRepoResponse) XXX_Size() int {
	return xxx_messageInfo_SyncGitRepoResponse.Size(m)
}
func (m *SyncGitRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncGitRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncGitRepoResponse proto.InternalMessageInfo

func (m *SyncGitRepoResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type GetCryptoRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetCryptoRequest) Reset()         { *m = GetCryptoRequest{} }
func (m *GetCryptoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCryptoRequest) ProtoMessage()    {}
func (*GetCryptoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{15}
}

func (m *GetCryptoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCryptoRequest.Unmarshal(m, b)
}
func (m *GetCryptoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCryptoRequest.Marshal(b, m, deterministic)
}
func (m *GetCryptoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCryptoRequest.Merge(m, src)
}
func (m *GetCryptoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCryptoRequest.Size(m)
}
func (m *GetCryptoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCryptoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCryptoRequest proto.InternalMessageInfo

func (m *GetCryptoRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetCryptoResponse struct {
	Crypto               *Crypto  `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCryptoResponse) Reset()         { *m = GetCryptoResponse{} }
func (m *GetCryptoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCryptoResponse) ProtoMessage()    {}
func (*GetCryptoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{16}
}

func (m *GetCryptoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCryptoResponse.Unmarshal(m, b)
}
func (m *GetCryptoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCryptoResponse.Marshal(b, m, deterministic)
}
func (m *GetCryptoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCryptoResponse.Merge(m, src)
}
func (m *GetCryptoResponse) XXX_Size() int {
	return xxx_messageInfo_GetCryptoResponse.Size(m)
}
func (m *GetCryptoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCryptoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCryptoResponse proto.InternalMessageInfo

func (m *GetCryptoResponse) GetCrypto() *Crypto {
	if m != nil {
		return m.Crypto
	}
	return nil
}

type FilterWithCryptoRequest struct {
	CmkId string `protobuf:"bytes,2,opt,name=cmk_id,json=cmkId,proto3" json:"cmk_id,omitempty"`
	// optional
	GlRepositoryIds      []int64  `protobuf:"varint,4,rep,packed,name=gl_repository_ids,json=glRepositoryIds,proto3" json:"gl_repository_ids,omitempty"`
	Limit                int32    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterWithCryptoRequest) Reset()         { *m = FilterWithCryptoRequest{} }
func (m *FilterWithCryptoRequest) String() string { return proto.CompactTextString(m) }
func (*FilterWithCryptoRequest) ProtoMessage()    {}
func (*FilterWithCryptoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{17}
}

func (m *FilterWithCryptoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterWithCryptoRequest.Unmarshal(m, b)
}
func (m *FilterWithCryptoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterWithCryptoRequest.Marshal(b, m, deterministic)
}
func (m *FilterWithCryptoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterWithCryptoRequest.Merge(m, src)
}
func (m *FilterWithCryptoRequest) XXX_Size() int {
	return xxx_messageInfo_FilterWithCryptoRequest.Size(m)
}
func (m *FilterWithCryptoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterWithCryptoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterWithCryptoRequest proto.InternalMessageInfo

func (m *FilterWithCryptoRequest) GetCmkId() string {
	if m != nil {
		return m.CmkId
	}
	return ""
}

func (m *FilterWithCryptoRequest) GetGlRepositoryIds() []int64 {
	if m != nil {
		return m.GlRepositoryIds
	}
	return nil
}

func (m *FilterWithCryptoRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterWithCryptoRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FilterWithCryptoResponse struct {
	GlRepositoryIds      []int64  `protobuf:"varint,1,rep,packed,name=gl_repository_ids,json=glRepositoryIds,proto3" json:"gl_repository_ids,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterWithCryptoResponse) Reset()         { *m = FilterWithCryptoResponse{} }
func (m *FilterWithCryptoResponse) String() string { return proto.CompactTextString(m) }
func (*FilterWithCryptoResponse) ProtoMessage()    {}
func (*FilterWithCryptoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{18}
}

func (m *FilterWithCryptoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterWithCryptoResponse.Unmarshal(m, b)
}
func (m *FilterWithCryptoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterWithCryptoResponse.Marshal(b, m, deterministic)
}
func (m *FilterWithCryptoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterWithCryptoResponse.Merge(m, src)
}
func (m *FilterWithCryptoResponse) XXX_Size() int {
	return xxx_messageInfo_FilterWithCryptoResponse.Size(m)
}
func (m *FilterWithCryptoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterWithCryptoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterWithCryptoResponse proto.InternalMessageInfo

func (m *FilterWithCryptoResponse) GetGlRepositoryIds() []int64 {
	if m != nil {
		return m.GlRepositoryIds
	}
	return nil
}

func (m *FilterWithCryptoResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type CountWithCryptoRequest struct {
	CmkIds []string `protobuf:"bytes,2,rep,name=cmk_ids,json=cmkIds,proto3" json:"cmk_ids,omitempty"`
	// optional
	GlRepositoryIds      []int64  `protobuf:"varint,4,rep,packed,name=gl_repository_ids,json=glRepositoryIds,proto3" json:"gl_repository_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountWithCryptoRequest) Reset()         { *m = CountWithCryptoRequest{} }
func (m *CountWithCryptoRequest) String() string { return proto.CompactTextString(m) }
func (*CountWithCryptoRequest) ProtoMessage()    {}
func (*CountWithCryptoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{19}
}

func (m *CountWithCryptoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountWithCryptoRequest.Unmarshal(m, b)
}
func (m *CountWithCryptoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountWithCryptoRequest.Marshal(b, m, deterministic)
}
func (m *CountWithCryptoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountWithCryptoRequest.Merge(m, src)
}
func (m *CountWithCryptoRequest) XXX_Size() int {
	return xxx_messageInfo_CountWithCryptoRequest.Size(m)
}
func (m *CountWithCryptoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountWithCryptoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountWithCryptoRequest proto.InternalMessageInfo

func (m *CountWithCryptoRequest) GetCmkIds() []string {
	if m != nil {
		return m.CmkIds
	}
	return nil
}

func (m *CountWithCryptoRequest) GetGlRepositoryIds() []int64 {
	if m != nil {
		return m.GlRepositoryIds
	}
	return nil
}

type CountWithCryptoResponse struct {
	Counts               []*CountWithCryptoResponse_CryptoCount `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CountWithCryptoResponse) Reset()         { *m = CountWithCryptoResponse{} }
func (m *CountWithCryptoResponse) String() string { return proto.CompactTextString(m) }
func (*CountWithCryptoResponse) ProtoMessage()    {}
func (*CountWithCryptoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{20}
}

func (m *CountWithCryptoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountWithCryptoResponse.Unmarshal(m, b)
}
func (m *CountWithCryptoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountWithCryptoResponse.Marshal(b, m, deterministic)
}
func (m *CountWithCryptoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountWithCryptoResponse.Merge(m, src)
}
func (m *CountWithCryptoResponse) XXX_Size() int {
	return xxx_messageInfo_CountWithCryptoResponse.Size(m)
}
func (m *CountWithCryptoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountWithCryptoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountWithCryptoResponse proto.InternalMessageInfo

func (m *CountWithCryptoResponse) GetCounts() []*CountWithCryptoResponse_CryptoCount {
	if m != nil {
		return m.Counts
	}
	return nil
}

// crypto
type CountWithCryptoResponse_CryptoCount struct {
	Type                 CryptoType `protobuf:"varint,1,opt,name=type,proto3,enum=satellite.CryptoType" json:"type,omitempty"`
	CmkId                string     `protobuf:"bytes,2,opt,name=cmk_id,json=cmkId,proto3" json:"cmk_id,omitempty"`
	Total                int64      `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CountWithCryptoResponse_CryptoCount) Reset()         { *m = CountWithCryptoResponse_CryptoCount{} }
func (m *CountWithCryptoResponse_CryptoCount) String() string { return proto.CompactTextString(m) }
func (*CountWithCryptoResponse_CryptoCount) ProtoMessage()    {}
func (*CountWithCryptoResponse_CryptoCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{20, 0}
}

func (m *CountWithCryptoResponse_CryptoCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountWithCryptoResponse_CryptoCount.Unmarshal(m, b)
}
func (m *CountWithCryptoResponse_CryptoCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountWithCryptoResponse_CryptoCount.Marshal(b, m, deterministic)
}
func (m *CountWithCryptoResponse_CryptoCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountWithCryptoResponse_CryptoCount.Merge(m, src)
}
func (m *CountWithCryptoResponse_CryptoCount) XXX_Size() int {
	return xxx_messageInfo_CountWithCryptoResponse_CryptoCount.Size(m)
}
func (m *CountWithCryptoResponse_CryptoCount) XXX_DiscardUnknown() {
	xxx_messageInfo_CountWithCryptoResponse_CryptoCount.DiscardUnknown(m)
}

var xxx_messageInfo_CountWithCryptoResponse_CryptoCount proto.InternalMessageInfo

func (m *CountWithCryptoResponse_CryptoCount) GetType() CryptoType {
	if m != nil {
		return m.Type
	}
	return CryptoType_SELF_HOSTED
}

func (m *CountWithCryptoResponse_CryptoCount) GetCmkId() string {
	if m != nil {
		return m.CmkId
	}
	return ""
}

func (m *CountWithCryptoResponse_CryptoCount) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type UpdateCryptoRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Crypto               *Crypto     `protobuf:"bytes,2,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateCryptoRequest) Reset()         { *m = UpdateCryptoRequest{} }
func (m *UpdateCryptoRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCryptoRequest) ProtoMessage()    {}
func (*UpdateCryptoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{21}
}

func (m *UpdateCryptoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCryptoRequest.Unmarshal(m, b)
}
func (m *UpdateCryptoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCryptoRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCryptoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCryptoRequest.Merge(m, src)
}
func (m *UpdateCryptoRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCryptoRequest.Size(m)
}
func (m *UpdateCryptoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCryptoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCryptoRequest proto.InternalMessageInfo

func (m *UpdateCryptoRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *UpdateCryptoRequest) GetCrypto() *Crypto {
	if m != nil {
		return m.Crypto
	}
	return nil
}

type UpdateCryptoResponse struct {
	Crypto               *Crypto  `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCryptoResponse) Reset()         { *m = UpdateCryptoResponse{} }
func (m *UpdateCryptoResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCryptoResponse) ProtoMessage()    {}
func (*UpdateCryptoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{22}
}

func (m *UpdateCryptoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCryptoResponse.Unmarshal(m, b)
}
func (m *UpdateCryptoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCryptoResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCryptoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCryptoResponse.Merge(m, src)
}
func (m *UpdateCryptoResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCryptoResponse.Size(m)
}
func (m *UpdateCryptoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCryptoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCryptoResponse proto.InternalMessageInfo

func (m *UpdateCryptoResponse) GetCrypto() *Crypto {
	if m != nil {
		return m.Crypto
	}
	return nil
}

func init() {
	proto.RegisterEnum("satellite.CryptoType", CryptoType_name, CryptoType_value)
	proto.RegisterEnum("satellite.SyncGitRepoRequest_RemoteType", SyncGitRepoRequest_RemoteType_name, SyncGitRepoRequest_RemoteType_value)
	proto.RegisterType((*Crypto)(nil), "satellite.Crypto")
	proto.RegisterType((*CreateProjectRequest)(nil), "satellite.CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "satellite.CreateProjectResponse")
	proto.RegisterType((*RemoveProjectRequest)(nil), "satellite.RemoveProjectRequest")
	proto.RegisterType((*RemoveProjectResponse)(nil), "satellite.RemoveProjectResponse")
	proto.RegisterType((*ForkProjectRequest)(nil), "satellite.ForkProjectRequest")
	proto.RegisterType((*ForkProjectResponse)(nil), "satellite.ForkProjectResponse")
	proto.RegisterType((*MoveProjectRequest)(nil), "satellite.MoveProjectRequest")
	proto.RegisterType((*MoveProjectResponse)(nil), "satellite.MoveProjectResponse")
	proto.RegisterType((*ImportProjectRequest)(nil), "satellite.ImportProjectRequest")
	proto.RegisterType((*ImportProjectResponse)(nil), "satellite.ImportProjectResponse")
	proto.RegisterType((*TransferProjectRequest)(nil), "satellite.TransferProjectRequest")
	proto.RegisterType((*TransferProjectResponse)(nil), "satellite.TransferProjectResponse")
	proto.RegisterType((*SyncGitRepoRequest)(nil), "satellite.SyncGitRepoRequest")
	proto.RegisterType((*SyncGitRepoResponse)(nil), "satellite.SyncGitRepoResponse")
	proto.RegisterType((*GetCryptoRequest)(nil), "satellite.GetCryptoRequest")
	proto.RegisterType((*GetCryptoResponse)(nil), "satellite.GetCryptoResponse")
	proto.RegisterType((*FilterWithCryptoRequest)(nil), "satellite.FilterWithCryptoRequest")
	proto.RegisterType((*FilterWithCryptoResponse)(nil), "satellite.FilterWithCryptoResponse")
	proto.RegisterType((*CountWithCryptoRequest)(nil), "satellite.CountWithCryptoRequest")
	proto.RegisterType((*CountWithCryptoResponse)(nil), "satellite.CountWithCryptoResponse")
	proto.RegisterType((*CountWithCryptoResponse_CryptoCount)(nil), "satellite.CountWithCryptoResponse.CryptoCount")
	proto.RegisterType((*UpdateCryptoRequest)(nil), "satellite.UpdateCryptoRequest")
	proto.RegisterType((*UpdateCryptoResponse)(nil), "satellite.UpdateCryptoResponse")
}

func init() { proto.RegisterFile("project.proto", fileDescriptor_8340e6318dfdfac2) }

var fileDescriptor_8340e6318dfdfac2 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xf7, 0xc6, 0x8d, 0x13, 0x8f, 0xe3, 0xd8, 0xd9, 0xda, 0xb1, 0xe5, 0x16, 0x6a, 0x0e, 0xa9,
	0x72, 0x5b, 0x61, 0x84, 0x11, 0x12, 0x12, 0x12, 0x12, 0x84, 0xb8, 0xb1, 0xa8, 0x0b, 0xac, 0x1d,
	0x90, 0x2a, 0x2a, 0xeb, 0x72, 0xde, 0xb8, 0x8b, 0xcf, 0xb7, 0xc7, 0xde, 0x26, 0x91, 0xbf, 0x02,
	0x0f, 0x3c, 0xf2, 0x1d, 0x10, 0x12, 0xcf, 0x7c, 0x04, 0xbe, 0x03, 0xdf, 0x83, 0x67, 0x74, 0x7f,
	0x7c, 0xde, 0xf5, 0x9d, 0x9d, 0x44, 0xcd, 0x03, 0x8f, 0xbb, 0x33, 0xf3, 0x9b, 0xf9, 0xcd, 0xce,
	0xcd, 0xcc, 0x41, 0xd1, 0x15, 0xfc, 0x27, 0x6a, 0xc9, 0xb6, 0x2b, 0xb8, 0xe4, 0x38, 0xef, 0x99,
	0x92, 0xda, 0x36, 0x93, 0xb4, 0xb1, 0xe7, 0xbd, 0x31, 0x05, 0x1d, 0x87, 0x02, 0xe3, 0x77, 0x04,
	0xb9, 0x23, 0x31, 0x77, 0x25, 0xc7, 0x75, 0xd8, 0xa1, 0x8e, 0x79, 0x66, 0xd3, 0x71, 0x1d, 0x35,
	0x51, 0x6b, 0x97, 0x2c, 0x8e, 0xf8, 0x09, 0xdc, 0x93, 0x73, 0x97, 0xd6, 0xb7, 0x9a, 0xa8, 0xb5,
	0xdf, 0xa9, 0xb6, 0x63, 0xb0, 0x76, 0x68, 0x3a, 0x9c, 0xbb, 0x94, 0x04, 0x2a, 0xf8, 0x01, 0xe4,
	0x05, 0x9d, 0x30, 0xee, 0x8c, 0xd8, 0xb8, 0x9e, 0x6d, 0xa2, 0x56, 0x9e, 0xec, 0x86, 0x17, 0xbd,
	0x31, 0xae, 0x42, 0xce, 0x9a, 0x4d, 0x7d, 0xc9, 0xbd, 0x40, 0xb2, 0x6d, 0xcd, 0xa6, 0xbd, 0x31,
	0x7e, 0x0c, 0x25, 0xd3, 0xf3, 0x2e, 0x66, 0x74, 0x24, 0xb8, 0x4d, 0x47, 0xe7, 0x5c, 0xd4, 0xb7,
	0x03, 0x79, 0x31, 0xbc, 0x26, 0xdc, 0xa6, 0x5d, 0x2e, 0x8c, 0x3f, 0x10, 0x54, 0x8e, 0x04, 0x35,
	0x25, 0xfd, 0x36, 0x24, 0x47, 0xe8, 0xcf, 0x17, 0xd4, 0x93, 0xf8, 0x13, 0x00, 0x41, 0x5d, 0xee,
	0x31, 0xc9, 0xc5, 0x3c, 0x08, 0xbe, 0xa0, 0x45, 0x49, 0x62, 0x21, 0x51, 0x14, 0xf1, 0x47, 0x50,
	0x65, 0xde, 0xc8, 0x9b, 0x32, 0x77, 0x14, 0x65, 0x6b, 0x24, 0x7d, 0xc2, 0x01, 0xcf, 0x5d, 0x82,
	0x99, 0x37, 0x98, 0x32, 0x37, 0xf2, 0x35, 0xf4, 0x25, 0xf8, 0x09, 0xe4, 0xac, 0x80, 0x72, 0xc0,
	0xad, 0xd0, 0x39, 0x48, 0xe4, 0x82, 0x44, 0x0a, 0xc6, 0x07, 0x50, 0x5d, 0x09, 0xd6, 0x73, 0xb9,
	0xe3, 0x51, 0x5c, 0x81, 0xed, 0x4b, 0xd3, 0xbe, 0xa0, 0x51, 0x96, 0xc3, 0x83, 0xd1, 0x87, 0x0a,
	0xa1, 0x33, 0x7e, 0x79, 0x37, 0xdc, 0x7c, 0xef, 0x2b, 0x70, 0x1b, 0xbd, 0xff, 0x83, 0x00, 0x77,
	0xb9, 0x98, 0xae, 0x38, 0x3f, 0x06, 0xcc, 0x05, 0x9b, 0x30, 0xc7, 0xb4, 0xc9, 0x0d, 0x83, 0x48,
	0x31, 0xc0, 0x9f, 0xc2, 0x9e, 0x43, 0xaf, 0x5e, 0x9a, 0x33, 0xea, 0xb9, 0xa6, 0x15, 0xe6, 0xb7,
	0xd0, 0xa9, 0x28, 0x00, 0xb1, 0x8c, 0x68, 0x9a, 0xb8, 0x01, 0xbb, 0x82, 0xce, 0xb8, 0xa4, 0x3d,
	0x77, 0x59, 0x4d, 0xe1, 0x19, 0xb7, 0xa0, 0x3c, 0xb1, 0x47, 0x4b, 0xce, 0x8b, 0xba, 0xca, 0x92,
	0xfd, 0x89, 0xe2, 0xbd, 0x37, 0x36, 0x9e, 0xc1, 0x7d, 0x8d, 0xdc, 0xc6, 0x54, 0xfc, 0x8a, 0x00,
	0xf7, 0x93, 0xef, 0xf0, 0x19, 0x14, 0xb9, 0x3d, 0xbe, 0x69, 0x16, 0x74, 0x5d, 0xdf, 0xd8, 0xa1,
	0x57, 0x8a, 0xf1, 0xd6, 0x46, 0x63, 0x4d, 0xd7, 0x8f, 0xbe, 0x7f, 0xe3, 0x87, 0xfc, 0x0d, 0x41,
	0xa5, 0x37, 0x73, 0xb9, 0x90, 0x77, 0xf3, 0x8d, 0x3c, 0x84, 0x3c, 0x0b, 0xe0, 0x4e, 0x85, 0x1d,
	0x44, 0x9d, 0x27, 0xcb, 0x8b, 0x5b, 0x7e, 0x0e, 0x2b, 0x71, 0x6d, 0xe4, 0xf1, 0x27, 0x82, 0xc3,
	0xa1, 0x30, 0x1d, 0xef, 0x9c, 0x8a, 0xff, 0xcb, 0x4b, 0x6c, 0xaa, 0x46, 0xe3, 0x43, 0xa8, 0x25,
	0xe2, 0xdd, 0xc8, 0xf0, 0x5f, 0x04, 0x78, 0x30, 0x77, 0xac, 0xe7, 0x4c, 0xfa, 0x2e, 0xde, 0xfe,
	0x9d, 0xc2, 0x50, 0x4e, 0xc9, 0x8b, 0xc5, 0x3b, 0xc5, 0x17, 0xf8, 0xc4, 0x07, 0xf5, 0x0f, 0x7e,
	0xa7, 0x0e, 0x42, 0xdf, 0xef, 0xb4, 0x14, 0xd0, 0x64, 0x1c, 0x6d, 0x12, 0xeb, 0x13, 0xc5, 0xd6,
	0xe7, 0x22, 0xf9, 0x94, 0x3a, 0x8b, 0x0e, 0x1e, 0x1c, 0x8c, 0x67, 0x00, 0x4b, 0x7d, 0x5c, 0x84,
	0xfc, 0x60, 0x01, 0x5d, 0xce, 0xe0, 0x7d, 0x80, 0x2e, 0x17, 0x16, 0x1d, 0x48, 0xee, 0xd0, 0x32,
	0xf2, 0xeb, 0x59, 0xf3, 0xb7, 0x31, 0x4b, 0x3d, 0x28, 0x3f, 0xa7, 0x32, 0xaa, 0xa5, 0xb7, 0x6b,
	0x89, 0x9f, 0xc3, 0x81, 0x02, 0x15, 0x79, 0x5d, 0x56, 0x30, 0xba, 0xae, 0x82, 0x7f, 0x41, 0x50,
	0xeb, 0x32, 0x5b, 0x52, 0xf1, 0x03, 0x93, 0x6f, 0xf4, 0x90, 0x96, 0x93, 0x6d, 0x4b, 0x9d, 0x6c,
	0x4f, 0xe1, 0x60, 0xb5, 0x45, 0x79, 0xf5, 0x7b, 0xcd, 0x6c, 0x2b, 0x4b, 0x4a, 0x7a, 0x8f, 0xf2,
	0x7c, 0xfe, 0x36, 0x9b, 0x31, 0x19, 0xcc, 0xbe, 0x6d, 0x12, 0x1e, 0xf0, 0x21, 0xe4, 0xf8, 0xf9,
	0xb9, 0x47, 0x65, 0x3d, 0x17, 0x5c, 0x47, 0x27, 0xe3, 0x47, 0xa8, 0x27, 0x63, 0x89, 0x38, 0xa5,
	0x7a, 0x45, 0x6b, 0xbd, 0x4a, 0x2e, 0xcd, 0xf0, 0xdb, 0xce, 0x92, 0xf0, 0x60, 0xbc, 0x86, 0xc3,
	0x23, 0x7e, 0xe1, 0xc8, 0x24, 0xd1, 0x1a, 0xec, 0x84, 0x44, 0xbd, 0xfa, 0x56, 0x33, 0xdb, 0xca,
	0x93, 0x5c, 0xc0, 0xd4, 0xbb, 0x0d, 0x55, 0xe3, 0x6f, 0x04, 0xb5, 0x04, 0x7e, 0x14, 0x7c, 0x17,
	0x72, 0x96, 0x2f, 0x0a, 0x23, 0x2e, 0x74, 0xda, 0xea, 0x83, 0xa4, 0xdb, 0x44, 0x0f, 0x15, 0x48,
	0x49, 0x64, 0xdd, 0xa0, 0x50, 0x50, 0xae, 0xe3, 0x15, 0x06, 0x5d, 0xbf, 0xc2, 0xac, 0x79, 0xcb,
	0x38, 0x53, 0x59, 0x35, 0x53, 0x57, 0x70, 0xff, 0xd4, 0x1d, 0x9b, 0x92, 0xde, 0x45, 0x89, 0x2a,
	0xd5, 0xb8, 0x75, 0x5d, 0x35, 0x7e, 0x01, 0x15, 0xdd, 0xf1, 0xad, 0x0b, 0xfa, 0xe9, 0x63, 0x80,
	0x25, 0x79, 0x5c, 0x82, 0xc2, 0xe0, 0xf8, 0x45, 0x77, 0x74, 0xf2, 0xcd, 0x60, 0x78, 0xfc, 0x55,
	0x39, 0x83, 0x77, 0x20, 0xfb, 0x75, 0x7f, 0x50, 0x46, 0x9d, 0xbf, 0x76, 0x60, 0x3f, 0xea, 0x69,
	0x03, 0x2a, 0x2e, 0x99, 0x45, 0xf1, 0x10, 0x8a, 0xda, 0x72, 0x83, 0x1f, 0x69, 0x6e, 0x92, 0x3b,
	0x5a, 0xa3, 0xb9, 0x5e, 0x21, 0x8c, 0xdc, 0xc8, 0xf8, 0xa8, 0xda, 0xd2, 0xa2, 0xa1, 0xa6, 0x6d,
	0x47, 0x1a, 0x6a, 0xea, 0xbe, 0x63, 0x64, 0xf0, 0x4b, 0x28, 0x28, 0xd3, 0x1f, 0xbf, 0xa3, 0x98,
	0x24, 0x57, 0x9e, 0xc6, 0xbb, 0xeb, 0xc4, 0x2a, 0x9e, 0x32, 0x8f, 0x35, 0xbc, 0xe4, 0xde, 0xa0,
	0xe1, 0xf5, 0x53, 0xe3, 0xfb, 0x1e, 0x8a, 0xda, 0x64, 0xd4, 0x58, 0xa7, 0xcd, 0x72, 0x8d, 0x75,
	0xea, 0x50, 0x35, 0x32, 0x2d, 0x84, 0x5f, 0x41, 0x69, 0x65, 0x22, 0xe1, 0xf7, 0x14, 0xc3, 0xf4,
	0xe9, 0xda, 0x30, 0x36, 0xa9, 0xa8, 0x39, 0x50, 0x7a, 0xb8, 0x96, 0x83, 0xe4, 0x2c, 0xd1, 0x72,
	0x90, 0xd2, 0xfa, 0x8d, 0x0c, 0x3e, 0x81, 0x7c, 0xdc, 0x9b, 0xf1, 0x03, 0x45, 0x7d, 0xb5, 0xf9,
	0x37, 0x1e, 0xa6, 0x0b, 0x63, 0xa4, 0x57, 0x50, 0x5a, 0x69, 0x13, 0x1a, 0xeb, 0xf4, 0xb6, 0xa6,
	0xb1, 0x5e, 0xd3, 0x65, 0x8c, 0x0c, 0x7e, 0x0d, 0xe5, 0xd5, 0xa6, 0x8b, 0x55, 0xcb, 0x35, 0xd3,
	0xa1, 0xf1, 0xfe, 0x46, 0x9d, 0x18, 0xfe, 0x3b, 0xd8, 0x53, 0x3f, 0x69, 0xac, 0xa6, 0x2d, 0xa5,
	0xc9, 0x34, 0x1e, 0xad, 0x95, 0x2f, 0x20, 0xbf, 0xac, 0x41, 0xd5, 0xe2, 0xb3, 0xb6, 0x69, 0xb3,
	0x33, 0xf3, 0xcc, 0x6c, 0x9b, 0x13, 0x26, 0xdb, 0x13, 0xe1, 0x5a, 0x67, 0xb9, 0xe0, 0xf7, 0xef,
	0xe3, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xb3, 0xcd, 0x48, 0x28, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	RemoveProject(ctx context.Context, in *RemoveProjectRequest, opts ...grpc.CallOption) (*RemoveProjectResponse, error)
	ForkProject(ctx context.Context, in *ForkProjectRequest, opts ...grpc.CallOption) (*ForkProjectResponse, error)
	MoveProject(ctx context.Context, in *MoveProjectRequest, opts ...grpc.CallOption) (*MoveProjectResponse, error)
	ImportProject(ctx context.Context, opts ...grpc.CallOption) (ProjectService_ImportProjectClient, error)
	TransferProject(ctx context.Context, in *TransferProjectRequest, opts ...grpc.CallOption) (*TransferProjectResponse, error)
	SyncGitRepo(ctx context.Context, in *SyncGitRepoRequest, opts ...grpc.CallOption) (*SyncGitRepoResponse, error)
	// crypto
	GetCrypto(ctx context.Context, in *GetCryptoRequest, opts ...grpc.CallOption) (*GetCryptoResponse, error)
	CountWithCrypto(ctx context.Context, in *CountWithCryptoRequest, opts ...grpc.CallOption) (*CountWithCryptoResponse, error)
	FilterWithCrypto(ctx context.Context, in *FilterWithCryptoRequest, opts ...grpc.CallOption) (*FilterWithCryptoResponse, error)
	UpdateCrypto(ctx context.Context, in *UpdateCryptoRequest, opts ...grpc.CallOption) (*UpdateCryptoResponse, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) RemoveProject(ctx context.Context, in *RemoveProjectRequest, opts ...grpc.CallOption) (*RemoveProjectResponse, error) {
	out := new(RemoveProjectResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/RemoveProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) ForkProject(ctx context.Context, in *ForkProjectRequest, opts ...grpc.CallOption) (*ForkProjectResponse, error) {
	out := new(ForkProjectResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/ForkProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) MoveProject(ctx context.Context, in *MoveProjectRequest, opts ...grpc.CallOption) (*MoveProjectResponse, error) {
	out := new(MoveProjectResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/MoveProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) ImportProject(ctx context.Context, opts ...grpc.CallOption) (ProjectService_ImportProjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProjectService_serviceDesc.Streams[0], "/satellite.ProjectService/ImportProject", opts...)
	if err != nil {
		return nil, err
	}
	x := &projectServiceImportProjectClient{stream}
	return x, nil
}

type ProjectService_ImportProjectClient interface {
	Send(*ImportProjectRequest) error
	CloseAndRecv() (*ImportProjectResponse, error)
	grpc.ClientStream
}

type projectServiceImportProjectClient struct {
	grpc.ClientStream
}

func (x *projectServiceImportProjectClient) Send(m *ImportProjectRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *projectServiceImportProjectClient) CloseAndRecv() (*ImportProjectResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ImportProjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *projectServiceClient) TransferProject(ctx context.Context, in *TransferProjectRequest, opts ...grpc.CallOption) (*TransferProjectResponse, error) {
	out := new(TransferProjectResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/TransferProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) SyncGitRepo(ctx context.Context, in *SyncGitRepoRequest, opts ...grpc.CallOption) (*SyncGitRepoResponse, error) {
	out := new(SyncGitRepoResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/SyncGitRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetCrypto(ctx context.Context, in *GetCryptoRequest, opts ...grpc.CallOption) (*GetCryptoResponse, error) {
	out := new(GetCryptoResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/GetCrypto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) CountWithCrypto(ctx context.Context, in *CountWithCryptoRequest, opts ...grpc.CallOption) (*CountWithCryptoResponse, error) {
	out := new(CountWithCryptoResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/CountWithCrypto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) FilterWithCrypto(ctx context.Context, in *FilterWithCryptoRequest, opts ...grpc.CallOption) (*FilterWithCryptoResponse, error) {
	out := new(FilterWithCryptoResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/FilterWithCrypto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateCrypto(ctx context.Context, in *UpdateCryptoRequest, opts ...grpc.CallOption) (*UpdateCryptoResponse, error) {
	out := new(UpdateCryptoResponse)
	err := c.cc.Invoke(ctx, "/satellite.ProjectService/UpdateCrypto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	RemoveProject(context.Context, *RemoveProjectRequest) (*RemoveProjectResponse, error)
	ForkProject(context.Context, *ForkProjectRequest) (*ForkProjectResponse, error)
	MoveProject(context.Context, *MoveProjectRequest) (*MoveProjectResponse, error)
	ImportProject(ProjectService_ImportProjectServer) error
	TransferProject(context.Context, *TransferProjectRequest) (*TransferProjectResponse, error)
	SyncGitRepo(context.Context, *SyncGitRepoRequest) (*SyncGitRepoResponse, error)
	// crypto
	GetCrypto(context.Context, *GetCryptoRequest) (*GetCryptoResponse, error)
	CountWithCrypto(context.Context, *CountWithCryptoRequest) (*CountWithCryptoResponse, error)
	FilterWithCrypto(context.Context, *FilterWithCryptoRequest) (*FilterWithCryptoResponse, error)
	UpdateCrypto(context.Context, *UpdateCryptoRequest) (*UpdateCryptoResponse, error)
}

// UnimplementedProjectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServiceServer struct {
}

func (*UnimplementedProjectServiceServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedProjectServiceServer) RemoveProject(ctx context.Context, req *RemoveProjectRequest) (*RemoveProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProject not implemented")
}
func (*UnimplementedProjectServiceServer) ForkProject(ctx context.Context, req *ForkProjectRequest) (*ForkProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForkProject not implemented")
}
func (*UnimplementedProjectServiceServer) MoveProject(ctx context.Context, req *MoveProjectRequest) (*MoveProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveProject not implemented")
}
func (*UnimplementedProjectServiceServer) ImportProject(srv ProjectService_ImportProjectServer) error {
	return status.Errorf(codes.Unimplemented, "method ImportProject not implemented")
}
func (*UnimplementedProjectServiceServer) TransferProject(ctx context.Context, req *TransferProjectRequest) (*TransferProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferProject not implemented")
}
func (*UnimplementedProjectServiceServer) SyncGitRepo(ctx context.Context, req *SyncGitRepoRequest) (*SyncGitRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncGitRepo not implemented")
}
func (*UnimplementedProjectServiceServer) GetCrypto(ctx context.Context, req *GetCryptoRequest) (*GetCryptoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCrypto not implemented")
}
func (*UnimplementedProjectServiceServer) CountWithCrypto(ctx context.Context, req *CountWithCryptoRequest) (*CountWithCryptoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountWithCrypto not implemented")
}
func (*UnimplementedProjectServiceServer) FilterWithCrypto(ctx context.Context, req *FilterWithCryptoRequest) (*FilterWithCryptoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilterWithCrypto not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateCrypto(ctx context.Context, req *UpdateCryptoRequest) (*UpdateCryptoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCrypto not implemented")
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_RemoveProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).RemoveProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/RemoveProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).RemoveProject(ctx, req.(*RemoveProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_ForkProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForkProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).ForkProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/ForkProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).ForkProject(ctx, req.(*ForkProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_MoveProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).MoveProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/MoveProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).MoveProject(ctx, req.(*MoveProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_ImportProject_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProjectServiceServer).ImportProject(&projectServiceImportProjectServer{stream})
}

type ProjectService_ImportProjectServer interface {
	SendAndClose(*ImportProjectResponse) error
	Recv() (*ImportProjectRequest, error)
	grpc.ServerStream
}

type projectServiceImportProjectServer struct {
	grpc.ServerStream
}

func (x *projectServiceImportProjectServer) SendAndClose(m *ImportProjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *projectServiceImportProjectServer) Recv() (*ImportProjectRequest, error) {
	m := new(ImportProjectRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProjectService_TransferProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).TransferProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/TransferProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).TransferProject(ctx, req.(*TransferProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_SyncGitRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncGitRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).SyncGitRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/SyncGitRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).SyncGitRepo(ctx, req.(*SyncGitRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetCrypto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCryptoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetCrypto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/GetCrypto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetCrypto(ctx, req.(*GetCryptoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_CountWithCrypto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountWithCryptoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CountWithCrypto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/CountWithCrypto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CountWithCrypto(ctx, req.(*CountWithCryptoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_FilterWithCrypto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterWithCryptoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).FilterWithCrypto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/FilterWithCrypto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).FilterWithCrypto(ctx, req.(*FilterWithCryptoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateCrypto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCryptoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateCrypto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.ProjectService/UpdateCrypto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateCrypto(ctx, req.(*UpdateCryptoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satellite.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _ProjectService_CreateProject_Handler,
		},
		{
			MethodName: "RemoveProject",
			Handler:    _ProjectService_RemoveProject_Handler,
		},
		{
			MethodName: "ForkProject",
			Handler:    _ProjectService_ForkProject_Handler,
		},
		{
			MethodName: "MoveProject",
			Handler:    _ProjectService_MoveProject_Handler,
		},
		{
			MethodName: "TransferProject",
			Handler:    _ProjectService_TransferProject_Handler,
		},
		{
			MethodName: "SyncGitRepo",
			Handler:    _ProjectService_SyncGitRepo_Handler,
		},
		{
			MethodName: "GetCrypto",
			Handler:    _ProjectService_GetCrypto_Handler,
		},
		{
			MethodName: "CountWithCrypto",
			Handler:    _ProjectService_CountWithCrypto_Handler,
		},
		{
			MethodName: "FilterWithCrypto",
			Handler:    _ProjectService_FilterWithCrypto_Handler,
		},
		{
			MethodName: "UpdateCrypto",
			Handler:    _ProjectService_UpdateCrypto_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ImportProject",
			Handler:       _ProjectService_ImportProject_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "project.proto",
}
