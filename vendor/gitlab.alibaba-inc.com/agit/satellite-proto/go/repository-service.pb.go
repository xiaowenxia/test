// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository-service.proto

package satellite

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetArchiveRequest_Format int32

const (
	GetArchiveRequest_ZIP     GetArchiveRequest_Format = 0
	GetArchiveRequest_TAR     GetArchiveRequest_Format = 1
	GetArchiveRequest_TAR_GZ  GetArchiveRequest_Format = 2
	GetArchiveRequest_TAR_BZ2 GetArchiveRequest_Format = 3
)

var GetArchiveRequest_Format_name = map[int32]string{
	0: "ZIP",
	1: "TAR",
	2: "TAR_GZ",
	3: "TAR_BZ2",
}

var GetArchiveRequest_Format_value = map[string]int32{
	"ZIP":     0,
	"TAR":     1,
	"TAR_GZ":  2,
	"TAR_BZ2": 3,
}

func (x GetArchiveRequest_Format) String() string {
	return proto.EnumName(GetArchiveRequest_Format_name, int32(x))
}

func (GetArchiveRequest_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{20, 0}
}

type InitRepositoryRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InitRepositoryRequest) Reset()         { *m = InitRepositoryRequest{} }
func (m *InitRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*InitRepositoryRequest) ProtoMessage()    {}
func (*InitRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{0}
}

func (m *InitRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepositoryRequest.Unmarshal(m, b)
}
func (m *InitRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *InitRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepositoryRequest.Merge(m, src)
}
func (m *InitRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_InitRepositoryRequest.Size(m)
}
func (m *InitRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepositoryRequest proto.InternalMessageInfo

func (m *InitRepositoryRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type InitRepositoryResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRepositoryResponse) Reset()         { *m = InitRepositoryResponse{} }
func (m *InitRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*InitRepositoryResponse) ProtoMessage()    {}
func (*InitRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{1}
}

func (m *InitRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepositoryResponse.Unmarshal(m, b)
}
func (m *InitRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepositoryResponse.Marshal(b, m, deterministic)
}
func (m *InitRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepositoryResponse.Merge(m, src)
}
func (m *InitRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_InitRepositoryResponse.Size(m)
}
func (m *InitRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepositoryResponse proto.InternalMessageInfo

func (m *InitRepositoryResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type RepositoryExistsRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositoryExistsRequest) Reset()         { *m = RepositoryExistsRequest{} }
func (m *RepositoryExistsRequest) String() string { return proto.CompactTextString(m) }
func (*RepositoryExistsRequest) ProtoMessage()    {}
func (*RepositoryExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{2}
}

func (m *RepositoryExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryExistsRequest.Unmarshal(m, b)
}
func (m *RepositoryExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryExistsRequest.Marshal(b, m, deterministic)
}
func (m *RepositoryExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryExistsRequest.Merge(m, src)
}
func (m *RepositoryExistsRequest) XXX_Size() int {
	return xxx_messageInfo_RepositoryExistsRequest.Size(m)
}
func (m *RepositoryExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryExistsRequest proto.InternalMessageInfo

func (m *RepositoryExistsRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositoryExistsResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositoryExistsResponse) Reset()         { *m = RepositoryExistsResponse{} }
func (m *RepositoryExistsResponse) String() string { return proto.CompactTextString(m) }
func (*RepositoryExistsResponse) ProtoMessage()    {}
func (*RepositoryExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{3}
}

func (m *RepositoryExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryExistsResponse.Unmarshal(m, b)
}
func (m *RepositoryExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryExistsResponse.Marshal(b, m, deterministic)
}
func (m *RepositoryExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryExistsResponse.Merge(m, src)
}
func (m *RepositoryExistsResponse) XXX_Size() int {
	return xxx_messageInfo_RepositoryExistsResponse.Size(m)
}
func (m *RepositoryExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryExistsResponse proto.InternalMessageInfo

func (m *RepositoryExistsResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type RepositoryIsEmptyRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositoryIsEmptyRequest) Reset()         { *m = RepositoryIsEmptyRequest{} }
func (m *RepositoryIsEmptyRequest) String() string { return proto.CompactTextString(m) }
func (*RepositoryIsEmptyRequest) ProtoMessage()    {}
func (*RepositoryIsEmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{4}
}

func (m *RepositoryIsEmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryIsEmptyRequest.Unmarshal(m, b)
}
func (m *RepositoryIsEmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryIsEmptyRequest.Marshal(b, m, deterministic)
}
func (m *RepositoryIsEmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryIsEmptyRequest.Merge(m, src)
}
func (m *RepositoryIsEmptyRequest) XXX_Size() int {
	return xxx_messageInfo_RepositoryIsEmptyRequest.Size(m)
}
func (m *RepositoryIsEmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryIsEmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryIsEmptyRequest proto.InternalMessageInfo

func (m *RepositoryIsEmptyRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositoryIsEmptyResponse struct {
	IsEmpty              bool     `protobuf:"varint,1,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositoryIsEmptyResponse) Reset()         { *m = RepositoryIsEmptyResponse{} }
func (m *RepositoryIsEmptyResponse) String() string { return proto.CompactTextString(m) }
func (*RepositoryIsEmptyResponse) ProtoMessage()    {}
func (*RepositoryIsEmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{5}
}

func (m *RepositoryIsEmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryIsEmptyResponse.Unmarshal(m, b)
}
func (m *RepositoryIsEmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryIsEmptyResponse.Marshal(b, m, deterministic)
}
func (m *RepositoryIsEmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryIsEmptyResponse.Merge(m, src)
}
func (m *RepositoryIsEmptyResponse) XXX_Size() int {
	return xxx_messageInfo_RepositoryIsEmptyResponse.Size(m)
}
func (m *RepositoryIsEmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryIsEmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryIsEmptyResponse proto.InternalMessageInfo

func (m *RepositoryIsEmptyResponse) GetIsEmpty() bool {
	if m != nil {
		return m.IsEmpty
	}
	return false
}

type RepackIncrementalRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepackIncrementalRequest) Reset()         { *m = RepackIncrementalRequest{} }
func (m *RepackIncrementalRequest) String() string { return proto.CompactTextString(m) }
func (*RepackIncrementalRequest) ProtoMessage()    {}
func (*RepackIncrementalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{6}
}

func (m *RepackIncrementalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackIncrementalRequest.Unmarshal(m, b)
}
func (m *RepackIncrementalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackIncrementalRequest.Marshal(b, m, deterministic)
}
func (m *RepackIncrementalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackIncrementalRequest.Merge(m, src)
}
func (m *RepackIncrementalRequest) XXX_Size() int {
	return xxx_messageInfo_RepackIncrementalRequest.Size(m)
}
func (m *RepackIncrementalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackIncrementalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepackIncrementalRequest proto.InternalMessageInfo

func (m *RepackIncrementalRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepackIncrementalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepackIncrementalResponse) Reset()         { *m = RepackIncrementalResponse{} }
func (m *RepackIncrementalResponse) String() string { return proto.CompactTextString(m) }
func (*RepackIncrementalResponse) ProtoMessage()    {}
func (*RepackIncrementalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{7}
}

func (m *RepackIncrementalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackIncrementalResponse.Unmarshal(m, b)
}
func (m *RepackIncrementalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackIncrementalResponse.Marshal(b, m, deterministic)
}
func (m *RepackIncrementalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackIncrementalResponse.Merge(m, src)
}
func (m *RepackIncrementalResponse) XXX_Size() int {
	return xxx_messageInfo_RepackIncrementalResponse.Size(m)
}
func (m *RepackIncrementalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackIncrementalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepackIncrementalResponse proto.InternalMessageInfo

type RepackFullRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CreateBitmap         bool        `protobuf:"varint,2,opt,name=create_bitmap,json=createBitmap,proto3" json:"create_bitmap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepackFullRequest) Reset()         { *m = RepackFullRequest{} }
func (m *RepackFullRequest) String() string { return proto.CompactTextString(m) }
func (*RepackFullRequest) ProtoMessage()    {}
func (*RepackFullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{8}
}

func (m *RepackFullRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackFullRequest.Unmarshal(m, b)
}
func (m *RepackFullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackFullRequest.Marshal(b, m, deterministic)
}
func (m *RepackFullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackFullRequest.Merge(m, src)
}
func (m *RepackFullRequest) XXX_Size() int {
	return xxx_messageInfo_RepackFullRequest.Size(m)
}
func (m *RepackFullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackFullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepackFullRequest proto.InternalMessageInfo

func (m *RepackFullRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *RepackFullRequest) GetCreateBitmap() bool {
	if m != nil {
		return m.CreateBitmap
	}
	return false
}

type RepackFullResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepackFullResponse) Reset()         { *m = RepackFullResponse{} }
func (m *RepackFullResponse) String() string { return proto.CompactTextString(m) }
func (*RepackFullResponse) ProtoMessage()    {}
func (*RepackFullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{9}
}

func (m *RepackFullResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackFullResponse.Unmarshal(m, b)
}
func (m *RepackFullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackFullResponse.Marshal(b, m, deterministic)
}
func (m *RepackFullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackFullResponse.Merge(m, src)
}
func (m *RepackFullResponse) XXX_Size() int {
	return xxx_messageInfo_RepackFullResponse.Size(m)
}
func (m *RepackFullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackFullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepackFullResponse proto.InternalMessageInfo

type GarbageCollectRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CreateBitmap         bool        `protobuf:"varint,2,opt,name=create_bitmap,json=createBitmap,proto3" json:"create_bitmap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GarbageCollectRequest) Reset()         { *m = GarbageCollectRequest{} }
func (m *GarbageCollectRequest) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectRequest) ProtoMessage()    {}
func (*GarbageCollectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{10}
}

func (m *GarbageCollectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectRequest.Unmarshal(m, b)
}
func (m *GarbageCollectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectRequest.Marshal(b, m, deterministic)
}
func (m *GarbageCollectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectRequest.Merge(m, src)
}
func (m *GarbageCollectRequest) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectRequest.Size(m)
}
func (m *GarbageCollectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectRequest proto.InternalMessageInfo

func (m *GarbageCollectRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *GarbageCollectRequest) GetCreateBitmap() bool {
	if m != nil {
		return m.CreateBitmap
	}
	return false
}

type GarbageCollectResponse struct {
	// The old reference
	BeforeRef string `protobuf:"bytes,1,opt,name=before_ref,json=beforeRef,proto3" json:"before_ref,omitempty"`
	// The new reference
	AfterRef string `protobuf:"bytes,2,opt,name=after_ref,json=afterRef,proto3" json:"after_ref,omitempty"`
	// The reference path string
	Refs                 string   `protobuf:"bytes,3,opt,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GarbageCollectResponse) Reset()         { *m = GarbageCollectResponse{} }
func (m *GarbageCollectResponse) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectResponse) ProtoMessage()    {}
func (*GarbageCollectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{11}
}

func (m *GarbageCollectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectResponse.Unmarshal(m, b)
}
func (m *GarbageCollectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectResponse.Marshal(b, m, deterministic)
}
func (m *GarbageCollectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectResponse.Merge(m, src)
}
func (m *GarbageCollectResponse) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectResponse.Size(m)
}
func (m *GarbageCollectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectResponse proto.InternalMessageInfo

func (m *GarbageCollectResponse) GetBeforeRef() string {
	if m != nil {
		return m.BeforeRef
	}
	return ""
}

func (m *GarbageCollectResponse) GetAfterRef() string {
	if m != nil {
		return m.AfterRef
	}
	return ""
}

func (m *GarbageCollectResponse) GetRefs() string {
	if m != nil {
		return m.Refs
	}
	return ""
}

type RepositorySizeRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositorySizeRequest) Reset()         { *m = RepositorySizeRequest{} }
func (m *RepositorySizeRequest) String() string { return proto.CompactTextString(m) }
func (*RepositorySizeRequest) ProtoMessage()    {}
func (*RepositorySizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{12}
}

func (m *RepositorySizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositorySizeRequest.Unmarshal(m, b)
}
func (m *RepositorySizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositorySizeRequest.Marshal(b, m, deterministic)
}
func (m *RepositorySizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositorySizeRequest.Merge(m, src)
}
func (m *RepositorySizeRequest) XXX_Size() int {
	return xxx_messageInfo_RepositorySizeRequest.Size(m)
}
func (m *RepositorySizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositorySizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositorySizeRequest proto.InternalMessageInfo

func (m *RepositorySizeRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositorySizeResponse struct {
	// Repository size in kilobytes
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositorySizeResponse) Reset()         { *m = RepositorySizeResponse{} }
func (m *RepositorySizeResponse) String() string { return proto.CompactTextString(m) }
func (*RepositorySizeResponse) ProtoMessage()    {}
func (*RepositorySizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{13}
}

func (m *RepositorySizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositorySizeResponse.Unmarshal(m, b)
}
func (m *RepositorySizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositorySizeResponse.Marshal(b, m, deterministic)
}
func (m *RepositorySizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositorySizeResponse.Merge(m, src)
}
func (m *RepositorySizeResponse) XXX_Size() int {
	return xxx_messageInfo_RepositorySizeResponse.Size(m)
}
func (m *RepositorySizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositorySizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositorySizeResponse proto.InternalMessageInfo

func (m *RepositorySizeResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ApplyGitattributesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Revision             []byte      `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ApplyGitattributesRequest) Reset()         { *m = ApplyGitattributesRequest{} }
func (m *ApplyGitattributesRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyGitattributesRequest) ProtoMessage()    {}
func (*ApplyGitattributesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{14}
}

func (m *ApplyGitattributesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyGitattributesRequest.Unmarshal(m, b)
}
func (m *ApplyGitattributesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyGitattributesRequest.Marshal(b, m, deterministic)
}
func (m *ApplyGitattributesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyGitattributesRequest.Merge(m, src)
}
func (m *ApplyGitattributesRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyGitattributesRequest.Size(m)
}
func (m *ApplyGitattributesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyGitattributesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyGitattributesRequest proto.InternalMessageInfo

func (m *ApplyGitattributesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ApplyGitattributesRequest) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

type ApplyGitattributesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyGitattributesResponse) Reset()         { *m = ApplyGitattributesResponse{} }
func (m *ApplyGitattributesResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyGitattributesResponse) ProtoMessage()    {}
func (*ApplyGitattributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{15}
}

func (m *ApplyGitattributesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyGitattributesResponse.Unmarshal(m, b)
}
func (m *ApplyGitattributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyGitattributesResponse.Marshal(b, m, deterministic)
}
func (m *ApplyGitattributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyGitattributesResponse.Merge(m, src)
}
func (m *ApplyGitattributesResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyGitattributesResponse.Size(m)
}
func (m *ApplyGitattributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyGitattributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyGitattributesResponse proto.InternalMessageInfo

type FetchRemoteRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Remote               string      `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Force                bool        `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	NoTags               bool        `protobuf:"varint,4,opt,name=no_tags,json=noTags,proto3" json:"no_tags,omitempty"`
	Timeout              int32       `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	SshKey               string      `protobuf:"bytes,6,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	KnownHosts           string      `protobuf:"bytes,7,opt,name=known_hosts,json=knownHosts,proto3" json:"known_hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchRemoteRequest) Reset()         { *m = FetchRemoteRequest{} }
func (m *FetchRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRemoteRequest) ProtoMessage()    {}
func (*FetchRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{16}
}

func (m *FetchRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRemoteRequest.Unmarshal(m, b)
}
func (m *FetchRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRemoteRequest.Marshal(b, m, deterministic)
}
func (m *FetchRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRemoteRequest.Merge(m, src)
}
func (m *FetchRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRemoteRequest.Size(m)
}
func (m *FetchRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRemoteRequest proto.InternalMessageInfo

func (m *FetchRemoteRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FetchRemoteRequest) GetRemote() string {
	if m != nil {
		return m.Remote
	}
	return ""
}

func (m *FetchRemoteRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *FetchRemoteRequest) GetNoTags() bool {
	if m != nil {
		return m.NoTags
	}
	return false
}

func (m *FetchRemoteRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *FetchRemoteRequest) GetSshKey() string {
	if m != nil {
		return m.SshKey
	}
	return ""
}

func (m *FetchRemoteRequest) GetKnownHosts() string {
	if m != nil {
		return m.KnownHosts
	}
	return ""
}

type FetchRemoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRemoteResponse) Reset()         { *m = FetchRemoteResponse{} }
func (m *FetchRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*FetchRemoteResponse) ProtoMessage()    {}
func (*FetchRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{17}
}

func (m *FetchRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRemoteResponse.Unmarshal(m, b)
}
func (m *FetchRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRemoteResponse.Marshal(b, m, deterministic)
}
func (m *FetchRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRemoteResponse.Merge(m, src)
}
func (m *FetchRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_FetchRemoteResponse.Size(m)
}
func (m *FetchRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRemoteResponse proto.InternalMessageInfo

type CreateRepositoryRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryRequest) Reset()         { *m = CreateRepositoryRequest{} }
func (m *CreateRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryRequest) ProtoMessage()    {}
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{18}
}

func (m *CreateRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryRequest.Merge(m, src)
}
func (m *CreateRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryRequest.Size(m)
}
func (m *CreateRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryRequest proto.InternalMessageInfo

func (m *CreateRepositoryRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type CreateRepositoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryResponse) Reset()         { *m = CreateRepositoryResponse{} }
func (m *CreateRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryResponse) ProtoMessage()    {}
func (*CreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{19}
}

func (m *CreateRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryResponse.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryResponse.Merge(m, src)
}
func (m *CreateRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryResponse.Size(m)
}
func (m *CreateRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryResponse proto.InternalMessageInfo

type GetArchiveRequest struct {
	Repository           *Repository              `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CommitId             string                   `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Prefix               string                   `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Format               GetArchiveRequest_Format `protobuf:"varint,4,opt,name=format,proto3,enum=satellite.GetArchiveRequest_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetArchiveRequest) Reset()         { *m = GetArchiveRequest{} }
func (m *GetArchiveRequest) String() string { return proto.CompactTextString(m) }
func (*GetArchiveRequest) ProtoMessage()    {}
func (*GetArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{20}
}

func (m *GetArchiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArchiveRequest.Unmarshal(m, b)
}
func (m *GetArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArchiveRequest.Marshal(b, m, deterministic)
}
func (m *GetArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArchiveRequest.Merge(m, src)
}
func (m *GetArchiveRequest) XXX_Size() int {
	return xxx_messageInfo_GetArchiveRequest.Size(m)
}
func (m *GetArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArchiveRequest proto.InternalMessageInfo

func (m *GetArchiveRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *GetArchiveRequest) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *GetArchiveRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *GetArchiveRequest) GetFormat() GetArchiveRequest_Format {
	if m != nil {
		return m.Format
	}
	return GetArchiveRequest_ZIP
}

type GetArchiveResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArchiveResponse) Reset()         { *m = GetArchiveResponse{} }
func (m *GetArchiveResponse) String() string { return proto.CompactTextString(m) }
func (*GetArchiveResponse) ProtoMessage()    {}
func (*GetArchiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{21}
}

func (m *GetArchiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArchiveResponse.Unmarshal(m, b)
}
func (m *GetArchiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArchiveResponse.Marshal(b, m, deterministic)
}
func (m *GetArchiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArchiveResponse.Merge(m, src)
}
func (m *GetArchiveResponse) XXX_Size() int {
	return xxx_messageInfo_GetArchiveResponse.Size(m)
}
func (m *GetArchiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArchiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArchiveResponse proto.InternalMessageInfo

func (m *GetArchiveResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HasLocalBranchesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HasLocalBranchesRequest) Reset()         { *m = HasLocalBranchesRequest{} }
func (m *HasLocalBranchesRequest) String() string { return proto.CompactTextString(m) }
func (*HasLocalBranchesRequest) ProtoMessage()    {}
func (*HasLocalBranchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{22}
}

func (m *HasLocalBranchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasLocalBranchesRequest.Unmarshal(m, b)
}
func (m *HasLocalBranchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasLocalBranchesRequest.Marshal(b, m, deterministic)
}
func (m *HasLocalBranchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasLocalBranchesRequest.Merge(m, src)
}
func (m *HasLocalBranchesRequest) XXX_Size() int {
	return xxx_messageInfo_HasLocalBranchesRequest.Size(m)
}
func (m *HasLocalBranchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasLocalBranchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasLocalBranchesRequest proto.InternalMessageInfo

func (m *HasLocalBranchesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type HasLocalBranchesResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasLocalBranchesResponse) Reset()         { *m = HasLocalBranchesResponse{} }
func (m *HasLocalBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*HasLocalBranchesResponse) ProtoMessage()    {}
func (*HasLocalBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{23}
}

func (m *HasLocalBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasLocalBranchesResponse.Unmarshal(m, b)
}
func (m *HasLocalBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasLocalBranchesResponse.Marshal(b, m, deterministic)
}
func (m *HasLocalBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasLocalBranchesResponse.Merge(m, src)
}
func (m *HasLocalBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_HasLocalBranchesResponse.Size(m)
}
func (m *HasLocalBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasLocalBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasLocalBranchesResponse proto.InternalMessageInfo

func (m *HasLocalBranchesResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type ChangeStorageRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	NewStorageName       string      `protobuf:"bytes,2,opt,name=new_storage_name,json=newStorageName,proto3" json:"new_storage_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ChangeStorageRequest) Reset()         { *m = ChangeStorageRequest{} }
func (m *ChangeStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeStorageRequest) ProtoMessage()    {}
func (*ChangeStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{24}
}

func (m *ChangeStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeStorageRequest.Unmarshal(m, b)
}
func (m *ChangeStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeStorageRequest.Marshal(b, m, deterministic)
}
func (m *ChangeStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeStorageRequest.Merge(m, src)
}
func (m *ChangeStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeStorageRequest.Size(m)
}
func (m *ChangeStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeStorageRequest proto.InternalMessageInfo

func (m *ChangeStorageRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ChangeStorageRequest) GetNewStorageName() string {
	if m != nil {
		return m.NewStorageName
	}
	return ""
}

type ChangeStorageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeStorageResponse) Reset()         { *m = ChangeStorageResponse{} }
func (m *ChangeStorageResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeStorageResponse) ProtoMessage()    {}
func (*ChangeStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{25}
}

func (m *ChangeStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeStorageResponse.Unmarshal(m, b)
}
func (m *ChangeStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeStorageResponse.Marshal(b, m, deterministic)
}
func (m *ChangeStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeStorageResponse.Merge(m, src)
}
func (m *ChangeStorageResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeStorageResponse.Size(m)
}
func (m *ChangeStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeStorageResponse proto.InternalMessageInfo

type FetchSourceBranchRequest struct {
	Repository       *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	SourceRepository *Repository `protobuf:"bytes,2,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	SourceBranch     []byte      `protobuf:"bytes,3,opt,name=source_branch,json=sourceBranch,proto3" json:"source_branch,omitempty"`
	TargetRef        []byte      `protobuf:"bytes,4,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`
	GlId             string      `protobuf:"bytes,5,opt,name=gl_id,json=glId,proto3" json:"gl_id,omitempty"`
	// The update timestamp, all the replicates will use this timestamp
	UpdateTimestamp *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
	// Will call post-receive when it is true
	IsCallPostReceive    bool     `protobuf:"varint,7,opt,name=is_call_post_receive,json=isCallPostReceive,proto3" json:"is_call_post_receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchSourceBranchRequest) Reset()         { *m = FetchSourceBranchRequest{} }
func (m *FetchSourceBranchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchSourceBranchRequest) ProtoMessage()    {}
func (*FetchSourceBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{26}
}

func (m *FetchSourceBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchSourceBranchRequest.Unmarshal(m, b)
}
func (m *FetchSourceBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchSourceBranchRequest.Marshal(b, m, deterministic)
}
func (m *FetchSourceBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchSourceBranchRequest.Merge(m, src)
}
func (m *FetchSourceBranchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchSourceBranchRequest.Size(m)
}
func (m *FetchSourceBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchSourceBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchSourceBranchRequest proto.InternalMessageInfo

func (m *FetchSourceBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetSourceRepository() *Repository {
	if m != nil {
		return m.SourceRepository
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetSourceBranch() []byte {
	if m != nil {
		return m.SourceBranch
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetTargetRef() []byte {
	if m != nil {
		return m.TargetRef
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetGlId() string {
	if m != nil {
		return m.GlId
	}
	return ""
}

func (m *FetchSourceBranchRequest) GetUpdateTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTimestamp
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetIsCallPostReceive() bool {
	if m != nil {
		return m.IsCallPostReceive
	}
	return false
}

type FetchSourceBranchResponse struct {
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// The old reference
	BeforeRef string `protobuf:"bytes,2,opt,name=before_ref,json=beforeRef,proto3" json:"before_ref,omitempty"`
	// The new reference
	AfterRef string `protobuf:"bytes,3,opt,name=after_ref,json=afterRef,proto3" json:"after_ref,omitempty"`
	// The reference path string
	Refs                 string   `protobuf:"bytes,4,opt,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchSourceBranchResponse) Reset()         { *m = FetchSourceBranchResponse{} }
func (m *FetchSourceBranchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchSourceBranchResponse) ProtoMessage()    {}
func (*FetchSourceBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{27}
}

func (m *FetchSourceBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchSourceBranchResponse.Unmarshal(m, b)
}
func (m *FetchSourceBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchSourceBranchResponse.Marshal(b, m, deterministic)
}
func (m *FetchSourceBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchSourceBranchResponse.Merge(m, src)
}
func (m *FetchSourceBranchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchSourceBranchResponse.Size(m)
}
func (m *FetchSourceBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchSourceBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchSourceBranchResponse proto.InternalMessageInfo

func (m *FetchSourceBranchResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *FetchSourceBranchResponse) GetBeforeRef() string {
	if m != nil {
		return m.BeforeRef
	}
	return ""
}

func (m *FetchSourceBranchResponse) GetAfterRef() string {
	if m != nil {
		return m.AfterRef
	}
	return ""
}

func (m *FetchSourceBranchResponse) GetRefs() string {
	if m != nil {
		return m.Refs
	}
	return ""
}

type WriteRefRequest struct {
	Repository  *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Ref         []byte      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Revision    []byte      `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	OldRevision []byte      `protobuf:"bytes,4,opt,name=old_revision,json=oldRevision,proto3" json:"old_revision,omitempty"`
	GlId        string      `protobuf:"bytes,7,opt,name=gl_id,json=glId,proto3" json:"gl_id,omitempty"`
	// The update timestamp, all the replicates will use this timestamp
	UpdateTimestamp *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
	// Will call post-receive when it is true
	IsCallPostReceive    bool     `protobuf:"varint,9,opt,name=is_call_post_receive,json=isCallPostReceive,proto3" json:"is_call_post_receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRefRequest) Reset()         { *m = WriteRefRequest{} }
func (m *WriteRefRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRefRequest) ProtoMessage()    {}
func (*WriteRefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{28}
}

func (m *WriteRefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRefRequest.Unmarshal(m, b)
}
func (m *WriteRefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRefRequest.Marshal(b, m, deterministic)
}
func (m *WriteRefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRefRequest.Merge(m, src)
}
func (m *WriteRefRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRefRequest.Size(m)
}
func (m *WriteRefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRefRequest proto.InternalMessageInfo

func (m *WriteRefRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *WriteRefRequest) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *WriteRefRequest) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *WriteRefRequest) GetOldRevision() []byte {
	if m != nil {
		return m.OldRevision
	}
	return nil
}

func (m *WriteRefRequest) GetGlId() string {
	if m != nil {
		return m.GlId
	}
	return ""
}

func (m *WriteRefRequest) GetUpdateTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTimestamp
	}
	return nil
}

func (m *WriteRefRequest) GetIsCallPostReceive() bool {
	if m != nil {
		return m.IsCallPostReceive
	}
	return false
}

type WriteRefResponse struct {
	// The old reference
	BeforeRef string `protobuf:"bytes,2,opt,name=before_ref,json=beforeRef,proto3" json:"before_ref,omitempty"`
	// The new reference
	AfterRef string `protobuf:"bytes,3,opt,name=after_ref,json=afterRef,proto3" json:"after_ref,omitempty"`
	// The reference path string
	Refs                 string   `protobuf:"bytes,4,opt,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRefResponse) Reset()         { *m = WriteRefResponse{} }
func (m *WriteRefResponse) String() string { return proto.CompactTextString(m) }
func (*WriteRefResponse) ProtoMessage()    {}
func (*WriteRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{29}
}

func (m *WriteRefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRefResponse.Unmarshal(m, b)
}
func (m *WriteRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRefResponse.Marshal(b, m, deterministic)
}
func (m *WriteRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRefResponse.Merge(m, src)
}
func (m *WriteRefResponse) XXX_Size() int {
	return xxx_messageInfo_WriteRefResponse.Size(m)
}
func (m *WriteRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRefResponse proto.InternalMessageInfo

func (m *WriteRefResponse) GetBeforeRef() string {
	if m != nil {
		return m.BeforeRef
	}
	return ""
}

func (m *WriteRefResponse) GetAfterRef() string {
	if m != nil {
		return m.AfterRef
	}
	return ""
}

func (m *WriteRefResponse) GetRefs() string {
	if m != nil {
		return m.Refs
	}
	return ""
}

type GetLastModifiedRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLastModifiedRequest) Reset()         { *m = GetLastModifiedRequest{} }
func (m *GetLastModifiedRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastModifiedRequest) ProtoMessage()    {}
func (*GetLastModifiedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{30}
}

func (m *GetLastModifiedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastModifiedRequest.Unmarshal(m, b)
}
func (m *GetLastModifiedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastModifiedRequest.Marshal(b, m, deterministic)
}
func (m *GetLastModifiedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastModifiedRequest.Merge(m, src)
}
func (m *GetLastModifiedRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastModifiedRequest.Size(m)
}
func (m *GetLastModifiedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastModifiedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastModifiedRequest proto.InternalMessageInfo

func (m *GetLastModifiedRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetLastModifiedResponse struct {
	HasFile              bool                 `protobuf:"varint,1,opt,name=has_file,json=hasFile,proto3" json:"has_file,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLastModifiedResponse) Reset()         { *m = GetLastModifiedResponse{} }
func (m *GetLastModifiedResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastModifiedResponse) ProtoMessage()    {}
func (*GetLastModifiedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{31}
}

func (m *GetLastModifiedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastModifiedResponse.Unmarshal(m, b)
}
func (m *GetLastModifiedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastModifiedResponse.Marshal(b, m, deterministic)
}
func (m *GetLastModifiedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastModifiedResponse.Merge(m, src)
}
func (m *GetLastModifiedResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastModifiedResponse.Size(m)
}
func (m *GetLastModifiedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastModifiedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastModifiedResponse proto.InternalMessageInfo

func (m *GetLastModifiedResponse) GetHasFile() bool {
	if m != nil {
		return m.HasFile
	}
	return false
}

func (m *GetLastModifiedResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type GetLastSyncRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLastSyncRequest) Reset()         { *m = GetLastSyncRequest{} }
func (m *GetLastSyncRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastSyncRequest) ProtoMessage()    {}
func (*GetLastSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{32}
}

func (m *GetLastSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastSyncRequest.Unmarshal(m, b)
}
func (m *GetLastSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastSyncRequest.Marshal(b, m, deterministic)
}
func (m *GetLastSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastSyncRequest.Merge(m, src)
}
func (m *GetLastSyncRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastSyncRequest.Size(m)
}
func (m *GetLastSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastSyncRequest proto.InternalMessageInfo

func (m *GetLastSyncRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetLastSyncResponse struct {
	HasFile              bool                 `protobuf:"varint,1,opt,name=has_file,json=hasFile,proto3" json:"has_file,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLastSyncResponse) Reset()         { *m = GetLastSyncResponse{} }
func (m *GetLastSyncResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastSyncResponse) ProtoMessage()    {}
func (*GetLastSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{33}
}

func (m *GetLastSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastSyncResponse.Unmarshal(m, b)
}
func (m *GetLastSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastSyncResponse.Marshal(b, m, deterministic)
}
func (m *GetLastSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastSyncResponse.Merge(m, src)
}
func (m *GetLastSyncResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastSyncResponse.Size(m)
}
func (m *GetLastSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastSyncResponse proto.InternalMessageInfo

func (m *GetLastSyncResponse) GetHasFile() bool {
	if m != nil {
		return m.HasFile
	}
	return false
}

func (m *GetLastSyncResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type DecryptRepositoryRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DecryptRepositoryRequest) Reset()         { *m = DecryptRepositoryRequest{} }
func (m *DecryptRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptRepositoryRequest) ProtoMessage()    {}
func (*DecryptRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{34}
}

func (m *DecryptRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRepositoryRequest.Unmarshal(m, b)
}
func (m *DecryptRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *DecryptRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRepositoryRequest.Merge(m, src)
}
func (m *DecryptRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptRepositoryRequest.Size(m)
}
func (m *DecryptRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRepositoryRequest proto.InternalMessageInfo

func (m *DecryptRepositoryRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type DecryptRepositoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptRepositoryResponse) Reset()         { *m = DecryptRepositoryResponse{} }
func (m *DecryptRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*DecryptRepositoryResponse) ProtoMessage()    {}
func (*DecryptRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b1768cf174c79b, []int{35}
}

func (m *DecryptRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRepositoryResponse.Unmarshal(m, b)
}
func (m *DecryptRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRepositoryResponse.Marshal(b, m, deterministic)
}
func (m *DecryptRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRepositoryResponse.Merge(m, src)
}
func (m *DecryptRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_DecryptRepositoryResponse.Size(m)
}
func (m *DecryptRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRepositoryResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("satellite.GetArchiveRequest_Format", GetArchiveRequest_Format_name, GetArchiveRequest_Format_value)
	proto.RegisterType((*InitRepositoryRequest)(nil), "satellite.InitRepositoryRequest")
	proto.RegisterType((*InitRepositoryResponse)(nil), "satellite.InitRepositoryResponse")
	proto.RegisterType((*RepositoryExistsRequest)(nil), "satellite.RepositoryExistsRequest")
	proto.RegisterType((*RepositoryExistsResponse)(nil), "satellite.RepositoryExistsResponse")
	proto.RegisterType((*RepositoryIsEmptyRequest)(nil), "satellite.RepositoryIsEmptyRequest")
	proto.RegisterType((*RepositoryIsEmptyResponse)(nil), "satellite.RepositoryIsEmptyResponse")
	proto.RegisterType((*RepackIncrementalRequest)(nil), "satellite.RepackIncrementalRequest")
	proto.RegisterType((*RepackIncrementalResponse)(nil), "satellite.RepackIncrementalResponse")
	proto.RegisterType((*RepackFullRequest)(nil), "satellite.RepackFullRequest")
	proto.RegisterType((*RepackFullResponse)(nil), "satellite.RepackFullResponse")
	proto.RegisterType((*GarbageCollectRequest)(nil), "satellite.GarbageCollectRequest")
	proto.RegisterType((*GarbageCollectResponse)(nil), "satellite.GarbageCollectResponse")
	proto.RegisterType((*RepositorySizeRequest)(nil), "satellite.RepositorySizeRequest")
	proto.RegisterType((*RepositorySizeResponse)(nil), "satellite.RepositorySizeResponse")
	proto.RegisterType((*ApplyGitattributesRequest)(nil), "satellite.ApplyGitattributesRequest")
	proto.RegisterType((*ApplyGitattributesResponse)(nil), "satellite.ApplyGitattributesResponse")
	proto.RegisterType((*FetchRemoteRequest)(nil), "satellite.FetchRemoteRequest")
	proto.RegisterType((*FetchRemoteResponse)(nil), "satellite.FetchRemoteResponse")
	proto.RegisterType((*CreateRepositoryRequest)(nil), "satellite.CreateRepositoryRequest")
	proto.RegisterType((*CreateRepositoryResponse)(nil), "satellite.CreateRepositoryResponse")
	proto.RegisterType((*GetArchiveRequest)(nil), "satellite.GetArchiveRequest")
	proto.RegisterType((*GetArchiveResponse)(nil), "satellite.GetArchiveResponse")
	proto.RegisterType((*HasLocalBranchesRequest)(nil), "satellite.HasLocalBranchesRequest")
	proto.RegisterType((*HasLocalBranchesResponse)(nil), "satellite.HasLocalBranchesResponse")
	proto.RegisterType((*ChangeStorageRequest)(nil), "satellite.ChangeStorageRequest")
	proto.RegisterType((*ChangeStorageResponse)(nil), "satellite.ChangeStorageResponse")
	proto.RegisterType((*FetchSourceBranchRequest)(nil), "satellite.FetchSourceBranchRequest")
	proto.RegisterType((*FetchSourceBranchResponse)(nil), "satellite.FetchSourceBranchResponse")
	proto.RegisterType((*WriteRefRequest)(nil), "satellite.WriteRefRequest")
	proto.RegisterType((*WriteRefResponse)(nil), "satellite.WriteRefResponse")
	proto.RegisterType((*GetLastModifiedRequest)(nil), "satellite.GetLastModifiedRequest")
	proto.RegisterType((*GetLastModifiedResponse)(nil), "satellite.GetLastModifiedResponse")
	proto.RegisterType((*GetLastSyncRequest)(nil), "satellite.GetLastSyncRequest")
	proto.RegisterType((*GetLastSyncResponse)(nil), "satellite.GetLastSyncResponse")
	proto.RegisterType((*DecryptRepositoryRequest)(nil), "satellite.DecryptRepositoryRequest")
	proto.RegisterType((*DecryptRepositoryResponse)(nil), "satellite.DecryptRepositoryResponse")
}

func init() { proto.RegisterFile("repository-service.proto", fileDescriptor_e9b1768cf174c79b) }

var fileDescriptor_e9b1768cf174c79b = []byte{
	// 1428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x5b, 0x6f, 0xdb, 0xb6,
	0x17, 0xf7, 0x2d, 0xbe, 0x9c, 0xb8, 0xad, 0xc2, 0xe6, 0xe2, 0x28, 0xed, 0xbf, 0xa9, 0xfa, 0x1f,
	0x90, 0x87, 0xcd, 0x2d, 0x52, 0x6c, 0x18, 0xb0, 0xa7, 0x24, 0x6d, 0xd2, 0xf4, 0xb6, 0x54, 0x09,
	0x50, 0x20, 0x40, 0xa1, 0xd1, 0x32, 0x6d, 0x73, 0x95, 0x45, 0x8d, 0xa4, 0x93, 0xa6, 0xaf, 0xfb,
	0x44, 0xfb, 0x3e, 0x7b, 0xdd, 0xde, 0xf7, 0x0d, 0x06, 0x51, 0xb2, 0x2d, 0xca, 0x92, 0xf7, 0xa0,
	0x6e, 0x6f, 0xe2, 0xe1, 0xe1, 0x39, 0x87, 0x3c, 0xb7, 0xdf, 0x11, 0x74, 0x38, 0x09, 0x98, 0xa0,
	0x92, 0xf1, 0x9b, 0x6f, 0x04, 0xe1, 0x57, 0xd4, 0x25, 0xdd, 0x80, 0x33, 0xc9, 0x50, 0x4b, 0x60,
	0x49, 0x3c, 0x8f, 0x4a, 0x62, 0xb6, 0xc5, 0x08, 0x73, 0xd2, 0x8f, 0x36, 0xcc, 0x07, 0x43, 0xc6,
	0x86, 0x1e, 0x79, 0xac, 0x56, 0xbd, 0xc9, 0xe0, 0xb1, 0xa4, 0x63, 0x22, 0x24, 0x1e, 0x07, 0x11,
	0x83, 0xf5, 0x16, 0x36, 0x4e, 0x7d, 0x2a, 0xed, 0x99, 0x64, 0x9b, 0xfc, 0x32, 0x21, 0x42, 0xa2,
	0x6f, 0x01, 0xe6, 0xea, 0x3a, 0xe5, 0xdd, 0xf2, 0xde, 0xea, 0xfe, 0x46, 0x77, 0xa6, 0xa7, 0x9b,
	0x38, 0x91, 0x60, 0xb4, 0xba, 0xb0, 0x99, 0x96, 0x27, 0x02, 0xe6, 0x0b, 0x82, 0xd6, 0x61, 0xe5,
	0x0a, 0x7b, 0x13, 0xa2, 0x64, 0x35, 0xed, 0x68, 0x61, 0x9d, 0xc1, 0xd6, 0x9c, 0xf7, 0xf9, 0x27,
	0x2a, 0xa4, 0x28, 0x68, 0xc1, 0x3e, 0x74, 0x16, 0x25, 0xc6, 0x36, 0x6c, 0x42, 0x9d, 0x28, 0x4a,
	0x6c, 0x44, 0xbc, 0xb2, 0xde, 0x25, 0xcf, 0x9c, 0x8a, 0xe7, 0xe3, 0x40, 0x16, 0x7d, 0x88, 0xef,
	0x60, 0x3b, 0x43, 0x64, 0x6c, 0xc7, 0x36, 0x34, 0xa9, 0x70, 0x48, 0x48, 0x8b, 0x2d, 0x69, 0xd0,
	0x88, 0x25, 0x36, 0x05, 0xbb, 0x1f, 0x4f, 0x7d, 0x97, 0x93, 0x31, 0xf1, 0x25, 0xf6, 0x0a, 0x9a,
	0xb2, 0xa3, 0x4c, 0x49, 0x8b, 0x8c, 0x4c, 0xb1, 0x18, 0xac, 0x45, 0x9b, 0xc7, 0x13, 0xaf, 0xa0,
	0x22, 0xf4, 0x08, 0x6e, 0xb9, 0x9c, 0x60, 0x49, 0x9c, 0x1e, 0x95, 0x63, 0x1c, 0x74, 0x2a, 0xea,
	0x6e, 0xed, 0x88, 0x78, 0xa8, 0x68, 0xd6, 0x3a, 0xa0, 0xa4, 0xc2, 0xd8, 0x0c, 0x01, 0x1b, 0x27,
	0x98, 0xf7, 0xf0, 0x90, 0x1c, 0x31, 0xcf, 0x23, 0xae, 0xfc, 0x2f, 0x4c, 0x19, 0xc1, 0x66, 0x5a,
	0x69, 0xec, 0xa0, 0xfb, 0x00, 0x3d, 0x32, 0x60, 0x9c, 0x38, 0x9c, 0x0c, 0x94, 0xd6, 0x96, 0xdd,
	0x8a, 0x28, 0x36, 0x19, 0xa0, 0x1d, 0x68, 0xe1, 0x81, 0x24, 0x5c, 0xed, 0x56, 0xd4, 0x6e, 0x53,
	0x11, 0xc2, 0x4d, 0x04, 0x35, 0x4e, 0x06, 0xa2, 0x53, 0x55, 0x74, 0xf5, 0x1d, 0xa6, 0xd9, 0xdc,
	0xd0, 0x73, 0xfa, 0x99, 0x14, 0x74, 0xe9, 0xd7, 0xb0, 0x99, 0x96, 0x17, 0x5b, 0x8e, 0xa0, 0x26,
	0xe8, 0xe7, 0x28, 0xcb, 0xaa, 0xb6, 0xfa, 0xb6, 0x7c, 0xd8, 0x3e, 0x08, 0x02, 0xef, 0xe6, 0x84,
	0x4a, 0x2c, 0x25, 0xa7, 0xbd, 0x89, 0x24, 0x05, 0xd3, 0x0c, 0x99, 0xd0, 0xe4, 0xe4, 0x8a, 0x0a,
	0xca, 0x7c, 0xf5, 0x02, 0x6d, 0x7b, 0xb6, 0xb6, 0xee, 0x81, 0x99, 0xa5, 0x2f, 0x76, 0xf5, 0x9f,
	0x65, 0x40, 0xc7, 0x44, 0xba, 0x23, 0x9b, 0x8c, 0x99, 0x2c, 0xf8, 0x12, 0x61, 0x4a, 0x73, 0x25,
	0x27, 0xf6, 0x43, 0xbc, 0x0a, 0xcb, 0xcd, 0x80, 0x71, 0x97, 0x28, 0x37, 0x34, 0xed, 0x68, 0x81,
	0xb6, 0xa0, 0xe1, 0x33, 0x47, 0xe2, 0xa1, 0xe8, 0xd4, 0xa2, 0x0a, 0xe0, 0xb3, 0x0b, 0x3c, 0x14,
	0xa8, 0x03, 0x8d, 0xb0, 0x34, 0xb2, 0x89, 0xec, 0xac, 0xec, 0x96, 0xf7, 0x56, 0xec, 0xe9, 0x32,
	0x3c, 0x22, 0xc4, 0xc8, 0xf9, 0x48, 0x6e, 0x3a, 0xf5, 0x48, 0x83, 0x10, 0xa3, 0x57, 0xe4, 0x06,
	0x3d, 0x80, 0xd5, 0x8f, 0x3e, 0xbb, 0xf6, 0x9d, 0x11, 0x0b, 0x2b, 0x4a, 0x43, 0x6d, 0x82, 0x22,
	0xbd, 0x08, 0x29, 0xd6, 0x06, 0xdc, 0xd5, 0xee, 0x19, 0xdf, 0xff, 0x0c, 0xb6, 0x8e, 0x54, 0x14,
	0x7e, 0xb1, 0xa2, 0x6b, 0x42, 0x67, 0x51, 0x62, 0xac, 0xed, 0xaf, 0x32, 0xac, 0x9d, 0x10, 0x79,
	0xc0, 0xdd, 0x11, 0xbd, 0x2a, 0xfa, 0xd8, 0x3b, 0xd0, 0x72, 0xd9, 0x78, 0x4c, 0xa5, 0x43, 0xfb,
	0xd3, 0xb8, 0x8f, 0x08, 0xa7, 0xfd, 0xd0, 0x13, 0x01, 0x27, 0x03, 0xfa, 0x29, 0x8e, 0xfc, 0x78,
	0x85, 0x7e, 0x80, 0xfa, 0x80, 0xf1, 0x31, 0x96, 0xea, 0xc9, 0x6f, 0xef, 0x3f, 0x4a, 0xe8, 0x59,
	0xb0, 0xac, 0x7b, 0xac, 0x58, 0xed, 0xf8, 0x88, 0xf5, 0x14, 0xea, 0x11, 0x05, 0x35, 0xa0, 0x7a,
	0x79, 0x7a, 0x66, 0x94, 0xc2, 0x8f, 0x8b, 0x03, 0xdb, 0x28, 0x23, 0x80, 0xfa, 0xc5, 0x81, 0xed,
	0x9c, 0x5c, 0x1a, 0x15, 0xb4, 0x0a, 0x8d, 0xf0, 0xfb, 0xf0, 0x72, 0xdf, 0xa8, 0x5a, 0x7b, 0x80,
	0x92, 0x82, 0xe7, 0x99, 0xd1, 0xc7, 0x12, 0xab, 0xdb, 0xb6, 0x6d, 0xf5, 0x1d, 0xfa, 0xe2, 0x05,
	0x16, 0xaf, 0x99, 0x8b, 0xbd, 0x43, 0x8e, 0x7d, 0x77, 0x54, 0x34, 0x2f, 0xac, 0x27, 0xd0, 0x59,
	0x94, 0xb8, 0xb4, 0x05, 0x5e, 0xc3, 0xfa, 0xd1, 0x08, 0xfb, 0x43, 0x72, 0x2e, 0x19, 0xc7, 0xc3,
	0xa2, 0x3e, 0xda, 0x03, 0xc3, 0x27, 0xd7, 0x8e, 0x88, 0x84, 0x39, 0x3e, 0x1e, 0x4f, 0x53, 0xe3,
	0xb6, 0x4f, 0xae, 0x63, 0x1d, 0x6f, 0xf1, 0x98, 0x58, 0x5b, 0xb0, 0x91, 0x52, 0x1c, 0xc7, 0xcc,
	0x1f, 0x15, 0xe8, 0xa8, 0xc8, 0x3d, 0x67, 0x13, 0xee, 0x92, 0xe8, 0x1e, 0x05, 0xcd, 0x3a, 0x84,
	0x35, 0xa1, 0xa4, 0x39, 0x89, 0xd3, 0x95, 0x65, 0xa7, 0x8d, 0x88, 0xdf, 0xd6, 0x8a, 0x7a, 0x2c,
	0xa3, 0xa7, 0x4c, 0x52, 0x81, 0xd6, 0xb6, 0xdb, 0x22, 0x61, 0x66, 0x58, 0xba, 0x25, 0xe6, 0x43,
	0x22, 0x55, 0x71, 0xae, 0x29, 0x8e, 0x56, 0x44, 0x09, 0xab, 0xf3, 0x5d, 0x58, 0x19, 0x7a, 0x61,
	0xf8, 0xae, 0x44, 0xe5, 0x79, 0xe8, 0x9d, 0xf6, 0xd1, 0x33, 0xb8, 0x33, 0x09, 0xfa, 0x58, 0x92,
	0x8b, 0x29, 0x3c, 0x52, 0xb9, 0xbe, 0xba, 0x6f, 0x76, 0x23, 0x00, 0xd5, 0x9d, 0x02, 0xa8, 0xee,
	0x8c, 0xc3, 0x4e, 0x1f, 0x41, 0x8f, 0x61, 0x9d, 0x0a, 0xc7, 0xc5, 0x9e, 0xe7, 0x04, 0x4c, 0x84,
	0xfa, 0x5d, 0x42, 0xaf, 0x88, 0xaa, 0x0c, 0x4d, 0x7b, 0x8d, 0x8a, 0x23, 0xec, 0x79, 0x67, 0x4c,
	0x48, 0x3b, 0xda, 0xb0, 0x7e, 0x2d, 0xc3, 0x76, 0xc6, 0x3b, 0xcf, 0xc1, 0x0a, 0x27, 0x62, 0xe2,
	0xc9, 0x29, 0x58, 0x89, 0x56, 0xa9, 0xde, 0x54, 0x59, 0xda, 0x9b, 0xaa, 0x39, 0xbd, 0xa9, 0x96,
	0xe8, 0x4d, 0xbf, 0x55, 0xe0, 0xce, 0x7b, 0x4e, 0xc3, 0xea, 0x31, 0x28, 0xe8, 0x64, 0x03, 0xaa,
	0x53, 0x9b, 0xda, 0x76, 0xf8, 0xa9, 0xb5, 0x89, 0xaa, 0xde, 0x26, 0xd0, 0x43, 0x68, 0x33, 0xaf,
	0xef, 0xcc, 0xf6, 0x23, 0x5f, 0xad, 0x32, 0xaf, 0x6f, 0x4f, 0x59, 0x66, 0xde, 0x6a, 0x2c, 0xf7,
	0x56, 0xf3, 0xcb, 0x79, 0xab, 0x95, 0xe3, 0xad, 0x97, 0xb5, 0xe6, 0x8a, 0x51, 0x7f, 0x59, 0x6b,
	0xd6, 0x8d, 0x86, 0x35, 0x02, 0x63, 0xfe, 0x64, 0x99, 0x98, 0xa1, 0xb0, 0x5f, 0x5e, 0xd6, 0x9a,
	0x65, 0xa3, 0x62, 0xfd, 0x08, 0x9b, 0x27, 0x44, 0xbe, 0xc6, 0x42, 0xbe, 0x61, 0x7d, 0x3a, 0xa0,
	0xa4, 0x5f, 0xb0, 0x40, 0xf9, 0xb0, 0xb5, 0x20, 0x70, 0x0e, 0x4b, 0x47, 0x58, 0x38, 0x03, 0xea,
	0x4d, 0x4b, 0x54, 0x63, 0x84, 0xc5, 0x31, 0xf5, 0x08, 0xfa, 0x1e, 0x5a, 0xb3, 0xd1, 0x21, 0x4e,
	0xdb, 0x65, 0xaf, 0x3d, 0x67, 0xb6, 0x5e, 0xa9, 0x62, 0x1c, 0xea, 0x3b, 0xbf, 0xf1, 0xdd, 0x82,
	0xc6, 0xff, 0x0c, 0x77, 0x35, 0x61, 0xff, 0xa6, 0xe1, 0xef, 0xa0, 0xf3, 0x8c, 0xb8, 0xfc, 0x26,
	0xf8, 0x72, 0xd3, 0xd1, 0x0e, 0x6c, 0x67, 0x88, 0x8c, 0x2e, 0xb1, 0xff, 0x7b, 0x5b, 0x41, 0xf1,
	0x29, 0xa8, 0x8b, 0x06, 0x3c, 0xf4, 0x01, 0x8c, 0xf4, 0x38, 0x83, 0xac, 0x4c, 0x4d, 0xda, 0xf4,
	0x64, 0x3e, 0x5a, 0xca, 0x13, 0x17, 0xfa, 0x12, 0xfa, 0x29, 0xa9, 0x33, 0x1e, 0x53, 0x50, 0xf6,
	0x59, 0x7d, 0x2e, 0x32, 0xff, 0xbf, 0x9c, 0x29, 0xa5, 0x41, 0x9f, 0x3e, 0xd2, 0x1a, 0x32, 0xc7,
	0x9d, 0xb4, 0x86, 0x9c, 0x01, 0xa6, 0x84, 0x5e, 0x01, 0xcc, 0x27, 0x0a, 0x74, 0x6f, 0xe1, 0x54,
	0x62, 0xb2, 0x31, 0xef, 0xe7, 0xec, 0xce, 0x84, 0xbd, 0x87, 0xdb, 0xfa, 0x4c, 0x80, 0x76, 0x93,
	0x78, 0x25, 0x6b, 0x46, 0x31, 0x1f, 0x2e, 0xe1, 0x48, 0x0a, 0xd6, 0x21, 0xbb, 0x26, 0x38, 0x73,
	0x3a, 0xd0, 0x04, 0x67, 0xe3, 0x7d, 0xab, 0x84, 0x5c, 0x40, 0x8b, 0x68, 0x1b, 0x25, 0x1f, 0x2f,
	0x17, 0xfc, 0x9b, 0x5f, 0xfd, 0x03, 0xd7, 0x4c, 0xc9, 0x5b, 0x58, 0x4d, 0x60, 0x59, 0x94, 0x7c,
	0xc6, 0x45, 0x2c, 0x6f, 0xfe, 0x2f, 0x6f, 0x7b, 0x26, 0xef, 0x03, 0x18, 0x69, 0xc8, 0xaa, 0x85,
	0x75, 0x0e, 0x42, 0xd6, 0xc2, 0x3a, 0x17, 0xf3, 0x96, 0xd0, 0x1b, 0x80, 0x39, 0x02, 0xd4, 0x42,
	0x62, 0x01, 0x71, 0x6a, 0x21, 0xb1, 0x08, 0x1b, 0xad, 0xd2, 0x93, 0x72, 0x68, 0x6d, 0x1a, 0xd4,
	0x69, 0xd6, 0xe6, 0x60, 0x48, 0xcd, 0xda, 0x3c, 0x54, 0x68, 0x95, 0xd0, 0x05, 0xdc, 0xd2, 0x80,
	0x18, 0x7a, 0x90, 0xbc, 0x65, 0x06, 0x36, 0x34, 0x77, 0xf3, 0x19, 0x92, 0x89, 0xb7, 0x00, 0x2e,
	0xb4, 0xc4, 0xcb, 0x83, 0x78, 0x5a, 0xe2, 0xe5, 0xe2, 0x13, 0xab, 0x84, 0x9e, 0x43, 0x73, 0xda,
	0x05, 0x91, 0x99, 0x38, 0x93, 0x42, 0x13, 0xe6, 0x4e, 0xe6, 0xde, 0x4c, 0xcc, 0x25, 0xdc, 0x49,
	0x75, 0x24, 0xf4, 0x50, 0xf7, 0x49, 0x46, 0xfb, 0x33, 0xad, 0x65, 0x2c, 0xc9, 0xb8, 0x4d, 0x34,
	0x0c, 0x74, 0x7f, 0xf1, 0x50, 0xa2, 0x2b, 0x69, 0x71, 0x9b, 0xd1, 0x67, 0xa2, 0x2c, 0xd6, 0xff,
	0x6f, 0x69, 0x59, 0x9c, 0xf9, 0x2b, 0x4d, 0xcb, 0xe2, 0xec, 0x9f, 0x63, 0x56, 0x09, 0x39, 0x60,
	0xa4, 0x5a, 0x83, 0x5e, 0x87, 0xf3, 0x5a, 0x91, 0xe6, 0xac, 0xdc, 0xe6, 0x62, 0x95, 0x0e, 0xb7,
	0x60, 0xc3, 0x65, 0xe3, 0x2e, 0xf6, 0x68, 0x0f, 0xf7, 0x70, 0x17, 0x0f, 0xa9, 0xec, 0x0e, 0x79,
	0xe0, 0xf6, 0xea, 0xaa, 0x0d, 0x3e, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x77, 0x34, 0x6e, 0x92,
	0x5f, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepositoryServiceClient is the client API for RepositoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepositoryServiceClient interface {
	RepositoryExists(ctx context.Context, in *RepositoryExistsRequest, opts ...grpc.CallOption) (*RepositoryExistsResponse, error)
	RepositoryIsEmpty(ctx context.Context, in *RepositoryIsEmptyRequest, opts ...grpc.CallOption) (*RepositoryIsEmptyResponse, error)
	RepackIncremental(ctx context.Context, in *RepackIncrementalRequest, opts ...grpc.CallOption) (*RepackIncrementalResponse, error)
	RepackFull(ctx context.Context, in *RepackFullRequest, opts ...grpc.CallOption) (*RepackFullResponse, error)
	GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectResponse, error)
	RepositorySize(ctx context.Context, in *RepositorySizeRequest, opts ...grpc.CallOption) (*RepositorySizeResponse, error)
	ApplyGitattributes(ctx context.Context, in *ApplyGitattributesRequest, opts ...grpc.CallOption) (*ApplyGitattributesResponse, error)
	FetchRemote(ctx context.Context, in *FetchRemoteRequest, opts ...grpc.CallOption) (*FetchRemoteResponse, error)
	CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error)
	GetArchive(ctx context.Context, in *GetArchiveRequest, opts ...grpc.CallOption) (RepositoryService_GetArchiveClient, error)
	HasLocalBranches(ctx context.Context, in *HasLocalBranchesRequest, opts ...grpc.CallOption) (*HasLocalBranchesResponse, error)
	ChangeStorage(ctx context.Context, in *ChangeStorageRequest, opts ...grpc.CallOption) (*ChangeStorageResponse, error)
	FetchSourceBranch(ctx context.Context, in *FetchSourceBranchRequest, opts ...grpc.CallOption) (*FetchSourceBranchResponse, error)
	WriteRef(ctx context.Context, in *WriteRefRequest, opts ...grpc.CallOption) (*WriteRefResponse, error)
	GetLastModified(ctx context.Context, in *GetLastModifiedRequest, opts ...grpc.CallOption) (*GetLastModifiedResponse, error)
	GetLastSync(ctx context.Context, in *GetLastSyncRequest, opts ...grpc.CallOption) (*GetLastSyncResponse, error)
	InitRepository(ctx context.Context, in *InitRepositoryRequest, opts ...grpc.CallOption) (*InitRepositoryResponse, error)
	DecryptRepositoy(ctx context.Context, in *DecryptRepositoryRequest, opts ...grpc.CallOption) (*DecryptRepositoryResponse, error)
}

type repositoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewRepositoryServiceClient(cc *grpc.ClientConn) RepositoryServiceClient {
	return &repositoryServiceClient{cc}
}

func (c *repositoryServiceClient) RepositoryExists(ctx context.Context, in *RepositoryExistsRequest, opts ...grpc.CallOption) (*RepositoryExistsResponse, error) {
	out := new(RepositoryExistsResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/RepositoryExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepositoryIsEmpty(ctx context.Context, in *RepositoryIsEmptyRequest, opts ...grpc.CallOption) (*RepositoryIsEmptyResponse, error) {
	out := new(RepositoryIsEmptyResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/RepositoryIsEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepackIncremental(ctx context.Context, in *RepackIncrementalRequest, opts ...grpc.CallOption) (*RepackIncrementalResponse, error) {
	out := new(RepackIncrementalResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/RepackIncremental", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepackFull(ctx context.Context, in *RepackFullRequest, opts ...grpc.CallOption) (*RepackFullResponse, error) {
	out := new(RepackFullResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/RepackFull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectResponse, error) {
	out := new(GarbageCollectResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/GarbageCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepositorySize(ctx context.Context, in *RepositorySizeRequest, opts ...grpc.CallOption) (*RepositorySizeResponse, error) {
	out := new(RepositorySizeResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/RepositorySize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) ApplyGitattributes(ctx context.Context, in *ApplyGitattributesRequest, opts ...grpc.CallOption) (*ApplyGitattributesResponse, error) {
	out := new(ApplyGitattributesResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/ApplyGitattributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FetchRemote(ctx context.Context, in *FetchRemoteRequest, opts ...grpc.CallOption) (*FetchRemoteResponse, error) {
	out := new(FetchRemoteResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/FetchRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error) {
	out := new(CreateRepositoryResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetArchive(ctx context.Context, in *GetArchiveRequest, opts ...grpc.CallOption) (RepositoryService_GetArchiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[0], "/satellite.RepositoryService/GetArchive", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceGetArchiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_GetArchiveClient interface {
	Recv() (*GetArchiveResponse, error)
	grpc.ClientStream
}

type repositoryServiceGetArchiveClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceGetArchiveClient) Recv() (*GetArchiveResponse, error) {
	m := new(GetArchiveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) HasLocalBranches(ctx context.Context, in *HasLocalBranchesRequest, opts ...grpc.CallOption) (*HasLocalBranchesResponse, error) {
	out := new(HasLocalBranchesResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/HasLocalBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) ChangeStorage(ctx context.Context, in *ChangeStorageRequest, opts ...grpc.CallOption) (*ChangeStorageResponse, error) {
	out := new(ChangeStorageResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/ChangeStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FetchSourceBranch(ctx context.Context, in *FetchSourceBranchRequest, opts ...grpc.CallOption) (*FetchSourceBranchResponse, error) {
	out := new(FetchSourceBranchResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/FetchSourceBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) WriteRef(ctx context.Context, in *WriteRefRequest, opts ...grpc.CallOption) (*WriteRefResponse, error) {
	out := new(WriteRefResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/WriteRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetLastModified(ctx context.Context, in *GetLastModifiedRequest, opts ...grpc.CallOption) (*GetLastModifiedResponse, error) {
	out := new(GetLastModifiedResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/GetLastModified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetLastSync(ctx context.Context, in *GetLastSyncRequest, opts ...grpc.CallOption) (*GetLastSyncResponse, error) {
	out := new(GetLastSyncResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/GetLastSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) InitRepository(ctx context.Context, in *InitRepositoryRequest, opts ...grpc.CallOption) (*InitRepositoryResponse, error) {
	out := new(InitRepositoryResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/InitRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) DecryptRepositoy(ctx context.Context, in *DecryptRepositoryRequest, opts ...grpc.CallOption) (*DecryptRepositoryResponse, error) {
	out := new(DecryptRepositoryResponse)
	err := c.cc.Invoke(ctx, "/satellite.RepositoryService/DecryptRepositoy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepositoryServiceServer is the server API for RepositoryService service.
type RepositoryServiceServer interface {
	RepositoryExists(context.Context, *RepositoryExistsRequest) (*RepositoryExistsResponse, error)
	RepositoryIsEmpty(context.Context, *RepositoryIsEmptyRequest) (*RepositoryIsEmptyResponse, error)
	RepackIncremental(context.Context, *RepackIncrementalRequest) (*RepackIncrementalResponse, error)
	RepackFull(context.Context, *RepackFullRequest) (*RepackFullResponse, error)
	GarbageCollect(context.Context, *GarbageCollectRequest) (*GarbageCollectResponse, error)
	RepositorySize(context.Context, *RepositorySizeRequest) (*RepositorySizeResponse, error)
	ApplyGitattributes(context.Context, *ApplyGitattributesRequest) (*ApplyGitattributesResponse, error)
	FetchRemote(context.Context, *FetchRemoteRequest) (*FetchRemoteResponse, error)
	CreateRepository(context.Context, *CreateRepositoryRequest) (*CreateRepositoryResponse, error)
	GetArchive(*GetArchiveRequest, RepositoryService_GetArchiveServer) error
	HasLocalBranches(context.Context, *HasLocalBranchesRequest) (*HasLocalBranchesResponse, error)
	ChangeStorage(context.Context, *ChangeStorageRequest) (*ChangeStorageResponse, error)
	FetchSourceBranch(context.Context, *FetchSourceBranchRequest) (*FetchSourceBranchResponse, error)
	WriteRef(context.Context, *WriteRefRequest) (*WriteRefResponse, error)
	GetLastModified(context.Context, *GetLastModifiedRequest) (*GetLastModifiedResponse, error)
	GetLastSync(context.Context, *GetLastSyncRequest) (*GetLastSyncResponse, error)
	InitRepository(context.Context, *InitRepositoryRequest) (*InitRepositoryResponse, error)
	DecryptRepositoy(context.Context, *DecryptRepositoryRequest) (*DecryptRepositoryResponse, error)
}

// UnimplementedRepositoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRepositoryServiceServer struct {
}

func (*UnimplementedRepositoryServiceServer) RepositoryExists(ctx context.Context, req *RepositoryExistsRequest) (*RepositoryExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepositoryExists not implemented")
}
func (*UnimplementedRepositoryServiceServer) RepositoryIsEmpty(ctx context.Context, req *RepositoryIsEmptyRequest) (*RepositoryIsEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepositoryIsEmpty not implemented")
}
func (*UnimplementedRepositoryServiceServer) RepackIncremental(ctx context.Context, req *RepackIncrementalRequest) (*RepackIncrementalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepackIncremental not implemented")
}
func (*UnimplementedRepositoryServiceServer) RepackFull(ctx context.Context, req *RepackFullRequest) (*RepackFullResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepackFull not implemented")
}
func (*UnimplementedRepositoryServiceServer) GarbageCollect(ctx context.Context, req *GarbageCollectRequest) (*GarbageCollectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GarbageCollect not implemented")
}
func (*UnimplementedRepositoryServiceServer) RepositorySize(ctx context.Context, req *RepositorySizeRequest) (*RepositorySizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepositorySize not implemented")
}
func (*UnimplementedRepositoryServiceServer) ApplyGitattributes(ctx context.Context, req *ApplyGitattributesRequest) (*ApplyGitattributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyGitattributes not implemented")
}
func (*UnimplementedRepositoryServiceServer) FetchRemote(ctx context.Context, req *FetchRemoteRequest) (*FetchRemoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchRemote not implemented")
}
func (*UnimplementedRepositoryServiceServer) CreateRepository(ctx context.Context, req *CreateRepositoryRequest) (*CreateRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}
func (*UnimplementedRepositoryServiceServer) GetArchive(req *GetArchiveRequest, srv RepositoryService_GetArchiveServer) error {
	return status.Errorf(codes.Unimplemented, "method GetArchive not implemented")
}
func (*UnimplementedRepositoryServiceServer) HasLocalBranches(ctx context.Context, req *HasLocalBranchesRequest) (*HasLocalBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasLocalBranches not implemented")
}
func (*UnimplementedRepositoryServiceServer) ChangeStorage(ctx context.Context, req *ChangeStorageRequest) (*ChangeStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeStorage not implemented")
}
func (*UnimplementedRepositoryServiceServer) FetchSourceBranch(ctx context.Context, req *FetchSourceBranchRequest) (*FetchSourceBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchSourceBranch not implemented")
}
func (*UnimplementedRepositoryServiceServer) WriteRef(ctx context.Context, req *WriteRefRequest) (*WriteRefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteRef not implemented")
}
func (*UnimplementedRepositoryServiceServer) GetLastModified(ctx context.Context, req *GetLastModifiedRequest) (*GetLastModifiedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastModified not implemented")
}
func (*UnimplementedRepositoryServiceServer) GetLastSync(ctx context.Context, req *GetLastSyncRequest) (*GetLastSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastSync not implemented")
}
func (*UnimplementedRepositoryServiceServer) InitRepository(ctx context.Context, req *InitRepositoryRequest) (*InitRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitRepository not implemented")
}
func (*UnimplementedRepositoryServiceServer) DecryptRepositoy(ctx context.Context, req *DecryptRepositoryRequest) (*DecryptRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecryptRepositoy not implemented")
}

func RegisterRepositoryServiceServer(s *grpc.Server, srv RepositoryServiceServer) {
	s.RegisterService(&_RepositoryService_serviceDesc, srv)
}

func _RepositoryService_RepositoryExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositoryExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepositoryExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/RepositoryExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepositoryExists(ctx, req.(*RepositoryExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepositoryIsEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositoryIsEmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepositoryIsEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/RepositoryIsEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepositoryIsEmpty(ctx, req.(*RepositoryIsEmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepackIncremental_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepackIncrementalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepackIncremental(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/RepackIncremental",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepackIncremental(ctx, req.(*RepackIncrementalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepackFull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepackFullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepackFull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/RepackFull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepackFull(ctx, req.(*RepackFullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GarbageCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GarbageCollectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).GarbageCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/GarbageCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).GarbageCollect(ctx, req.(*GarbageCollectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepositorySize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositorySizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepositorySize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/RepositorySize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepositorySize(ctx, req.(*RepositorySizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_ApplyGitattributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyGitattributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).ApplyGitattributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/ApplyGitattributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).ApplyGitattributes(ctx, req.(*ApplyGitattributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FetchRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FetchRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/FetchRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FetchRemote(ctx, req.(*FetchRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CreateRepository(ctx, req.(*CreateRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetArchive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetArchiveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).GetArchive(m, &repositoryServiceGetArchiveServer{stream})
}

type RepositoryService_GetArchiveServer interface {
	Send(*GetArchiveResponse) error
	grpc.ServerStream
}

type repositoryServiceGetArchiveServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceGetArchiveServer) Send(m *GetArchiveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_HasLocalBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasLocalBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).HasLocalBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/HasLocalBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).HasLocalBranches(ctx, req.(*HasLocalBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_ChangeStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).ChangeStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/ChangeStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).ChangeStorage(ctx, req.(*ChangeStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FetchSourceBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchSourceBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FetchSourceBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/FetchSourceBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FetchSourceBranch(ctx, req.(*FetchSourceBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_WriteRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).WriteRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/WriteRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).WriteRef(ctx, req.(*WriteRefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetLastModified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastModifiedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).GetLastModified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/GetLastModified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).GetLastModified(ctx, req.(*GetLastModifiedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetLastSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).GetLastSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/GetLastSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).GetLastSync(ctx, req.(*GetLastSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_InitRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).InitRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/InitRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).InitRepository(ctx, req.(*InitRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_DecryptRepositoy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).DecryptRepositoy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.RepositoryService/DecryptRepositoy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).DecryptRepositoy(ctx, req.(*DecryptRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RepositoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satellite.RepositoryService",
	HandlerType: (*RepositoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RepositoryExists",
			Handler:    _RepositoryService_RepositoryExists_Handler,
		},
		{
			MethodName: "RepositoryIsEmpty",
			Handler:    _RepositoryService_RepositoryIsEmpty_Handler,
		},
		{
			MethodName: "RepackIncremental",
			Handler:    _RepositoryService_RepackIncremental_Handler,
		},
		{
			MethodName: "RepackFull",
			Handler:    _RepositoryService_RepackFull_Handler,
		},
		{
			MethodName: "GarbageCollect",
			Handler:    _RepositoryService_GarbageCollect_Handler,
		},
		{
			MethodName: "RepositorySize",
			Handler:    _RepositoryService_RepositorySize_Handler,
		},
		{
			MethodName: "ApplyGitattributes",
			Handler:    _RepositoryService_ApplyGitattributes_Handler,
		},
		{
			MethodName: "FetchRemote",
			Handler:    _RepositoryService_FetchRemote_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _RepositoryService_CreateRepository_Handler,
		},
		{
			MethodName: "HasLocalBranches",
			Handler:    _RepositoryService_HasLocalBranches_Handler,
		},
		{
			MethodName: "ChangeStorage",
			Handler:    _RepositoryService_ChangeStorage_Handler,
		},
		{
			MethodName: "FetchSourceBranch",
			Handler:    _RepositoryService_FetchSourceBranch_Handler,
		},
		{
			MethodName: "WriteRef",
			Handler:    _RepositoryService_WriteRef_Handler,
		},
		{
			MethodName: "GetLastModified",
			Handler:    _RepositoryService_GetLastModified_Handler,
		},
		{
			MethodName: "GetLastSync",
			Handler:    _RepositoryService_GetLastSync_Handler,
		},
		{
			MethodName: "InitRepository",
			Handler:    _RepositoryService_InitRepository_Handler,
		},
		{
			MethodName: "DecryptRepositoy",
			Handler:    _RepositoryService_DecryptRepositoy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetArchive",
			Handler:       _RepositoryService_GetArchive_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "repository-service.proto",
}
