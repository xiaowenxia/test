// Code generated by protoc-gen-go. DO NOT EDIT.
// source: basic-service.proto

package satellite

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChecksumResponse struct {
	Checksum             string   `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChecksumResponse) Reset()         { *m = ChecksumResponse{} }
func (m *ChecksumResponse) String() string { return proto.CompactTextString(m) }
func (*ChecksumResponse) ProtoMessage()    {}
func (*ChecksumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871c720323c7641f, []int{0}
}

func (m *ChecksumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChecksumResponse.Unmarshal(m, b)
}
func (m *ChecksumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChecksumResponse.Marshal(b, m, deterministic)
}
func (m *ChecksumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChecksumResponse.Merge(m, src)
}
func (m *ChecksumResponse) XXX_Size() int {
	return xxx_messageInfo_ChecksumResponse.Size(m)
}
func (m *ChecksumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChecksumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChecksumResponse proto.InternalMessageInfo

func (m *ChecksumResponse) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *ChecksumResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*ChecksumResponse)(nil), "satellite.ChecksumResponse")
}

func init() { proto.RegisterFile("basic-service.proto", fileDescriptor_871c720323c7641f) }

var fileDescriptor_871c720323c7641f = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4a, 0x2c, 0xce,
	0x4c, 0xd6, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x2c, 0x4e, 0x2c, 0x49, 0xcd, 0xc9, 0xc9, 0x2c, 0x49, 0x95, 0xe2, 0x29, 0xce, 0x48, 0x2c,
	0x4a, 0x4d, 0x81, 0x48, 0x28, 0xf9, 0x70, 0x09, 0x38, 0x67, 0xa4, 0x26, 0x67, 0x17, 0x97, 0xe6,
	0x06, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x71, 0x71, 0x24, 0x43, 0xc5, 0x24,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21, 0x19, 0x2e, 0xce, 0x92, 0xcc, 0xdc, 0xd4,
	0xe2, 0x92, 0xc4, 0xdc, 0x02, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x84, 0x80, 0x51, 0x30,
	0x17, 0x8f, 0x13, 0xc8, 0xf6, 0x60, 0x88, 0xe5, 0x42, 0xce, 0x5c, 0xdc, 0xee, 0xa9, 0x25, 0x30,
	0x0b, 0x84, 0x44, 0xf5, 0xe0, 0xce, 0xd0, 0x0b, 0x4a, 0x2d, 0xc8, 0x2f, 0xce, 0x2c, 0xc9, 0x2f,
	0xaa, 0x94, 0x92, 0x46, 0x12, 0x46, 0x77, 0x8c, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0xa5, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x3b, 0x9d, 0x27, 0xd9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BasicServiceClient is the client API for BasicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BasicServiceClient interface {
	GetChecksum(ctx context.Context, in *Repository, opts ...grpc.CallOption) (*ChecksumResponse, error)
}

type basicServiceClient struct {
	cc *grpc.ClientConn
}

func NewBasicServiceClient(cc *grpc.ClientConn) BasicServiceClient {
	return &basicServiceClient{cc}
}

func (c *basicServiceClient) GetChecksum(ctx context.Context, in *Repository, opts ...grpc.CallOption) (*ChecksumResponse, error) {
	out := new(ChecksumResponse)
	err := c.cc.Invoke(ctx, "/satellite.BasicService/GetChecksum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BasicServiceServer is the server API for BasicService service.
type BasicServiceServer interface {
	GetChecksum(context.Context, *Repository) (*ChecksumResponse, error)
}

// UnimplementedBasicServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBasicServiceServer struct {
}

func (*UnimplementedBasicServiceServer) GetChecksum(ctx context.Context, req *Repository) (*ChecksumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChecksum not implemented")
}

func RegisterBasicServiceServer(s *grpc.Server, srv BasicServiceServer) {
	s.RegisterService(&_BasicService_serviceDesc, srv)
}

func _BasicService_GetChecksum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Repository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasicServiceServer).GetChecksum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satellite.BasicService/GetChecksum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasicServiceServer).GetChecksum(ctx, req.(*Repository))
	}
	return interceptor(ctx, in, info, handler)
}

var _BasicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satellite.BasicService",
	HandlerType: (*BasicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChecksum",
			Handler:    _BasicService_GetChecksum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "basic-service.proto",
}
