// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/nebula.proto

package nebula

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMachinesForCreateRequest struct {
	// The number of machine which need to get
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMachinesForCreateRequest) Reset()         { *m = GetMachinesForCreateRequest{} }
func (m *GetMachinesForCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachinesForCreateRequest) ProtoMessage()    {}
func (*GetMachinesForCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df572f1cba94e643, []int{0}
}

func (m *GetMachinesForCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachinesForCreateRequest.Unmarshal(m, b)
}
func (m *GetMachinesForCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachinesForCreateRequest.Marshal(b, m, deterministic)
}
func (m *GetMachinesForCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachinesForCreateRequest.Merge(m, src)
}
func (m *GetMachinesForCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachinesForCreateRequest.Size(m)
}
func (m *GetMachinesForCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachinesForCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachinesForCreateRequest proto.InternalMessageInfo

func (m *GetMachinesForCreateRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type GetMachinesForCreateResponse struct {
	Machines             []*NebulaMachine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetMachinesForCreateResponse) Reset()         { *m = GetMachinesForCreateResponse{} }
func (m *GetMachinesForCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachinesForCreateResponse) ProtoMessage()    {}
func (*GetMachinesForCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df572f1cba94e643, []int{1}
}

func (m *GetMachinesForCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachinesForCreateResponse.Unmarshal(m, b)
}
func (m *GetMachinesForCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachinesForCreateResponse.Marshal(b, m, deterministic)
}
func (m *GetMachinesForCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachinesForCreateResponse.Merge(m, src)
}
func (m *GetMachinesForCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachinesForCreateResponse.Size(m)
}
func (m *GetMachinesForCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachinesForCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachinesForCreateResponse proto.InternalMessageInfo

func (m *GetMachinesForCreateResponse) GetMachines() []*NebulaMachine {
	if m != nil {
		return m.Machines
	}
	return nil
}

type NebulaMachine struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NebulaMachine) Reset()         { *m = NebulaMachine{} }
func (m *NebulaMachine) String() string { return proto.CompactTextString(m) }
func (*NebulaMachine) ProtoMessage()    {}
func (*NebulaMachine) Descriptor() ([]byte, []int) {
	return fileDescriptor_df572f1cba94e643, []int{2}
}

func (m *NebulaMachine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NebulaMachine.Unmarshal(m, b)
}
func (m *NebulaMachine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NebulaMachine.Marshal(b, m, deterministic)
}
func (m *NebulaMachine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NebulaMachine.Merge(m, src)
}
func (m *NebulaMachine) XXX_Size() int {
	return xxx_messageInfo_NebulaMachine.Size(m)
}
func (m *NebulaMachine) XXX_DiscardUnknown() {
	xxx_messageInfo_NebulaMachine.DiscardUnknown(m)
}

var xxx_messageInfo_NebulaMachine proto.InternalMessageInfo

func (m *NebulaMachine) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *NebulaMachine) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetMachinesForExpansionRequest struct {
	// Had used zone id array
	UsedZoneID []int64 `protobuf:"varint,1,rep,packed,name=usedZoneID,proto3" json:"usedZoneID,omitempty"`
	// The number of machine which need to get
	Num                  int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMachinesForExpansionRequest) Reset()         { *m = GetMachinesForExpansionRequest{} }
func (m *GetMachinesForExpansionRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachinesForExpansionRequest) ProtoMessage()    {}
func (*GetMachinesForExpansionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df572f1cba94e643, []int{3}
}

func (m *GetMachinesForExpansionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachinesForExpansionRequest.Unmarshal(m, b)
}
func (m *GetMachinesForExpansionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachinesForExpansionRequest.Marshal(b, m, deterministic)
}
func (m *GetMachinesForExpansionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachinesForExpansionRequest.Merge(m, src)
}
func (m *GetMachinesForExpansionRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachinesForExpansionRequest.Size(m)
}
func (m *GetMachinesForExpansionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachinesForExpansionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachinesForExpansionRequest proto.InternalMessageInfo

func (m *GetMachinesForExpansionRequest) GetUsedZoneID() []int64 {
	if m != nil {
		return m.UsedZoneID
	}
	return nil
}

func (m *GetMachinesForExpansionRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type GetMachinesForExpansionResponse struct {
	Machines             []*NebulaMachine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetMachinesForExpansionResponse) Reset()         { *m = GetMachinesForExpansionResponse{} }
func (m *GetMachinesForExpansionResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachinesForExpansionResponse) ProtoMessage()    {}
func (*GetMachinesForExpansionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df572f1cba94e643, []int{4}
}

func (m *GetMachinesForExpansionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachinesForExpansionResponse.Unmarshal(m, b)
}
func (m *GetMachinesForExpansionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachinesForExpansionResponse.Marshal(b, m, deterministic)
}
func (m *GetMachinesForExpansionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachinesForExpansionResponse.Merge(m, src)
}
func (m *GetMachinesForExpansionResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachinesForExpansionResponse.Size(m)
}
func (m *GetMachinesForExpansionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachinesForExpansionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachinesForExpansionResponse proto.InternalMessageInfo

func (m *GetMachinesForExpansionResponse) GetMachines() []*NebulaMachine {
	if m != nil {
		return m.Machines
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMachinesForCreateRequest)(nil), "nebula.GetMachinesForCreateRequest")
	proto.RegisterType((*GetMachinesForCreateResponse)(nil), "nebula.GetMachinesForCreateResponse")
	proto.RegisterType((*NebulaMachine)(nil), "nebula.NebulaMachine")
	proto.RegisterType((*GetMachinesForExpansionRequest)(nil), "nebula.GetMachinesForExpansionRequest")
	proto.RegisterType((*GetMachinesForExpansionResponse)(nil), "nebula.GetMachinesForExpansionResponse")
}

func init() { proto.RegisterFile("proto/nebula.proto", fileDescriptor_df572f1cba94e643) }

var fileDescriptor_df572f1cba94e643 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x4b, 0x4d, 0x2a, 0xcd, 0x49, 0xd4, 0x03, 0x73, 0x84, 0xd8, 0x20, 0x3c, 0x25,
	0x7d, 0x2e, 0x69, 0xf7, 0xd4, 0x12, 0xdf, 0xc4, 0xe4, 0x8c, 0xcc, 0xbc, 0xd4, 0x62, 0xb7, 0xfc,
	0x22, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01,
	0x2e, 0xe6, 0xbc, 0xd2, 0x5c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x10, 0x53, 0x29, 0x90,
	0x4b, 0x06, 0xbb, 0x86, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x43, 0x2e, 0x8e, 0x5c, 0xa8,
	0xa4, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0xa8, 0x1e, 0xd4, 0x66, 0x3f, 0x30, 0x05, 0xd5,
	0x1a, 0x04, 0x57, 0xa6, 0xa4, 0xcf, 0xc5, 0x8b, 0x22, 0x25, 0xc4, 0xc7, 0xc5, 0x94, 0x59, 0x00,
	0xb6, 0x94, 0x33, 0x88, 0x29, 0xb3, 0x00, 0xcc, 0x4f, 0x91, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0e,
	0x62, 0xca, 0x4c, 0x51, 0x0a, 0xe2, 0x92, 0x43, 0x75, 0x83, 0x6b, 0x45, 0x41, 0x62, 0x5e, 0x71,
	0x66, 0x7e, 0x1e, 0xcc, 0xdd, 0x72, 0x5c, 0x5c, 0xa5, 0xc5, 0xa9, 0x29, 0x51, 0xf9, 0x79, 0xa9,
	0x9e, 0x2e, 0x60, 0x77, 0x30, 0x07, 0x21, 0x89, 0xc0, 0xfc, 0xc5, 0x84, 0xf0, 0x57, 0x08, 0x97,
	0x3c, 0x4e, 0x33, 0xc9, 0xf6, 0x9a, 0xd1, 0x23, 0x46, 0x98, 0xdf, 0x82, 0x53, 0x8b, 0xca, 0x32,
	0x93, 0x53, 0x85, 0x92, 0xb9, 0x44, 0xb0, 0x85, 0x9f, 0x90, 0x32, 0xcc, 0x28, 0x3c, 0xd1, 0x21,
	0xa5, 0x82, 0x5f, 0x11, 0xc4, 0x9d, 0x4a, 0x0c, 0x42, 0x39, 0x5c, 0xe2, 0x38, 0x3c, 0x23, 0xa4,
	0x86, 0xdd, 0x08, 0xf4, 0x10, 0x94, 0x52, 0x27, 0xa8, 0x0e, 0x66, 0x5b, 0x12, 0x1b, 0x38, 0x49,
	0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x9e, 0xf7, 0x51, 0x68, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NebulaServiceClient is the client API for NebulaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NebulaServiceClient interface {
	// Get the machines for create
	GetMachinesForCreate(ctx context.Context, in *GetMachinesForCreateRequest, opts ...grpc.CallOption) (*GetMachinesForCreateResponse, error)
	// Get the machines, but not in the used zone
	GetMachinesForExpansion(ctx context.Context, in *GetMachinesForExpansionRequest, opts ...grpc.CallOption) (*GetMachinesForExpansionResponse, error)
}

type nebulaServiceClient struct {
	cc *grpc.ClientConn
}

func NewNebulaServiceClient(cc *grpc.ClientConn) NebulaServiceClient {
	return &nebulaServiceClient{cc}
}

func (c *nebulaServiceClient) GetMachinesForCreate(ctx context.Context, in *GetMachinesForCreateRequest, opts ...grpc.CallOption) (*GetMachinesForCreateResponse, error) {
	out := new(GetMachinesForCreateResponse)
	err := c.cc.Invoke(ctx, "/nebula.NebulaService/GetMachinesForCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nebulaServiceClient) GetMachinesForExpansion(ctx context.Context, in *GetMachinesForExpansionRequest, opts ...grpc.CallOption) (*GetMachinesForExpansionResponse, error) {
	out := new(GetMachinesForExpansionResponse)
	err := c.cc.Invoke(ctx, "/nebula.NebulaService/GetMachinesForExpansion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NebulaServiceServer is the server API for NebulaService service.
type NebulaServiceServer interface {
	// Get the machines for create
	GetMachinesForCreate(context.Context, *GetMachinesForCreateRequest) (*GetMachinesForCreateResponse, error)
	// Get the machines, but not in the used zone
	GetMachinesForExpansion(context.Context, *GetMachinesForExpansionRequest) (*GetMachinesForExpansionResponse, error)
}

// UnimplementedNebulaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNebulaServiceServer struct {
}

func (*UnimplementedNebulaServiceServer) GetMachinesForCreate(ctx context.Context, req *GetMachinesForCreateRequest) (*GetMachinesForCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachinesForCreate not implemented")
}
func (*UnimplementedNebulaServiceServer) GetMachinesForExpansion(ctx context.Context, req *GetMachinesForExpansionRequest) (*GetMachinesForExpansionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachinesForExpansion not implemented")
}

func RegisterNebulaServiceServer(s *grpc.Server, srv NebulaServiceServer) {
	s.RegisterService(&_NebulaService_serviceDesc, srv)
}

func _NebulaService_GetMachinesForCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachinesForCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebulaServiceServer).GetMachinesForCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nebula.NebulaService/GetMachinesForCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebulaServiceServer).GetMachinesForCreate(ctx, req.(*GetMachinesForCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NebulaService_GetMachinesForExpansion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachinesForExpansionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NebulaServiceServer).GetMachinesForExpansion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nebula.NebulaService/GetMachinesForExpansion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NebulaServiceServer).GetMachinesForExpansion(ctx, req.(*GetMachinesForExpansionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NebulaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nebula.NebulaService",
	HandlerType: (*NebulaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMachinesForCreate",
			Handler:    _NebulaService_GetMachinesForCreate_Handler,
		},
		{
			MethodName: "GetMachinesForExpansion",
			Handler:    _NebulaService_GetMachinesForExpansion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/nebula.proto",
}
